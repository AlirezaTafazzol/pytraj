/* Generated by Cython 0.23.4 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [],
        "language": "c++"
    }
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_23_4"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
#define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__pytraj__c_action__c_action
#define __PYX_HAVE_API__pytraj__c_action__c_action
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "sys/types.h"
#include "unistd.h"
#include <vector>
#include "Grid.h"
#include "Matrix.h"
#include "Matrix_3x3.h"
#include "Vec3.h"
#include "ImagedAction.h"
#include "Box.h"
#include <utility>
#include <map>
#include "Atom.h"
#include "Residue.h"
#include "Molecule.h"
#include "ParameterTypes.h"
#include "CoordinateInfo.h"
#include "Topology.h"
#include "ParmFile.h"
#include "Frame.h"
#include "MetaData.h"
#include "DataSet.h"
#include "DataSet_1D.h"
#include "DataSet_double.h"
#include "DataSet_float.h"
#include "DataSet_integer.h"
#include "DataSet_string.h"
#include "DataSet_Vector.h"
#include "DataSet_2D.h"
#include "DataSet_MatrixDbl.h"
#include "DataSet_MatrixFlt.h"
#include "DataSet_3D.h"
#include "DataSet_GridFlt.h"
#include "DataSet_Modes.h"
#include "DataSet_RemLog.h"
#include "DataSet_Mat3x3.h"
#include "DataSet_Mesh.h"
#include "DataSet_Coords.h"
#include "DataSet_Coords_CRD.h"
#include "DataSet_Coords_REF.h"
#include "DataSet_Topology.h"
#include "DataSetList.h"
#include "DataFile.h"
#include "DataFileList.h"
#include "CpptrajState.h"
#include "Command.h"
#include "BaseIOtype.h"
#include "DispatchObject.h"
#include "AtomMask.h"
#include "FileName.h"
#include "CpptrajFile.h"
#include "NameType.h"
#include "ArgList.h"
#include "DataSet_Coords_TRJ.h"
#include "ActionState.h"
#include "Action.h"
#include "Action_Angle.h"
#include "Action_AreaPerMol.h"
#include "Action_AtomMap.h"
#include "Action_AtomicCorr.h"
#include "Action_AtomicFluct.h"
#include "Action_AutoImage.h"
#include "Action_Average.h"
#include "Action_Bounds.h"
#include "Action_Box.h"
#include "Action_Center.h"
#include "Action_Channel.h"
#include "Action_CheckChirality.h"
#include "Action_CheckStructure.h"
#include "Action_Closest.h"
#include "Action_ClusterDihedral.h"
#include "Action_Contacts.h"
#include "Action_CreateCrd.h"
#include "Action_DNAionTracker.h"
#include "Action_DSSP.h"
#include "Action_Density.h"
#include "Action_Diffusion.h"
#include "Action_Dihedral.h"
#include "Action_DihedralScan.h"
#include "Action_Dipole.h"
#include "Action_DistRmsd.h"
#include "Action_Distance.h"
#include "Action_Energy.h"
#include "Action_FilterByData.h"
#include "Action_FixAtomOrder.h"
#include "Action_Gist.h"
#include "Action_Grid.h"
#include "Action_GridFreeEnergy.h"
#include "Action_Hbond.h"
#include "Action_Image.h"
#include "Action_Jcoupling.h"
#include "Action_LESsplit.h"
#include "Action_LIE.h"
#include "Action_MakeStructure.h"
#include "Action_Mask.h"
#include "Action_Matrix.h"
#include "Action_MinImage.h"
#include "Action_Molsurf.h"
#include "Action_MultiDihedral.h"
#include "Action_MultiVector.h"
#include "Action_NAstruct.h"
#include "Action_NMRrst.h"
#include "Action_NativeContacts.h"
#include "Action_OrderParameter.h"
#include "Action_Outtraj.h"
#include "Action_PairDist.h"
#include "Action_Pairwise.h"
#include "Action_Principal.h"
#include "Action_Projection.h"
#include "Action_Pucker.h"
#include "Action_Radgyr.h"
#include "Action_Radial.h"
#include "Action_RandomizeIons.h"
#include "Action_ReplicateCell.h"
#include "Action_Rmsd.h"
#include "Action_Rotate.h"
#include "Action_RunningAvg.h"
#include "Action_STFC_Diffusion.h"
#include "Action_Scale.h"
#include "Action_SetVelocity.h"
#include "Action_Spam.h"
#include "Action_Strip.h"
#include "Action_Surf.h"
#include "Action_SymmetricRmsd.h"
#include "Action_Temperature.h"
#include "Action_Translate.h"
#include "Action_Unwrap.h"
#include "Action_Vector.h"
#include "Action_VelocityAutoCorr.h"
#include "Action_Volmap.h"
#include "Action_Volume.h"
#include "Action_Watershell.h"
#include "Action_Unstrip.h"
#include "pythread.h"
#include "stdlib.h"
#include "stdio.h"
#include "pystate.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "pytraj/c_action/c_action.pyx",
  "pytraj/c_action/c_action.pxd",
  "pytraj/frame.pxd",
  "stringsource",
  "pytraj/math/cpp_math.pxd",
  "pytraj/core/box.pxd",
  "pytraj/core/topology_objects.pxd",
  "pytraj/core/parameter_types.pxd",
  "pytraj/topology.pxd",
  "pytraj/datasets/c_datasets.pxd",
  "pytraj/datasets/c_datasetlist.pxd",
  "pytraj/datafiles/datafiles.pxd",
  "pytraj/core/c_core.pxd",
  "pytraj/c_traj/c_trajectory.pxd",
};
struct __pyx_memoryview_obj;
typedef struct {
  struct __pyx_memoryview_obj *memview;
  char *data;
  Py_ssize_t shape[8];
  Py_ssize_t strides[8];
  Py_ssize_t suboffsets[8];
} __Pyx_memviewslice;

#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;

#include <pythread.h>
#ifndef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 1
#endif
#define __pyx_atomic_int_type int
#if CYTHON_ATOMICS && __GNUC__ >= 4 && (__GNUC_MINOR__ > 1 ||\
                    (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL >= 2)) &&\
                    !defined(__i386__)
    #define __pyx_atomic_incr_aligned(value, lock) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_decr_aligned(value, lock) __sync_fetch_and_sub(value, 1)
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Using GNU atomics"
    #endif
#elif CYTHON_ATOMICS && defined(_MSC_VER) && 0
    #include <Windows.h>
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type LONG
    #define __pyx_atomic_incr_aligned(value, lock) InterlockedIncrement(value)
    #define __pyx_atomic_decr_aligned(value, lock) InterlockedDecrement(value)
    #ifdef __PYX_DEBUG_ATOMICS
        #pragma message ("Using MSVC atomics")
    #endif
#elif CYTHON_ATOMICS && (defined(__ICC) || defined(__INTEL_COMPILER)) && 0
    #define __pyx_atomic_incr_aligned(value, lock) _InterlockedIncrement(value)
    #define __pyx_atomic_decr_aligned(value, lock) _InterlockedDecrement(value)
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Using Intel atomics"
    #endif
#else
    #undef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 0
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Not using atomics"
    #endif
#endif
typedef volatile __pyx_atomic_int_type __pyx_atomic_int;
#if CYTHON_ATOMICS
    #define __pyx_add_acquisition_count(memview)\
             __pyx_atomic_incr_aligned(__pyx_get_slice_count_pointer(memview), memview->lock)
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_atomic_decr_aligned(__pyx_get_slice_count_pointer(memview), memview->lock)
#else
    #define __pyx_add_acquisition_count(memview)\
            __pyx_add_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_sub_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
#endif


/*--- Type declarations ---*/
struct __pyx_obj_6pytraj_4math_8cpp_math_Grid;
struct __pyx_obj_6pytraj_4math_8cpp_math_Matrix_3x3;
struct __pyx_obj_6pytraj_4math_8cpp_math_Vec3;
struct __pyx_obj_6pytraj_4math_8cpp_math_ImagedAction;
struct __pyx_obj_6pytraj_4core_3box_Box;
struct __pyx_obj_6pytraj_4core_16topology_objects_Atom;
struct __pyx_obj_6pytraj_4core_16topology_objects_Residue;
struct __pyx_obj_6pytraj_4core_16topology_objects_Molecule;
struct __pyx_obj_6pytraj_4core_15parameter_types_AngleType;
struct __pyx_obj_6pytraj_4core_15parameter_types_NonbondParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_LES_AtomType;
struct __pyx_obj_6pytraj_4core_15parameter_types_AngleParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_CmapType;
struct __pyx_obj_6pytraj_4core_15parameter_types_LES_ParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_HB_ParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_NonbondType;
struct __pyx_obj_6pytraj_4core_15parameter_types_ChamberParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_BondParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_CmapGridType;
struct __pyx_obj_6pytraj_4core_15parameter_types_DihedralType;
struct __pyx_obj_6pytraj_4core_15parameter_types_BondType;
struct __pyx_obj_6pytraj_4core_15parameter_types_CapParmType;
struct __pyx_obj_6pytraj_4core_15parameter_types_DihedralParmType;
struct __pyx_obj_6pytraj_8topology_Topology;
struct __pyx_obj_6pytraj_8topology_ParmFile;
struct __pyx_obj_6pytraj_5frame_Frame;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetDouble;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetFloat;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetInteger;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetString;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetVector;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset2D;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrixDouble;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrixFloat;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset3D;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetGridFloat;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetModes;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetRemLog;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_ReplicaFrame;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrix3x3;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMesh;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoords;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoordsCRD;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoordsRef;
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetTopology;
struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList;
struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFile;
struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList;
struct __pyx_obj_6pytraj_4core_6c_core_CpptrajState;
struct __pyx_obj_6pytraj_4core_6c_core_BaseIOtype;
struct __pyx_obj_6pytraj_4core_6c_core_DispatchObject;
struct __pyx_obj_6pytraj_4core_6c_core_FunctPtr;
struct __pyx_obj_6pytraj_4core_6c_core_AtomMask;
struct __pyx_obj_6pytraj_4core_6c_core_FileName;
struct __pyx_obj_6pytraj_4core_6c_core_CoordinateInfo;
struct __pyx_obj_6pytraj_4core_6c_core_CpptrajFile;
struct __pyx_obj_6pytraj_4core_6c_core_NameType;
struct __pyx_obj_6pytraj_4core_6c_core_ArgList;
struct __pyx_obj_6pytraj_6c_traj_12c_trajectory_TrajectoryCpptraj;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell;
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip;
struct __pyx_array_obj;
struct __pyx_MemviewEnum_obj;
struct __pyx_memoryview_obj;
struct __pyx_memoryviewslice_obj;

/* "core/topology_objects.pxd":9
 * 
 * 
 * ctypedef cppvector[int].const_iterator bond_iterator             # <<<<<<<<<<<<<<
 * ctypedef cppvector[int].const_iterator excluded_iterator
 * 
 */
typedef std::vector<int> ::const_iterator __pyx_t_6pytraj_4core_16topology_objects_bond_iterator;

/* "core/topology_objects.pxd":10
 * 
 * ctypedef cppvector[int].const_iterator bond_iterator
 * ctypedef cppvector[int].const_iterator excluded_iterator             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "Atom.h":
 */
typedef std::vector<int> ::const_iterator __pyx_t_6pytraj_4core_16topology_objects_excluded_iterator;

/* "core/parameter_types.pxd":5
 * from libcpp.string cimport string
 * 
 * ctypedef vector[_BondParmType] BondParmArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_BondType] BondArray
 * ctypedef vector[_AngleParmType] AngleParmArray
 */
typedef std::vector<BondParmType>  __pyx_t_6pytraj_4core_15parameter_types_BondParmArray;

/* "core/parameter_types.pxd":6
 * 
 * ctypedef vector[_BondParmType] BondParmArray
 * ctypedef vector[_BondType] BondArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_AngleParmType] AngleParmArray
 * ctypedef vector[_AngleType] AngleArray
 */
typedef std::vector<BondType>  __pyx_t_6pytraj_4core_15parameter_types_BondArray;

/* "core/parameter_types.pxd":7
 * ctypedef vector[_BondParmType] BondParmArray
 * ctypedef vector[_BondType] BondArray
 * ctypedef vector[_AngleParmType] AngleParmArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_AngleType] AngleArray
 * ctypedef vector[_DihedralParmType] DihedralParmArray
 */
typedef std::vector<AngleParmType>  __pyx_t_6pytraj_4core_15parameter_types_AngleParmArray;

/* "core/parameter_types.pxd":8
 * ctypedef vector[_BondType] BondArray
 * ctypedef vector[_AngleParmType] AngleParmArray
 * ctypedef vector[_AngleType] AngleArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_DihedralParmType] DihedralParmArray
 * ctypedef vector[_DihedralType] DihedralArray
 */
typedef std::vector<AngleType>  __pyx_t_6pytraj_4core_15parameter_types_AngleArray;

/* "core/parameter_types.pxd":9
 * ctypedef vector[_AngleParmType] AngleParmArray
 * ctypedef vector[_AngleType] AngleArray
 * ctypedef vector[_DihedralParmType] DihedralParmArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_DihedralType] DihedralArray
 * ctypedef vector[_HB_ParmType] HB_ParmArray
 */
typedef std::vector<DihedralParmType>  __pyx_t_6pytraj_4core_15parameter_types_DihedralParmArray;

/* "core/parameter_types.pxd":10
 * ctypedef vector[_AngleType] AngleArray
 * ctypedef vector[_DihedralParmType] DihedralParmArray
 * ctypedef vector[_DihedralType] DihedralArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_HB_ParmType] HB_ParmArray
 * ctypedef vector[_NonbondType] NonbondArray
 */
typedef std::vector<DihedralType>  __pyx_t_6pytraj_4core_15parameter_types_DihedralArray;

/* "core/parameter_types.pxd":11
 * ctypedef vector[_DihedralParmType] DihedralParmArray
 * ctypedef vector[_DihedralType] DihedralArray
 * ctypedef vector[_HB_ParmType] HB_ParmArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_NonbondType] NonbondArray
 * ctypedef vector[_LES_AtomType] LES_Array
 */
typedef std::vector<HB_ParmType>  __pyx_t_6pytraj_4core_15parameter_types_HB_ParmArray;

/* "core/parameter_types.pxd":12
 * ctypedef vector[_DihedralType] DihedralArray
 * ctypedef vector[_HB_ParmType] HB_ParmArray
 * ctypedef vector[_NonbondType] NonbondArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_LES_AtomType] LES_Array
 * ctypedef vector[_CmapGridType] CmapGridArray
 */
typedef std::vector<NonbondType>  __pyx_t_6pytraj_4core_15parameter_types_NonbondArray;

/* "core/parameter_types.pxd":13
 * ctypedef vector[_HB_ParmType] HB_ParmArray
 * ctypedef vector[_NonbondType] NonbondArray
 * ctypedef vector[_LES_AtomType] LES_Array             # <<<<<<<<<<<<<<
 * ctypedef vector[_CmapGridType] CmapGridArray
 * ctypedef vector[_CmapType] CmapArray
 */
typedef std::vector<LES_AtomType>  __pyx_t_6pytraj_4core_15parameter_types_LES_Array;

/* "core/parameter_types.pxd":14
 * ctypedef vector[_NonbondType] NonbondArray
 * ctypedef vector[_LES_AtomType] LES_Array
 * ctypedef vector[_CmapGridType] CmapGridArray             # <<<<<<<<<<<<<<
 * ctypedef vector[_CmapType] CmapArray
 * 
 */
typedef std::vector<CmapGridType>  __pyx_t_6pytraj_4core_15parameter_types_CmapGridArray;

/* "core/parameter_types.pxd":15
 * ctypedef vector[_LES_AtomType] LES_Array
 * ctypedef vector[_CmapGridType] CmapGridArray
 * ctypedef vector[_CmapType] CmapArray             # <<<<<<<<<<<<<<
 * 
 * # should I need to define fused type?
 */
typedef std::vector<CmapType>  __pyx_t_6pytraj_4core_15parameter_types_CmapArray;

/* "topology.pxd":14
 * 
 * 
 * ctypedef cppvector[_Atom].const_iterator atom_iterator             # <<<<<<<<<<<<<<
 * ctypedef cppvector[_Residue].const_iterator res_iterator
 * ctypedef cppvector[_Molecule].const_iterator mol_iterator
 */
typedef std::vector<Atom> ::const_iterator __pyx_t_6pytraj_8topology_atom_iterator;

/* "topology.pxd":15
 * 
 * ctypedef cppvector[_Atom].const_iterator atom_iterator
 * ctypedef cppvector[_Residue].const_iterator res_iterator             # <<<<<<<<<<<<<<
 * ctypedef cppvector[_Molecule].const_iterator mol_iterator
 * 
 */
typedef std::vector<Residue> ::const_iterator __pyx_t_6pytraj_8topology_res_iterator;

/* "topology.pxd":16
 * ctypedef cppvector[_Atom].const_iterator atom_iterator
 * ctypedef cppvector[_Residue].const_iterator res_iterator
 * ctypedef cppvector[_Molecule].const_iterator mol_iterator             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "CoordinateInfo.h":
 */
typedef std::vector<Molecule> ::const_iterator __pyx_t_6pytraj_8topology_mol_iterator;

/* "frame.pxd":11
 * from .core.c_core cimport _CoordinateInfo, CoordinateInfo, _AtomMask, AtomMask
 * 
 * ctypedef vector[float] CRDtype             # <<<<<<<<<<<<<<
 * ctypedef vector[double] Darray
 * 
 */
typedef std::vector<float>  __pyx_t_6pytraj_5frame_CRDtype;

/* "frame.pxd":12
 * 
 * ctypedef vector[float] CRDtype
 * ctypedef vector[double] Darray             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "Frame.h" nogil:
 */
typedef std::vector<double>  __pyx_t_6pytraj_5frame_Darray;

/* "datasets/c_datasets.pxd":13
 * 
 * 
 * ctypedef vector[size_t] SizeArray             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "MetaData.h":
 */
typedef std::vector<size_t>  __pyx_t_6pytraj_8datasets_10c_datasets_SizeArray;

/* "datasets/c_datasets.pxd":190
 * 
 * #ctypedef Matrix[double].iterator iterator
 * ctypedef vector[double] Darray             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "DataSet_MatrixDbl.h":
 */
typedef std::vector<double>  __pyx_t_6pytraj_8datasets_10c_datasets_Darray;

/* "datasets/c_datasets.pxd":314
 *     cdef public bint _own_memory
 * 
 * ctypedef cmap[double, int] TcmapType             # <<<<<<<<<<<<<<
 * cdef extern from "DataSet_RemLog.h":
 *     cdef cppclass _DatasetRemLog "DataSet_RemLog":
 */
typedef std::map<double,int>  __pyx_t_6pytraj_8datasets_10c_datasets_TcmapType;

/* "datasets/c_datasetlist.pxd":8
 * from ..cpp_vector cimport vector as cppvector
 * 
 * ctypedef cppvector[_Dataset*] DataListType             # <<<<<<<<<<<<<<
 * ctypedef cppvector[_Dataset*].const_iterator const_iterator
 * 
 */
typedef std::vector<DataSet *>  __pyx_t_6pytraj_8datasets_13c_datasetlist_DataListType;

/* "datasets/c_datasetlist.pxd":9
 * 
 * ctypedef cppvector[_Dataset*] DataListType
 * ctypedef cppvector[_Dataset*].const_iterator const_iterator             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "DataSetList.h":
 */
typedef std::vector<DataSet *> ::const_iterator __pyx_t_6pytraj_8datasets_13c_datasetlist_const_iterator;

/* "core/c_core.pxd":12
 * from ..datasets.c_datasetlist cimport _DatasetList, DatasetList
 * 
 * ctypedef _BaseIOtype* (*AllocatorType)()             # <<<<<<<<<<<<<<
 * ctypedef void (*HelpType)()
 * 
 */
typedef BaseIOtype *(*__pyx_t_6pytraj_4core_6c_core_AllocatorType)(void);

/* "core/c_core.pxd":13
 * 
 * ctypedef _BaseIOtype* (*AllocatorType)()
 * ctypedef void (*HelpType)()             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "CpptrajState.h":
 */
typedef void (*__pyx_t_6pytraj_4core_6c_core_HelpType)(void);

/* "core/c_core.pxd":61
 *     cdef _BaseIOtype* baseptr0
 * 
 * ctypedef _DispatchObject* (*DispatchAllocatorType)()             # <<<<<<<<<<<<<<
 * cdef extern from "DispatchObject.h":
 *     cdef cppclass _DispatchObject "DispatchObject":
 */
typedef DispatchObject *(*__pyx_t_6pytraj_4core_6c_core_DispatchAllocatorType)(void);

/* "math/cpp_math.pxd":28
 *         #iterator end()
 * 
 * cdef class Grid:             # <<<<<<<<<<<<<<
 *     pass
 *     cdef _Grid[float]* thisptr
 */
struct __pyx_obj_6pytraj_4math_8cpp_math_Grid {
  PyObject_HEAD
  Grid<float>  *thisptr;
};


/* "math/cpp_math.pxd":87
 *         double * Dptr()
 * 
 * cdef class Matrix_3x3:             # <<<<<<<<<<<<<<
 *     cdef _Matrix_3x3* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4math_8cpp_math_Matrix_3x3 {
  PyObject_HEAD
  Matrix_3x3 *thisptr;
};


/* "math/cpp_math.pxd":129
 *         double * Dptr()
 * 
 * cdef class Vec3:             # <<<<<<<<<<<<<<
 *     cdef _Vec3* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_4math_8cpp_math_Vec3 {
  PyObject_HEAD
  Vec3 *thisptr;
  int _own_memory;
};


/* "math/cpp_math.pxd":143
 *         ImageType()
 * 
 * cdef class ImagedAction:             # <<<<<<<<<<<<<<
 *     cdef _ImagedAction* thisptr
 */
struct __pyx_obj_6pytraj_4math_8cpp_math_ImagedAction {
  PyObject_HEAD
  ImagedAction *thisptr;
};


/* "box.pxd":47
 *         double& index_opr "operator[]"(int idx)
 * 
 * cdef class Box:             # <<<<<<<<<<<<<<
 *     cdef _Box* thisptr
 */
struct __pyx_obj_6pytraj_4core_3box_Box {
  PyObject_HEAD
  Box *thisptr;
};


/* "core/topology_objects.pxd":60
 * 
 * 
 * cdef class Atom:             # <<<<<<<<<<<<<<
 *     cdef _Atom* thisptr
 *     cdef int _index
 */
struct __pyx_obj_6pytraj_4core_16topology_objects_Atom {
  PyObject_HEAD
  Atom *thisptr;
  int _index;
  PyObject *resname;
  int own_memory;
};


/* "core/topology_objects.pxd":84
 *         inline bint NameIsSolvent() const
 * 
 * cdef class Residue:             # <<<<<<<<<<<<<<
 *     cdef _Residue* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_16topology_objects_Residue {
  PyObject_HEAD
  Residue *thisptr;
};


/* "core/topology_objects.pxd":103
 *         inline int NumAtoms() const
 * 
 * cdef class Molecule:             # <<<<<<<<<<<<<<
 *     cdef _Molecule* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_16topology_objects_Molecule {
  PyObject_HEAD
  Molecule *thisptr;
};


/* "core/parameter_types.pxd":187
 * 
 * 
 * cdef class AngleType:             # <<<<<<<<<<<<<<
 *     cdef _AngleType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_AngleType {
  PyObject_HEAD
  AngleType *thisptr;
};


/* "core/parameter_types.pxd":190
 *     cdef _AngleType* thisptr
 * 
 * cdef class NonbondParmType:             # <<<<<<<<<<<<<<
 *     cdef _NonbondParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_NonbondParmType {
  PyObject_HEAD
  NonbondParmType *thisptr;
};


/* "core/parameter_types.pxd":193
 *     cdef _NonbondParmType* thisptr
 * 
 * cdef class LES_AtomType:             # <<<<<<<<<<<<<<
 *     cdef _LES_AtomType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_LES_AtomType {
  PyObject_HEAD
  LES_AtomType *thisptr;
};


/* "core/parameter_types.pxd":196
 *     cdef _LES_AtomType* thisptr
 * 
 * cdef class AngleParmType:             # <<<<<<<<<<<<<<
 *     cdef _AngleParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_AngleParmType {
  PyObject_HEAD
  AngleParmType *thisptr;
};


/* "core/parameter_types.pxd":199
 *     cdef _AngleParmType* thisptr
 * 
 * cdef class CmapType:             # <<<<<<<<<<<<<<
 *     cdef _CmapType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_CmapType {
  PyObject_HEAD
  CmapType *thisptr;
};


/* "core/parameter_types.pxd":202
 *     cdef _CmapType* thisptr
 * 
 * cdef class LES_ParmType:             # <<<<<<<<<<<<<<
 *     cdef _LES_ParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_LES_ParmType {
  PyObject_HEAD
  LES_ParmType *thisptr;
};


/* "core/parameter_types.pxd":205
 *     cdef _LES_ParmType* thisptr
 * 
 * cdef class HB_ParmType:             # <<<<<<<<<<<<<<
 *     cdef _HB_ParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_HB_ParmType {
  PyObject_HEAD
  HB_ParmType *thisptr;
};


/* "core/parameter_types.pxd":208
 *     cdef _HB_ParmType* thisptr
 * 
 * cdef class NonbondType:             # <<<<<<<<<<<<<<
 *     cdef _NonbondType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_NonbondType {
  PyObject_HEAD
  NonbondType *thisptr;
};


/* "core/parameter_types.pxd":211
 *     cdef _NonbondType* thisptr
 * 
 * cdef class ChamberParmType:             # <<<<<<<<<<<<<<
 *     cdef _ChamberParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_ChamberParmType {
  PyObject_HEAD
  ChamberParmType *thisptr;
};


/* "core/parameter_types.pxd":214
 *     cdef _ChamberParmType* thisptr
 * 
 * cdef class BondParmType:             # <<<<<<<<<<<<<<
 *     cdef _BondParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_BondParmType {
  PyObject_HEAD
  BondParmType *thisptr;
};


/* "core/parameter_types.pxd":217
 *     cdef _BondParmType* thisptr
 * 
 * cdef class CmapGridType:             # <<<<<<<<<<<<<<
 *     cdef _CmapGridType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_CmapGridType {
  PyObject_HEAD
  CmapGridType *thisptr;
};


/* "core/parameter_types.pxd":220
 *     cdef _CmapGridType* thisptr
 * 
 * cdef class DihedralType:             # <<<<<<<<<<<<<<
 *     cdef _DihedralType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_DihedralType {
  PyObject_HEAD
  DihedralType *thisptr;
};


/* "core/parameter_types.pxd":223
 *     cdef _DihedralType* thisptr
 * 
 * cdef class BondType:             # <<<<<<<<<<<<<<
 *     cdef _BondType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_BondType {
  PyObject_HEAD
  BondType *thisptr;
};


/* "core/parameter_types.pxd":226
 *     cdef _BondType* thisptr
 * 
 * cdef class CapParmType:             # <<<<<<<<<<<<<<
 *     cdef _CapParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_CapParmType {
  PyObject_HEAD
  CapParmType *thisptr;
};


/* "core/parameter_types.pxd":229
 *     cdef _CapParmType* thisptr
 * 
 * cdef class DihedralParmType:             # <<<<<<<<<<<<<<
 *     cdef _DihedralParmType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_15parameter_types_DihedralParmType {
  PyObject_HEAD
  DihedralParmType *thisptr;
};


/* "topology.pxd":146
 *         double GetVDWradius(int) except +
 * 
 * cdef class Topology:             # <<<<<<<<<<<<<<
 *     cdef _Topology* thisptr
 *     cdef public bint _own_memory
 */
struct __pyx_obj_6pytraj_8topology_Topology {
  PyObject_HEAD
  Topology *thisptr;
  int _own_memory;
};


/* "topology.pxd":168
 * 
 * 
 * cdef class ParmFile:             # <<<<<<<<<<<<<<
 *     cdef _ParmFile* thisptr
 */
struct __pyx_obj_6pytraj_8topology_ParmFile {
  PyObject_HEAD
  ParmFile *thisptr;
};


/* "frame.pxd":113
 * 
 * 
 * cdef class Frame:             # <<<<<<<<<<<<<<
 *     cdef _Frame* thisptr
 *     cdef public bint _own_memory
 */
struct __pyx_obj_6pytraj_5frame_Frame {
  PyObject_HEAD
  struct __pyx_vtabstruct_6pytraj_5frame_Frame *__pyx_vtab;
  Frame *thisptr;
  int _own_memory;
  PyObject *_top;
  PyObject *_as_view;
};


/* "datasets/c_datasets.pxd":44
 *         int SetMeta(_MetaData&)
 * 
 * cdef class Dataset:             # <<<<<<<<<<<<<<
 *     cdef _Dataset* baseptr0
 *     cdef public object _base
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset {
  PyObject_HEAD
  DataSet *baseptr0;
  PyObject *_base;
};


/* "datasets/c_datasets.pxd":68
 * 
 * 
 * cdef class Dataset1D (Dataset):             # <<<<<<<<<<<<<<
 *     # baseptr0 is from Dataset
 *     cdef _Dataset1D* baseptr_1
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_1D *baseptr_1;
};


/* "datasets/c_datasets.pxd":96
 * 
 * 
 * cdef class DatasetDouble (Dataset1D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetDouble* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetDouble {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D __pyx_base;
  DataSet_double *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":111
 *         void Resize(size_t)
 * 
 * cdef class DatasetFloat (Dataset1D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetFloat* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetFloat {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D __pyx_base;
  DataSet_float *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":127
 *         void Add( size_t, const void* )
 * 
 * cdef class DatasetInteger (Dataset1D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetInteger* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetInteger {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D __pyx_base;
  DataSet_integer *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":140
 *         int Size()
 * 
 * cdef class DatasetString(Dataset1D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetString* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetString {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D __pyx_base;
  DataSet_string *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":157
 *         void AddVxyz(const _Vec3& v, const _Vec3& c)
 * 
 * cdef class DatasetVector (Dataset):             # <<<<<<<<<<<<<<
 *     cdef _DatasetVector* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetVector {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_Vector *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":185
 *         const char * MatrixOutputString(MatrixType m)
 * 
 * cdef class Dataset2D (Dataset):             # <<<<<<<<<<<<<<
 *     cdef _Dataset2D* baseptr_1
 * 
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset2D {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_2D *baseptr_1;
};


/* "datasets/c_datasets.pxd":226
 * 
 * 
 * cdef class DatasetMatrixDouble (Dataset2D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetMatrixDouble* thisptr
 *     cdef public bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrixDouble {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset2D __pyx_base;
  DataSet_MatrixDbl *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":239
 * 
 * 
 * cdef class DatasetMatrixFloat(Dataset2D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetMatrixFloat * thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrixFloat {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset2D __pyx_base;
  DataSet_MatrixFlt *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":260
 *         inline double MZ() const
 * 
 * cdef class Dataset3D (Dataset):             # <<<<<<<<<<<<<<
 *     cdef _Dataset3D* baseptr_1
 * 
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset3D {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_3D *baseptr_1;
};


/* "datasets/c_datasets.pxd":280
 *         long int CalcIndex(int i, int j, int k) const
 * 
 * cdef class DatasetGridFloat (Dataset3D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetGridFloat* thisptr
 *     cdef public bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetGridFloat {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset3D __pyx_base;
  DataSet_GridFlt *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":310
 *         bint IsReduced() const
 * 
 * cdef class DatasetModes (Dataset):             # <<<<<<<<<<<<<<
 *     cdef _DatasetModes* thisptr
 *     cdef public bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetModes {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_Modes *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":342
 * 
 * 
 * cdef class DatasetRemLog:             # <<<<<<<<<<<<<<
 *     cdef _DatasetRemLog* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetRemLog {
  PyObject_HEAD
  DataSet_RemLog *thisptr;
};


/* "datasets/c_datasets.pxd":345
 *     cdef _DatasetRemLog* thisptr
 * 
 * cdef class ReplicaFrame:             # <<<<<<<<<<<<<<
 *     cdef _ReplicaFrame* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_ReplicaFrame {
  PyObject_HEAD
  DataSet_RemLog::ReplicaFrame *thisptr;
};


/* "datasets/c_datasets.pxd":363
 * 
 * 
 * cdef class DatasetMatrix3x3(Dataset):             # <<<<<<<<<<<<<<
 *     cdef _DatasetMatrix3x3* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrix3x3 {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_Mat3x3 *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":387
 *         int LinearRegression(double&, double&, double&, bint) const
 * 
 * cdef class DatasetMesh(Dataset1D):             # <<<<<<<<<<<<<<
 *     cdef _DatasetMesh* thisptr
 *     cdef public bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMesh {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D __pyx_base;
  DataSet_Mesh *thisptr;
  int _own_memory;
};


/* "datasets/c_datasets.pxd":412
 * 
 * 
 * cdef class DatasetCoords (Dataset):             # <<<<<<<<<<<<<<
 *     # Dataset has baseptr0
 *     cdef _DatasetCoords* baseptr_1
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoords {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_Coords *baseptr_1;
  struct __pyx_obj_6pytraj_8topology_Topology *_top;
  int _own_memory;
  PyObject *tmpfarray;
};


/* "datasets/c_datasets.pxd":439
 * 
 * 
 * cdef class DatasetCoordsCRD (DatasetCoords):             # <<<<<<<<<<<<<<
 *     cdef _DatasetCoordsCRD* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoordsCRD {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoords __pyx_base;
  DataSet_Coords_CRD *thisptr;
};


/* "datasets/c_datasets.pxd":460
 *         #void SetCRD(int idx, _Frame& fIn)
 * 
 * cdef class DatasetCoordsRef (DatasetCoords):             # <<<<<<<<<<<<<<
 *     cdef _DatasetCoordsRef* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoordsRef {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoords __pyx_base;
  DataSet_Coords_REF *thisptr;
};


/* "datasets/c_datasets.pxd":476
 * 
 * 
 * cdef class DatasetTopology (Dataset):             # <<<<<<<<<<<<<<
 *     cdef _DatasetTopology* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetTopology {
  struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset __pyx_base;
  DataSet_Topology *thisptr;
  int _own_memory;
};


/* "datasets/c_datasetlist.pxd":50
 * 
 * 
 * cdef class DatasetList:             # <<<<<<<<<<<<<<
 *     cdef _DatasetList* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList {
  PyObject_HEAD
  DataSetList *thisptr;
  int _own_memory;
  PyObject *_parent_lists;
};


/* "datafiles/datafiles.pxd":46
 * 
 * 
 * cdef class DataFile:             # <<<<<<<<<<<<<<
 *     cdef _DataFile* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFile {
  PyObject_HEAD
  DataFile *thisptr;
  int _own_memory;
};


/* "datafiles/datafiles.pxd":71
 * 
 * 
 * cdef class DataFileList:             # <<<<<<<<<<<<<<
 *     cdef _DataFileList* thisptr
 *     cdef bint _own_memory
 */
struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList {
  PyObject_HEAD
  DataFileList *thisptr;
  int _own_memory;
};


/* "core/c_core.pxd":36
 *         bint EmptyState()
 * 
 * cdef class CpptrajState:             # <<<<<<<<<<<<<<
 *     cdef _CpptrajState* thisptr
 *     cdef public DataFileList datafilelist
 */
struct __pyx_obj_6pytraj_4core_6c_core_CpptrajState {
  PyObject_HEAD
  CpptrajState *thisptr;
  struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *datafilelist;
  struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *datasetlist;
};


/* "core/c_core.pxd":58
 *         pass
 * 
 * cdef class BaseIOtype:             # <<<<<<<<<<<<<<
 *     cdef _BaseIOtype* baseptr0
 * 
 */
struct __pyx_obj_6pytraj_4core_6c_core_BaseIOtype {
  PyObject_HEAD
  BaseIOtype *baseptr0;
};


/* "core/c_core.pxd":66
 *         pass
 * 
 * cdef class DispatchObject:             # <<<<<<<<<<<<<<
 *     cdef _DispatchObject* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_6c_core_DispatchObject {
  PyObject_HEAD
  DispatchObject *thisptr;
};


/* "core/c_core.pxd":70
 * 
 * # dummy class to hold function pointer
 * cdef class FunctPtr:             # <<<<<<<<<<<<<<
 *     cdef DispatchAllocatorType ptr
 *     # used for BaseIOtype
 */
struct __pyx_obj_6pytraj_4core_6c_core_FunctPtr {
  PyObject_HEAD
  __pyx_t_6pytraj_4core_6c_core_DispatchAllocatorType ptr;
  __pyx_t_6pytraj_4core_6c_core_AllocatorType allocptr;
};


/* "core/c_core.pxd":124
 * #    string
 * 
 * cdef class AtomMask:             # <<<<<<<<<<<<<<
 *     cdef _AtomMask* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_6c_core_AtomMask {
  PyObject_HEAD
  AtomMask *thisptr;
};


/* "core/c_core.pxd":146
 *         bint empty()
 * 
 * cdef class FileName:             # <<<<<<<<<<<<<<
 *     cdef _FileName* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_6c_core_FileName {
  PyObject_HEAD
  FileName *thisptr;
};


/* "core/c_core.pxd":165
 *         void SetBox(const _Box& b)
 * 
 * cdef class CoordinateInfo:             # <<<<<<<<<<<<<<
 *     cdef _CoordinateInfo* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_6c_core_CoordinateInfo {
  PyObject_HEAD
  CoordinateInfo *thisptr;
};


/* "core/c_core.pxd":213
 *         #off_t Tell()
 * 
 * cdef class CpptrajFile:             # <<<<<<<<<<<<<<
 *     cdef _CpptrajFile* thisptr
 * # distutil: language = c++
 */
struct __pyx_obj_6pytraj_4core_6c_core_CpptrajFile {
  PyObject_HEAD
  CpptrajFile *thisptr;
};


/* "core/c_core.pxd":237
 * 
 * 
 * cdef class NameType:             # <<<<<<<<<<<<<<
 *         cdef _NameType* thisptr
 * 
 */
struct __pyx_obj_6pytraj_4core_6c_core_NameType {
  PyObject_HEAD
  NameType *thisptr;
};


/* "core/c_core.pxd":281
 *         bint Contains(const char *) const
 * 
 * cdef class ArgList:             # <<<<<<<<<<<<<<
 *     cdef _ArgList* thisptr
 */
struct __pyx_obj_6pytraj_4core_6c_core_ArgList {
  PyObject_HEAD
  ArgList *thisptr;
};


/* "c_traj/c_trajectory.pxd":24
 *         _Topology* TopPtr()
 * 
 * cdef class TrajectoryCpptraj:             # <<<<<<<<<<<<<<
 *     cdef Topology _top
 *     cdef _TrajectoryCpptraj* thisptr
 */
struct __pyx_obj_6pytraj_6c_traj_12c_trajectory_TrajectoryCpptraj {
  PyObject_HEAD
  struct __pyx_obj_6pytraj_8topology_Topology *_top;
  DataSet_Coords_TRJ *thisptr;
  PyObject *tmpfarray;
  PyObject *_filelist;
  PyObject *_base;
  int _own_memory;
};


/* "pytraj/c_action/c_action.pxd":60
 * 
 * 
 * cdef class Action:             # <<<<<<<<<<<<<<
 *     cdef _Action* baseptr
 *     cdef public int n_frames
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action {
  PyObject_HEAD
  Action *baseptr;
  int n_frames;
  int top_is_processed;
  PyObject *top;
  PyObject *_dslist;
  PyObject *_dflist;
  PyObject *_command;
  int own_memory;
};


/* "pytraj/c_action/c_action.pxd":79
 * 
 * 
 * cdef class Action_Angle (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Angle* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Angle *thisptr;
};


/* "pytraj/c_action/c_action.pxd":90
 * 
 * 
 * cdef class Action_AreaPerMol (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_AreaPerMol* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_AreaPerMol *thisptr;
};


/* "pytraj/c_action/c_action.pxd":101
 * 
 * 
 * cdef class Action_AtomMap (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_AtomMap* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_AtomMap *thisptr;
};


/* "pytraj/c_action/c_action.pxd":112
 * 
 * 
 * cdef class Action_AtomicCorr (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_AtomicCorr* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_AtomicCorr *thisptr;
};


/* "pytraj/c_action/c_action.pxd":123
 * 
 * 
 * cdef class Action_AtomicFluct (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_AtomicFluct* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_AtomicFluct *thisptr;
};


/* "pytraj/c_action/c_action.pxd":135
 * 
 * 
 * cdef class Action_AutoImage (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_AutoImage* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_AutoImage *thisptr;
};


/* "pytraj/c_action/c_action.pxd":147
 * 
 * 
 * cdef class Action_Average (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Average* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Average *thisptr;
};


/* "pytraj/c_action/c_action.pxd":159
 * 
 * 
 * cdef class Action_Bounds (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Bounds* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Bounds *thisptr;
};


/* "pytraj/c_action/c_action.pxd":171
 * 
 * 
 * cdef class Action_Box (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Box* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Box *thisptr;
};


/* "pytraj/c_action/c_action.pxd":183
 * 
 * 
 * cdef class Action_Center (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Center* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Center *thisptr;
};


/* "pytraj/c_action/c_action.pxd":195
 * 
 * 
 * cdef class Action_Channel (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Channel* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Channel *thisptr;
};


/* "pytraj/c_action/c_action.pxd":206
 * 
 * 
 * cdef class Action_CheckChirality (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_CheckChirality* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_CheckChirality *thisptr;
};


/* "pytraj/c_action/c_action.pxd":218
 * 
 * 
 * cdef class Action_CheckStructure (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_CheckStructure* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_CheckStructure *thisptr;
};


/* "pytraj/c_action/c_action.pxd":229
 * 
 * 
 * cdef class Action_Closest (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Closest* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Closest *thisptr;
};


/* "pytraj/c_action/c_action.pxd":240
 * 
 * 
 * cdef class Action_ClusterDihedral (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_ClusterDihedral* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_ClusterDihedral *thisptr;
};


/* "pytraj/c_action/c_action.pxd":251
 * 
 * 
 * cdef class Action_Contacts (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Contacts* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Contacts *thisptr;
};


/* "pytraj/c_action/c_action.pxd":262
 * 
 * 
 * cdef class Action_CreateCrd (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_CreateCrd* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_CreateCrd *thisptr;
};


/* "pytraj/c_action/c_action.pxd":274
 * 
 * 
 * cdef class Action_DNAionTracker (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_DNAionTracker* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_DNAionTracker *thisptr;
};


/* "pytraj/c_action/c_action.pxd":286
 * 
 * 
 * cdef class Action_DSSP (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_DSSP* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_DSSP *thisptr;
};


/* "pytraj/c_action/c_action.pxd":298
 * 
 * 
 * cdef class Action_Density (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Density* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Density *thisptr;
};


/* "pytraj/c_action/c_action.pxd":310
 * 
 * 
 * cdef class Action_Diffusion (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Diffusion* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Diffusion *thisptr;
};


/* "pytraj/c_action/c_action.pxd":321
 * 
 * 
 * cdef class Action_Dihedral(Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Dihedral* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Dihedral *thisptr;
};


/* "pytraj/c_action/c_action.pxd":331
 *         void Help()
 * 
 * cdef class Action_DihedralScan (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_DihedralScan* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_DihedralScan *thisptr;
};


/* "pytraj/c_action/c_action.pxd":342
 * 
 * 
 * cdef class Action_Dipole (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Dipole* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Dipole *thisptr;
};


/* "pytraj/c_action/c_action.pxd":353
 * 
 * 
 * cdef class Action_DistRmsd (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_DistRmsd* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_DistRmsd *thisptr;
};


/* "pytraj/c_action/c_action.pxd":365
 * 
 * 
 * cdef class Action_Distance (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Distance* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Distance *thisptr;
};


/* "pytraj/c_action/c_action.pxd":377
 * 
 * 
 * cdef class Action_Energy (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Energy* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Energy *thisptr;
};


/* "pytraj/c_action/c_action.pxd":389
 * 
 * 
 * cdef class Action_FilterByData (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_FilterByData* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_FilterByData *thisptr;
};


/* "pytraj/c_action/c_action.pxd":401
 * 
 * 
 * cdef class Action_FixAtomOrder (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_FixAtomOrder* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_FixAtomOrder *thisptr;
};


/* "pytraj/c_action/c_action.pxd":413
 * 
 * 
 * cdef class Action_Gist (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Gist* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Gist *thisptr;
};


/* "pytraj/c_action/c_action.pxd":425
 * 
 * 
 * cdef class Action_Grid (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Grid* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Grid *thisptr;
};


/* "pytraj/c_action/c_action.pxd":437
 * 
 * 
 * cdef class Action_GridFreeEnergy (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_GridFreeEnergy* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_GridFreeEnergy *thisptr;
};


/* "pytraj/c_action/c_action.pxd":448
 * 
 * 
 * cdef class Action_Hbond (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Hbond* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Hbond *thisptr;
};


/* "pytraj/c_action/c_action.pxd":459
 * 
 * 
 * cdef class Action_Image (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Image* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Image *thisptr;
};


/* "pytraj/c_action/c_action.pxd":471
 * 
 * 
 * cdef class Action_Jcoupling (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Jcoupling* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Jcoupling *thisptr;
};


/* "pytraj/c_action/c_action.pxd":482
 * 
 * 
 * cdef class Action_LESsplit (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_LESsplit* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_LESsplit *thisptr;
};


/* "pytraj/c_action/c_action.pxd":494
 * 
 * 
 * cdef class Action_LIE (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_LIE* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_LIE *thisptr;
};


/* "pytraj/c_action/c_action.pxd":505
 *         void Help()
 * 
 * cdef class Action_MakeStructure (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_MakeStructure* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_MakeStructure *thisptr;
};


/* "pytraj/c_action/c_action.pxd":516
 * 
 * 
 * cdef class Action_Mask (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Mask* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Mask *thisptr;
};


/* "pytraj/c_action/c_action.pxd":527
 * 
 * 
 * cdef class Action_Matrix (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Matrix* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Matrix *thisptr;
};


/* "pytraj/c_action/c_action.pxd":539
 * 
 * 
 * cdef class Action_MinImage (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_MinImage* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_MinImage *thisptr;
};


/* "pytraj/c_action/c_action.pxd":551
 * 
 * 
 * cdef class Action_Molsurf (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Molsurf* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Molsurf *thisptr;
};


/* "pytraj/c_action/c_action.pxd":563
 * 
 * 
 * cdef class Action_MultiDihedral (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_MultiDihedral* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_MultiDihedral *thisptr;
};


/* "pytraj/c_action/c_action.pxd":575
 * 
 * 
 * cdef class Action_MultiVector (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_MultiVector* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_MultiVector *thisptr;
};


/* "pytraj/c_action/c_action.pxd":587
 * 
 * 
 * cdef class Action_NAstruct (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_NAstruct* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_NAstruct *thisptr;
};


/* "pytraj/c_action/c_action.pxd":599
 * 
 * 
 * cdef class Action_NMRrst (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_NMRrst* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_NMRrst *thisptr;
};


/* "pytraj/c_action/c_action.pxd":624
 * 
 * 
 * cdef class Action_NativeContacts (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_NativeContacts* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_NativeContacts *thisptr;
};


/* "pytraj/c_action/c_action.pxd":635
 * 
 * 
 * cdef class Action_OrderParameter (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_OrderParameter* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_OrderParameter *thisptr;
};


/* "pytraj/c_action/c_action.pxd":647
 * 
 * 
 * cdef class Action_Outtraj (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Outtraj* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Outtraj *thisptr;
};


/* "pytraj/c_action/c_action.pxd":659
 * 
 * 
 * cdef class Action_PairDist (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_PairDist* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_PairDist *thisptr;
};


/* "pytraj/c_action/c_action.pxd":671
 * 
 * 
 * cdef class Action_Pairwise (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Pairwise* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Pairwise *thisptr;
};


/* "pytraj/c_action/c_action.pxd":682
 * 
 * 
 * cdef class Action_Principal (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Principal* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Principal *thisptr;
};


/* "pytraj/c_action/c_action.pxd":694
 * 
 * 
 * cdef class Action_Projection (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Projection* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Projection *thisptr;
};


/* "pytraj/c_action/c_action.pxd":706
 * 
 * 
 * cdef class Action_Pucker (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Pucker* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Pucker *thisptr;
};


/* "pytraj/c_action/c_action.pxd":718
 * 
 * 
 * cdef class Action_Radgyr (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Radgyr* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Radgyr *thisptr;
};


/* "pytraj/c_action/c_action.pxd":730
 * 
 * 
 * cdef class Action_Radial (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Radial* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Radial *thisptr;
};


/* "pytraj/c_action/c_action.pxd":742
 * 
 * 
 * cdef class Action_RandomizeIons (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_RandomizeIons* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_RandomizeIons *thisptr;
};


/* "pytraj/c_action/c_action.pxd":754
 * 
 * 
 * cdef class Action_ReplicateCell (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_ReplicateCell* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_ReplicateCell *thisptr;
};


/* "pytraj/c_action/c_action.pxd":764
 *         void Help()
 * 
 * cdef class Action_Rmsd(Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Rmsd* thisptr
 *     #cdef DispatchAllocatorType func
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Rmsd *thisptr;
};


/* "pytraj/c_action/c_action.pxd":776
 * 
 * 
 * cdef class Action_Rotate (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Rotate* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Rotate *thisptr;
};


/* "pytraj/c_action/c_action.pxd":788
 * 
 * 
 * cdef class Action_RunningAvg (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_RunningAvg* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_RunningAvg *thisptr;
};


/* "pytraj/c_action/c_action.pxd":800
 * 
 * 
 * cdef class Action_STFC_Diffusion (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_STFC_Diffusion* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_STFC_Diffusion *thisptr;
};


/* "pytraj/c_action/c_action.pxd":812
 * 
 * 
 * cdef class Action_Scale (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Scale* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Scale *thisptr;
};


/* "pytraj/c_action/c_action.pxd":824
 * 
 * 
 * cdef class Action_SetVelocity (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_SetVelocity* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_SetVelocity *thisptr;
};


/* "pytraj/c_action/c_action.pxd":836
 * 
 * 
 * cdef class Action_Spam (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Spam* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Spam *thisptr;
};


/* "pytraj/c_action/c_action.pxd":848
 * 
 * 
 * cdef class Action_Strip (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Strip* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Strip *thisptr;
};


/* "pytraj/c_action/c_action.pxd":859
 * 
 * 
 * cdef class Action_Surf (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Surf* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Surf *thisptr;
};


/* "pytraj/c_action/c_action.pxd":871
 * 
 * 
 * cdef class Action_SymmetricRmsd (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_SymmetricRmsd* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_SymmetricRmsd *thisptr;
};


/* "pytraj/c_action/c_action.pxd":883
 * 
 * 
 * cdef class Action_Temperature (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Temperature* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Temperature *thisptr;
};


/* "pytraj/c_action/c_action.pxd":895
 * 
 * 
 * cdef class Action_Translate (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Translate* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Translate *thisptr;
};


/* "pytraj/c_action/c_action.pxd":907
 * 
 * 
 * cdef class Action_Unwrap (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Unwrap* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Unwrap *thisptr;
};


/* "pytraj/c_action/c_action.pxd":919
 * 
 * 
 * cdef class Action_Vector (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Vector* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Vector *thisptr;
};


/* "pytraj/c_action/c_action.pxd":931
 * 
 * 
 * cdef class Action_VelocityAutoCorr (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_VelocityAutoCorr* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_VelocityAutoCorr *thisptr;
};


/* "pytraj/c_action/c_action.pxd":943
 * 
 * 
 * cdef class Action_Volmap (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Volmap* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Volmap *thisptr;
};


/* "pytraj/c_action/c_action.pxd":955
 * 
 * 
 * cdef class Action_Volume (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Volume* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Volume *thisptr;
};


/* "pytraj/c_action/c_action.pxd":966
 * 
 * 
 * cdef class Action_Watershell (Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Watershell* thisptr
 * 
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Watershell *thisptr;
};


/* "pytraj/c_action/c_action.pxd":976
 *         void Help()
 * 
 * cdef class Action_Unstrip(Action):             # <<<<<<<<<<<<<<
 *     cdef _Action_Unstrip* thisptr
 */
struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action __pyx_base;
  Action_Unstrip *thisptr;
};


/* "View.MemoryView":101
 * 
 * @cname("__pyx_array")
 * cdef class array:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */
struct __pyx_array_obj {
  PyObject_HEAD
  char *data;
  Py_ssize_t len;
  char *format;
  int ndim;
  Py_ssize_t *_shape;
  Py_ssize_t *_strides;
  Py_ssize_t itemsize;
  PyObject *mode;
  PyObject *_format;
  void (*callback_free_data)(void *);
  int free_data;
  int dtype_is_object;
};


/* "View.MemoryView":271
 * 
 * @cname('__pyx_MemviewEnum')
 * cdef class Enum(object):             # <<<<<<<<<<<<<<
 *     cdef object name
 *     def __init__(self, name):
 */
struct __pyx_MemviewEnum_obj {
  PyObject_HEAD
  PyObject *name;
};


/* "View.MemoryView":304
 * 
 * @cname('__pyx_memoryview')
 * cdef class memoryview(object):             # <<<<<<<<<<<<<<
 * 
 *     cdef object obj
 */
struct __pyx_memoryview_obj {
  PyObject_HEAD
  struct __pyx_vtabstruct_memoryview *__pyx_vtab;
  PyObject *obj;
  PyObject *_size;
  PyObject *_array_interface;
  PyThread_type_lock lock;
  __pyx_atomic_int acquisition_count[2];
  __pyx_atomic_int *acquisition_count_aligned_p;
  Py_buffer view;
  int flags;
  int dtype_is_object;
  __Pyx_TypeInfo *typeinfo;
};


/* "View.MemoryView":923
 * 
 * @cname('__pyx_memoryviewslice')
 * cdef class _memoryviewslice(memoryview):             # <<<<<<<<<<<<<<
 *     "Internal class for passing memoryview slices to Python"
 * 
 */
struct __pyx_memoryviewslice_obj {
  struct __pyx_memoryview_obj __pyx_base;
  __Pyx_memviewslice from_slice;
  PyObject *from_object;
  PyObject *(*to_object_func)(char *);
  int (*to_dtype_func)(char *, PyObject *);
};



/* "frame.pxd":113
 * 
 * 
 * cdef class Frame:             # <<<<<<<<<<<<<<
 *     cdef _Frame* thisptr
 *     cdef public bint _own_memory
 */

struct __pyx_vtabstruct_6pytraj_5frame_Frame {
  PyObject *(*_cy_update_atoms)(struct __pyx_obj_6pytraj_5frame_Frame *, __Pyx_memviewslice, __Pyx_memviewslice, int);
  void (*_append_xyz_1d)(struct __pyx_obj_6pytraj_5frame_Frame *, __Pyx_memviewslice);
  void (*_append_xyz_2d)(struct __pyx_obj_6pytraj_5frame_Frame *, __Pyx_memviewslice);
};
static struct __pyx_vtabstruct_6pytraj_5frame_Frame *__pyx_vtabptr_6pytraj_5frame_Frame;


/* "View.MemoryView":304
 * 
 * @cname('__pyx_memoryview')
 * cdef class memoryview(object):             # <<<<<<<<<<<<<<
 * 
 *     cdef object obj
 */

struct __pyx_vtabstruct_memoryview {
  char *(*get_item_pointer)(struct __pyx_memoryview_obj *, PyObject *);
  PyObject *(*is_slice)(struct __pyx_memoryview_obj *, PyObject *);
  PyObject *(*setitem_slice_assignment)(struct __pyx_memoryview_obj *, PyObject *, PyObject *);
  PyObject *(*setitem_slice_assign_scalar)(struct __pyx_memoryview_obj *, struct __pyx_memoryview_obj *, PyObject *);
  PyObject *(*setitem_indexed)(struct __pyx_memoryview_obj *, PyObject *, PyObject *);
  PyObject *(*convert_item_to_object)(struct __pyx_memoryview_obj *, char *);
  PyObject *(*assign_item_from_object)(struct __pyx_memoryview_obj *, char *, PyObject *);
};
static struct __pyx_vtabstruct_memoryview *__pyx_vtabptr_memoryview;


/* "View.MemoryView":923
 * 
 * @cname('__pyx_memoryviewslice')
 * cdef class _memoryviewslice(memoryview):             # <<<<<<<<<<<<<<
 *     "Internal class for passing memoryview slices to Python"
 * 
 */

struct __pyx_vtabstruct__memoryviewslice {
  struct __pyx_vtabstruct_memoryview __pyx_base;
};
static struct __pyx_vtabstruct__memoryviewslice *__pyx_vtabptr__memoryviewslice;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

static CYTHON_INLINE Py_ssize_t __Pyx_div_Py_ssize_t(Py_ssize_t, Py_ssize_t);

#define UNARY_NEG_WOULD_OVERFLOW(x)\
        (((x) < 0) & ((unsigned long)(x) == 0-(unsigned long)(x)))

static CYTHON_UNUSED int __pyx_array_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static PyObject *get_memview(PyObject *__pyx_v_self); /*proto*/
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb);
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb);

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

static CYTHON_UNUSED int __pyx_memoryview_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static PyObject *__pyx_memoryview_transpose(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview__get__base(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_shape(PyObject *__pyx_v_self); /*proto*/
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

static PyObject *__pyx_memoryview_get_strides(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_suboffsets(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_ndim(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_itemsize(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_nbytes(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_size(PyObject *__pyx_v_self); /*proto*/
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

static CYTHON_INLINE int __Pyx_PyList_Extend(PyObject* L, PyObject* v) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject* none = _PyList_Extend((PyListObject*)L, v);
    if (unlikely(!none))
        return -1;
    Py_DECREF(none);
    return 0;
#else
    return PyList_SetSlice(L, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, v);
#endif
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

static CYTHON_INLINE long __Pyx_div_long(long, long);

static PyObject *__pyx_memoryviewslice__get__base(PyObject *__pyx_v_self); /*proto*/
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static void* __Pyx_GetVtable(PyObject *dict);

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Action_3a__3a_RetType(Action::RetType value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};
static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};

static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);

#define __Pyx_BUF_MAX_NDIMS %(BUF_MAX_NDIMS)d
#define __Pyx_MEMVIEW_DIRECT   1
#define __Pyx_MEMVIEW_PTR      2
#define __Pyx_MEMVIEW_FULL     4
#define __Pyx_MEMVIEW_CONTIG   8
#define __Pyx_MEMVIEW_STRIDED  16
#define __Pyx_MEMVIEW_FOLLOW   32
#define __Pyx_IS_C_CONTIG 1
#define __Pyx_IS_F_CONTIG 2
static int __Pyx_init_memviewslice(
                struct __pyx_memoryview_obj *memview,
                int ndim,
                __Pyx_memviewslice *memviewslice,
                int memview_is_new_reference);
static CYTHON_INLINE int __pyx_add_acquisition_count_locked(
    __pyx_atomic_int *acquisition_count, PyThread_type_lock lock);
static CYTHON_INLINE int __pyx_sub_acquisition_count_locked(
    __pyx_atomic_int *acquisition_count, PyThread_type_lock lock);
#define __pyx_get_slice_count_pointer(memview) (memview->acquisition_count_aligned_p)
#define __pyx_get_slice_count(memview) (*__pyx_get_slice_count_pointer(memview))
#define __PYX_INC_MEMVIEW(slice, have_gil) __Pyx_INC_MEMVIEW(slice, have_gil, __LINE__)
#define __PYX_XDEC_MEMVIEW(slice, have_gil) __Pyx_XDEC_MEMVIEW(slice, have_gil, __LINE__)
static CYTHON_INLINE void __Pyx_INC_MEMVIEW(__Pyx_memviewslice *, int, int);
static CYTHON_INLINE void __Pyx_XDEC_MEMVIEW(__Pyx_memviewslice *, int, int);

static int __pyx_memviewslice_is_contig(const __Pyx_memviewslice *mvs,
                                        char order, int ndim);

static int __pyx_slices_overlap(__Pyx_memviewslice *slice1,
                                __Pyx_memviewslice *slice2,
                                int ndim, size_t itemsize);

static __Pyx_memviewslice
__pyx_memoryview_copy_new_contig(const __Pyx_memviewslice *from_mvs,
                                 const char *mode, int ndim,
                                 size_t sizeof_dtype, int contig_flag,
                                 int dtype_is_object);

static CYTHON_INLINE PyObject *__pyx_capsule_create(void *p, const char *sig);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static char *__pyx_memoryview_get_item_pointer(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index); /* proto*/
static PyObject *__pyx_memoryview_is_slice(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj); /* proto*/
static PyObject *__pyx_memoryview_setitem_slice_assignment(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_dst, PyObject *__pyx_v_src); /* proto*/
static PyObject *__pyx_memoryview_setitem_slice_assign_scalar(struct __pyx_memoryview_obj *__pyx_v_self, struct __pyx_memoryview_obj *__pyx_v_dst, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_memoryview_setitem_indexed(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_memoryview_convert_item_to_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp); /* proto*/
static PyObject *__pyx_memoryview_assign_item_from_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_memoryviewslice_convert_item_to_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp); /* proto*/
static PyObject *__pyx_memoryviewslice_assign_item_from_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'posix.types' */

/* Module declarations from 'posix.unistd' */

/* Module declarations from 'pytraj.cpp_vector' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'pytraj.math.cpp_math' */
static PyTypeObject *__pyx_ptype_6pytraj_4math_8cpp_math_Grid = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4math_8cpp_math_Matrix_3x3 = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4math_8cpp_math_Vec3 = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4math_8cpp_math_ImagedAction = 0;

/* Module declarations from 'pytraj.core.box' */
static PyTypeObject *__pyx_ptype_6pytraj_4core_3box_Box = 0;

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.map' */

/* Module declarations from 'pytraj.core.topology_objects' */
static PyTypeObject *__pyx_ptype_6pytraj_4core_16topology_objects_Atom = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_16topology_objects_Residue = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_16topology_objects_Molecule = 0;

/* Module declarations from 'pytraj.core.parameter_types' */
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_AngleType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_NonbondParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_LES_AtomType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_AngleParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_CmapType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_LES_ParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_HB_ParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_NonbondType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_ChamberParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_BondParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_CmapGridType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_DihedralType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_BondType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_CapParmType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_15parameter_types_DihedralParmType = 0;

/* Module declarations from 'pytraj.topology' */
static PyTypeObject *__pyx_ptype_6pytraj_8topology_Topology = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8topology_ParmFile = 0;

/* Module declarations from 'pytraj.frame' */
static PyTypeObject *__pyx_ptype_6pytraj_5frame_Frame = 0;

/* Module declarations from 'pytraj.core.coordinfo' */

/* Module declarations from 'pytraj.datasets.c_datasets' */
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset1D = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetDouble = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetFloat = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetInteger = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetString = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetVector = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset2D = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrixDouble = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrixFloat = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset3D = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetGridFloat = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetModes = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetRemLog = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_ReplicaFrame = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrix3x3 = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMesh = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoords = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoordsCRD = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoordsRef = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetTopology = 0;

/* Module declarations from 'pytraj.datasets.c_datasetlist' */
static PyTypeObject *__pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList = 0;

/* Module declarations from 'pytraj.datafiles.datafiles' */
static PyTypeObject *__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFile = 0;
static PyTypeObject *__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList = 0;

/* Module declarations from 'pytraj.core.c_core' */
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_CpptrajState = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_BaseIOtype = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_DispatchObject = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_FunctPtr = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_AtomMask = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_FileName = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_CoordinateInfo = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_CpptrajFile = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_NameType = 0;
static PyTypeObject *__pyx_ptype_6pytraj_4core_6c_core_ArgList = 0;

/* Module declarations from 'pytraj.c_traj.c_trajectory' */
static PyTypeObject *__pyx_ptype_6pytraj_6c_traj_12c_trajectory_TrajectoryCpptraj = 0;

/* Module declarations from 'pytraj.c_action.c_action' */
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Angle = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_AreaPerMol = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_AtomMap = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_AtomicCorr = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_AtomicFluct = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_AutoImage = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Average = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Bounds = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Box = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Center = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Channel = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_CheckChirality = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_CheckStructure = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Closest = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_ClusterDihedral = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Contacts = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_CreateCrd = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_DNAionTracker = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_DSSP = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Density = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Diffusion = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Dihedral = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_DihedralScan = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Dipole = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_DistRmsd = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Distance = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Energy = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_FilterByData = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_FixAtomOrder = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Gist = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Grid = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_GridFreeEnergy = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Hbond = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Image = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Jcoupling = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_LESsplit = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_LIE = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_MakeStructure = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Mask = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Matrix = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_MinImage = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Molsurf = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_MultiDihedral = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_MultiVector = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_NAstruct = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_NMRrst = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_NativeContacts = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_OrderParameter = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Outtraj = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_PairDist = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Pairwise = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Principal = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Projection = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Pucker = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Radgyr = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Radial = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_RandomizeIons = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_ReplicateCell = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Rmsd = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Rotate = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_RunningAvg = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_STFC_Diffusion = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Scale = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_SetVelocity = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Spam = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Strip = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Surf = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_SymmetricRmsd = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Temperature = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Translate = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Unwrap = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Vector = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Volmap = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Volume = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Watershell = 0;
static PyTypeObject *__pyx_ptype_6pytraj_8c_action_8c_action_Action_Unstrip = 0;
static PyTypeObject *__pyx_array_type = 0;
static PyTypeObject *__pyx_MemviewEnum_type = 0;
static PyTypeObject *__pyx_memoryview_type = 0;
static PyTypeObject *__pyx_memoryviewslice_type = 0;
static PyObject *generic = 0;
static PyObject *strided = 0;
static PyObject *indirect = 0;
static PyObject *contiguous = 0;
static PyObject *indirect_contiguous = 0;
static struct __pyx_array_obj *__pyx_array_new(PyObject *, Py_ssize_t, char *, char *, char *); /*proto*/
static void *__pyx_align_pointer(void *, size_t); /*proto*/
static PyObject *__pyx_memoryview_new(PyObject *, int, int, __Pyx_TypeInfo *); /*proto*/
static CYTHON_INLINE int __pyx_memoryview_check(PyObject *); /*proto*/
static PyObject *_unellipsify(PyObject *, int); /*proto*/
static PyObject *assert_direct_dimensions(Py_ssize_t *, int); /*proto*/
static struct __pyx_memoryview_obj *__pyx_memview_slice(struct __pyx_memoryview_obj *, PyObject *); /*proto*/
static int __pyx_memoryview_slice_memviewslice(__Pyx_memviewslice *, Py_ssize_t, Py_ssize_t, Py_ssize_t, int, int, int *, Py_ssize_t, Py_ssize_t, Py_ssize_t, int, int, int, int); /*proto*/
static char *__pyx_pybuffer_index(Py_buffer *, char *, Py_ssize_t, Py_ssize_t); /*proto*/
static int __pyx_memslice_transpose(__Pyx_memviewslice *); /*proto*/
static PyObject *__pyx_memoryview_fromslice(__Pyx_memviewslice, int, PyObject *(*)(char *), int (*)(char *, PyObject *), int); /*proto*/
static __Pyx_memviewslice *__pyx_memoryview_get_slice_from_memoryview(struct __pyx_memoryview_obj *, __Pyx_memviewslice *); /*proto*/
static void __pyx_memoryview_slice_copy(struct __pyx_memoryview_obj *, __Pyx_memviewslice *); /*proto*/
static PyObject *__pyx_memoryview_copy_object(struct __pyx_memoryview_obj *); /*proto*/
static PyObject *__pyx_memoryview_copy_object_from_slice(struct __pyx_memoryview_obj *, __Pyx_memviewslice *); /*proto*/
static Py_ssize_t abs_py_ssize_t(Py_ssize_t); /*proto*/
static char __pyx_get_best_slice_order(__Pyx_memviewslice *, int); /*proto*/
static void _copy_strided_to_strided(char *, Py_ssize_t *, char *, Py_ssize_t *, Py_ssize_t *, Py_ssize_t *, int, size_t); /*proto*/
static void copy_strided_to_strided(__Pyx_memviewslice *, __Pyx_memviewslice *, int, size_t); /*proto*/
static Py_ssize_t __pyx_memoryview_slice_get_size(__Pyx_memviewslice *, int); /*proto*/
static Py_ssize_t __pyx_fill_contig_strides_array(Py_ssize_t *, Py_ssize_t *, Py_ssize_t, int, char); /*proto*/
static void *__pyx_memoryview_copy_data_to_temp(__Pyx_memviewslice *, __Pyx_memviewslice *, char, int); /*proto*/
static int __pyx_memoryview_err_extents(int, Py_ssize_t, Py_ssize_t); /*proto*/
static int __pyx_memoryview_err_dim(PyObject *, char *, int); /*proto*/
static int __pyx_memoryview_err(PyObject *, char *); /*proto*/
static int __pyx_memoryview_copy_contents(__Pyx_memviewslice, __Pyx_memviewslice, int, int, int); /*proto*/
static void __pyx_memoryview_broadcast_leading(__Pyx_memviewslice *, int, int); /*proto*/
static void __pyx_memoryview_refcount_copying(__Pyx_memviewslice *, int, int, int); /*proto*/
static void __pyx_memoryview_refcount_objects_in_slice_with_gil(char *, Py_ssize_t *, Py_ssize_t *, int, int); /*proto*/
static void __pyx_memoryview_refcount_objects_in_slice(char *, Py_ssize_t *, Py_ssize_t *, int, int); /*proto*/
static void __pyx_memoryview_slice_assign_scalar(__Pyx_memviewslice *, int, size_t, void *, int); /*proto*/
static void __pyx_memoryview__slice_assign_scalar(char *, Py_ssize_t *, Py_ssize_t *, int, size_t, void *); /*proto*/
#define __Pyx_MODULE_NAME "pytraj.c_action.c_action"
int __pyx_module_is_main_pytraj__c_action__c_action = 0;

/* Implementation of 'pytraj.c_action.c_action' */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_Ellipsis;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_id;
static PyObject *__pyx_builtin_IndexError;
static char __pyx_k_[] = "";
static char __pyx_k_O[] = "O";
static char __pyx_k_c[] = "c";
static char __pyx_k_id[] = "id";
static char __pyx_k_box[] = "box";
static char __pyx_k_get[] = "get";
static char __pyx_k_idx[] = "idx";
static char __pyx_k_obj[] = "obj";
static char __pyx_k_str[] = "__str__";
static char __pyx_k_top[] = "top";
static char __pyx_k_base[] = "base";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_mode[] = "mode";
static char __pyx_k_name[] = "__name__";
static char __pyx_k_ndim[] = "ndim";
static char __pyx_k_pack[] = "pack";
static char __pyx_k_size[] = "size";
static char __pyx_k_step[] = "step";
static char __pyx_k_stop[] = "stop";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_ASCII[] = "ASCII";
static char __pyx_k_class[] = "__class__";
static char __pyx_k_debug[] = "debug";
static char __pyx_k_error[] = "error";
static char __pyx_k_flags[] = "flags";
static char __pyx_k_range[] = "range";
static char __pyx_k_shape[] = "shape";
static char __pyx_k_start[] = "start";
static char __pyx_k_Action[] = "Action";
static char __pyx_k_dflist[] = "dflist";
static char __pyx_k_dslist[] = "dslist";
static char __pyx_k_encode[] = "encode";
static char __pyx_k_format[] = "format";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_master[] = "_master";
static char __pyx_k_name_2[] = "name";
static char __pyx_k_struct[] = "struct";
static char __pyx_k_unpack[] = "unpack";
static char __pyx_k_command[] = "command";
static char __pyx_k_compute[] = "compute";
static char __pyx_k_crdinfo[] = "crdinfo";
static char __pyx_k_fortran[] = "fortran";
static char __pyx_k_memview[] = "memview";
static char __pyx_k_Ellipsis[] = "Ellipsis";
static char __pyx_k_has_time[] = "has_time";
static char __pyx_k_itemsize[] = "itemsize";
static char __pyx_k_TypeError[] = "TypeError";
static char __pyx_k_enumerate[] = "enumerate";
static char __pyx_k_has_force[] = "has_force";
static char __pyx_k_IndexError[] = "IndexError";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_n_frames_t[] = "n_frames_t";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_read_input[] = "read_input";
static char __pyx_k_MemoryError[] = "MemoryError";
static char __pyx_k_get_new_top[] = "get_new_top";
static char __pyx_k_makesureABC[] = "makesureABC";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_has_velocity[] = "has_velocity";
static char __pyx_k_is_generator[] = "is_generator";
static char __pyx_k_n_frames_int[] = "n_frames: 'int'";
static char __pyx_k_post_process[] = "post_process";
static char __pyx_k_pytraj_utils[] = "pytraj.utils";
static char __pyx_k_string_types[] = "string_types";
static char __pyx_k_current_frame[] = "current_frame";
static char __pyx_k_dflist_object[] = "_dflist: object";
static char __pyx_k_dslist_object[] = "_dslist: object";
static char __pyx_k_get_new_frame[] = "get_new_frame";
static char __pyx_k_pyx_getbuffer[] = "__pyx_getbuffer";
static char __pyx_k_check_topology[] = "check_topology";
static char __pyx_k_command_object[] = "_command: object";
static char __pyx_k_allocate_buffer[] = "allocate_buffer";
static char __pyx_k_dtype_is_object[] = "dtype_is_object";
static char __pyx_k_iterframe_master[] = "iterframe_master";
static char __pyx_k_pytraj_decorators[] = "pytraj.decorators";
static char __pyx_k_strided_and_direct[] = "<strided and direct>";
static char __pyx_k_pytraj_externals_six[] = "pytraj.externals.six";
static char __pyx_k_strided_and_indirect[] = "<strided and indirect>";
static char __pyx_k_contiguous_and_direct[] = "<contiguous and direct>";
static char __pyx_k_index_is_out_of_range[] = "index is out of range";
static char __pyx_k_pytraj_shared_methods[] = "pytraj.shared_methods";
static char __pyx_k_MemoryView_of_r_object[] = "<MemoryView of %r object>";
static char __pyx_k_failed_to_setup_action[] = "failed to setup action";
static char __pyx_k_Action___call___line_57[] = "Action.__call__ (line 57)";
static char __pyx_k_MemoryView_of_r_at_0x_x[] = "<MemoryView of %r at 0x%x>";
static char __pyx_k_contiguous_and_indirect[] = "<contiguous and indirect>";
static char __pyx_k_Cannot_index_with_type_s[] = "Cannot index with type '%s'";
static char __pyx_k_getbuffer_obj_view_flags[] = "getbuffer(obj, view, flags)";
static char __pyx_k_Dimension_d_is_not_direct[] = "Dimension %d is not direct";
static char __pyx_k_Invalid_shape_in_axis_d_d[] = "Invalid shape in axis %d: %d.";
static char __pyx_k_Index_out_of_bounds_axis_d[] = "Index out of bounds (axis %d)";
static char __pyx_k_Step_may_not_be_zero_axis_d[] = "Step may not be zero (axis %d)";
static char __pyx_k_itemsize_0_for_cython_array[] = "itemsize <= 0 for cython.array";
static char __pyx_k_unable_to_allocate_array_data[] = "unable to allocate array data.";
static char __pyx_k_strided_and_direct_or_indirect[] = "<strided and direct or indirect>";
static char __pyx_k_from_pytraj_import_traj_io_load[] = "\n        >>> from pytraj import *\n        >>> traj = io.load(\"../tz2.nc\", \"../tz2.parm7\")\n        >>> dslist = DatasetList.DatasetList()\n        >>> adict['jcoupling'](\"outfile Jcoupling.dat kfile Karplus.txt\", traj[0], traj.top, dslist=dslist)\n        ";
static char __pyx_k_pytraj_actions_CpptrajActions_s[] = "<pytraj.actions.CpptrajActions.%s>";
static char __pyx_k_All_dimensions_preceding_dimensi[] = "All dimensions preceding dimension %d must be indexed and not sliced";
static char __pyx_k_Buffer_view_does_not_expose_stri[] = "Buffer view does not expose strides";
static char __pyx_k_Can_only_create_a_buffer_that_is[] = "Can only create a buffer that is contiguous in memory.";
static char __pyx_k_Cannot_transpose_memoryview_with[] = "Cannot transpose memoryview with indirect dimensions";
static char __pyx_k_Empty_shape_tuple_for_cython_arr[] = "Empty shape tuple for cython.array";
static char __pyx_k_Indirect_dimensions_not_supporte[] = "Indirect dimensions not supported";
static char __pyx_k_Invalid_mode_expected_c_or_fortr[] = "Invalid mode, expected 'c' or 'fortran', got %s";
static char __pyx_k_Out_of_bounds_on_buffer_access_a[] = "Out of bounds on buffer access (axis %d)";
static char __pyx_k_Unable_to_convert_item_to_object[] = "Unable to convert item to object";
static char __pyx_k_got_differing_extents_in_dimensi[] = "got differing extents in dimension %d (got %d and %d)";
static char __pyx_k_unable_to_allocate_shape_and_str[] = "unable to allocate shape and strides.";
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_n_s_ASCII;
static PyObject *__pyx_n_s_Action;
static PyObject *__pyx_kp_u_Action___call___line_57;
static PyObject *__pyx_kp_s_Buffer_view_does_not_expose_stri;
static PyObject *__pyx_kp_s_Can_only_create_a_buffer_that_is;
static PyObject *__pyx_kp_s_Cannot_index_with_type_s;
static PyObject *__pyx_n_s_Ellipsis;
static PyObject *__pyx_kp_s_Empty_shape_tuple_for_cython_arr;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_kp_s_Indirect_dimensions_not_supporte;
static PyObject *__pyx_kp_s_Invalid_mode_expected_c_or_fortr;
static PyObject *__pyx_kp_s_Invalid_shape_in_axis_d_d;
static PyObject *__pyx_n_s_MemoryError;
static PyObject *__pyx_kp_s_MemoryView_of_r_at_0x_x;
static PyObject *__pyx_kp_s_MemoryView_of_r_object;
static PyObject *__pyx_n_b_O;
static PyObject *__pyx_kp_s_Out_of_bounds_on_buffer_access_a;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_kp_s_Unable_to_convert_item_to_object;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_allocate_buffer;
static PyObject *__pyx_n_s_base;
static PyObject *__pyx_n_s_box;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_u_c;
static PyObject *__pyx_n_s_check_topology;
static PyObject *__pyx_n_s_class;
static PyObject *__pyx_n_s_command;
static PyObject *__pyx_n_s_compute;
static PyObject *__pyx_kp_s_contiguous_and_direct;
static PyObject *__pyx_kp_s_contiguous_and_indirect;
static PyObject *__pyx_n_s_crdinfo;
static PyObject *__pyx_n_s_current_frame;
static PyObject *__pyx_n_s_debug;
static PyObject *__pyx_n_s_dflist;
static PyObject *__pyx_n_s_dslist;
static PyObject *__pyx_n_s_dtype_is_object;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_error;
static PyObject *__pyx_kp_s_failed_to_setup_action;
static PyObject *__pyx_n_s_flags;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_fortran;
static PyObject *__pyx_n_u_fortran;
static PyObject *__pyx_kp_u_from_pytraj_import_traj_io_load;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_get_new_frame;
static PyObject *__pyx_n_s_get_new_top;
static PyObject *__pyx_kp_s_got_differing_extents_in_dimensi;
static PyObject *__pyx_n_s_has_force;
static PyObject *__pyx_n_s_has_time;
static PyObject *__pyx_n_s_has_velocity;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_idx;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_kp_s_index_is_out_of_range;
static PyObject *__pyx_n_s_is_generator;
static PyObject *__pyx_n_s_itemsize;
static PyObject *__pyx_kp_s_itemsize_0_for_cython_array;
static PyObject *__pyx_n_s_iterframe_master;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_makesureABC;
static PyObject *__pyx_n_s_master;
static PyObject *__pyx_n_s_memview;
static PyObject *__pyx_n_s_mode;
static PyObject *__pyx_n_s_n_frames_t;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_ndim;
static PyObject *__pyx_n_s_obj;
static PyObject *__pyx_n_s_pack;
static PyObject *__pyx_n_s_post_process;
static PyObject *__pyx_kp_s_pytraj_actions_CpptrajActions_s;
static PyObject *__pyx_n_s_pytraj_decorators;
static PyObject *__pyx_n_s_pytraj_externals_six;
static PyObject *__pyx_n_s_pytraj_shared_methods;
static PyObject *__pyx_n_s_pytraj_utils;
static PyObject *__pyx_n_s_pyx_getbuffer;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_read_input;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_start;
static PyObject *__pyx_n_s_step;
static PyObject *__pyx_n_s_stop;
static PyObject *__pyx_n_s_str;
static PyObject *__pyx_kp_s_strided_and_direct;
static PyObject *__pyx_kp_s_strided_and_direct_or_indirect;
static PyObject *__pyx_kp_s_strided_and_indirect;
static PyObject *__pyx_n_s_string_types;
static PyObject *__pyx_n_s_struct;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_top;
static PyObject *__pyx_kp_s_unable_to_allocate_array_data;
static PyObject *__pyx_kp_s_unable_to_allocate_shape_and_str;
static PyObject *__pyx_n_s_unpack;
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_2__init__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_command, struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_top, struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_v_dslist, struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_v_dflist); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_6Action_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_6__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_8__str__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_10__repr__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_12__call__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwd); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_14read_input(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_command, PyObject *__pyx_v_top, struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_v_dslist, struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_v_dflist, int __pyx_v_debug); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_16check_topology(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_top, PyObject *__pyx_v_crdinfo, PyObject *__pyx_v_n_frames_t, PyObject *__pyx_v_get_new_top); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_18compute(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_current_frame, int __pyx_v_idx, PyObject *__pyx_v_get_new_frame); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_20post_process(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_22_master(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_command, PyObject *__pyx_v_current_frame, PyObject *__pyx_v_top, PyObject *__pyx_v_dslist, PyObject *__pyx_v_dflist, int __pyx_v_debug); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_24reset_counter(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_8n_frames___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_8n_frames_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist_4__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist_4__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command_4__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Center_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Image_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Average_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_10Action_Box_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Density_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *__pyx_v_self); /* proto */
static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *__pyx_v_self); /* proto */
static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *__pyx_v_self); /* proto */
static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, PyObject *__pyx_v_format, PyObject *__pyx_v_mode, int __pyx_v_allocate_buffer); /* proto */
static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(struct __pyx_array_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(struct __pyx_array_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_5array_7memview___get__(struct __pyx_array_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__getattr__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_attr); /* proto */
static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__setitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value); /* proto */
static int __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(struct __pyx_MemviewEnum_obj *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(struct __pyx_MemviewEnum_obj *__pyx_v_self); /* proto */
static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_v_flags, int __pyx_v_dtype_is_object); /* proto */
static void __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /* proto */
static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(struct __pyx_memoryview_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static void __pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(struct __pyx_memoryviewslice_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(struct __pyx_memoryviewslice_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Angle(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AreaPerMol(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomMap(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomicCorr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomicFluct(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AutoImage(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Average(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Bounds(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Box(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Center(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Channel(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_CheckChirality(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_CheckStructure(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Closest(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_ClusterDihedral(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Contacts(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_CreateCrd(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DNAionTracker(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DSSP(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Density(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Diffusion(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Dihedral(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DihedralScan(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Dipole(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DistRmsd(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Distance(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Energy(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_FilterByData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_FixAtomOrder(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Gist(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Grid(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_GridFreeEnergy(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Hbond(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Image(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Jcoupling(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_LESsplit(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_LIE(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MakeStructure(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Mask(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Matrix(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MinImage(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Molsurf(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MultiDihedral(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MultiVector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_NAstruct(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_NMRrst(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_NativeContacts(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_OrderParameter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Outtraj(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_PairDist(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Pairwise(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Principal(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Projection(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Pucker(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Radgyr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Radial(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_RandomizeIons(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_ReplicateCell(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Rmsd(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Rotate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_RunningAvg(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_STFC_Diffusion(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Scale(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_SetVelocity(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Spam(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Strip(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Surf(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_SymmetricRmsd(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Temperature(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Translate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Unwrap(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Vector(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Volmap(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Volume(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Watershell(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Unstrip(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_array(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_Enum(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_memoryview(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new__memoryviewslice(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_neg_1;
static struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_k__2;
static PyObject *__pyx_k__3;
static struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_k__4;
static struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_k__5;
static struct __pyx_obj_6pytraj_8topology_Topology *__pyx_k__7;
static PyObject *__pyx_k__8;
static PyObject *__pyx_k__13;
static PyObject *__pyx_k__14;
static PyObject *__pyx_k__15;
static PyObject *__pyx_k__16;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_slice__28;
static PyObject *__pyx_slice__29;
static PyObject *__pyx_slice__30;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;

/* "pytraj/c_action/c_action.pyx":23
 *     '''
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # don't directly create instance of this ABC class.
 *         self.n_frames = 0
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":25
 *     def __cinit__(self):
 *         # don't directly create instance of this ABC class.
 *         self.n_frames = 0             # <<<<<<<<<<<<<<
 *         self.top_is_processed = False
 * 
 */
  __pyx_v_self->n_frames = 0;

  /* "pytraj/c_action/c_action.pyx":26
 *         # don't directly create instance of this ABC class.
 *         self.n_frames = 0
 *         self.top_is_processed = False             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, command='', Topology top=None, DatasetList dslist=None,
 */
  __pyx_v_self->top_is_processed = 0;

  /* "pytraj/c_action/c_action.pyx":23
 *     '''
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # don't directly create instance of this ABC class.
 *         self.n_frames = 0
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":28
 *         self.top_is_processed = False
 * 
 *     def __init__(self, command='', Topology top=None, DatasetList dslist=None,             # <<<<<<<<<<<<<<
 *                  DataFileList dflist=DataFileList()):
 *         # __init__ will be called after __cinit__
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_command = 0;
  struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_top = 0;
  struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_v_dslist = 0;
  struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_v_dflist = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_command,&__pyx_n_s_top,&__pyx_n_s_dslist,&__pyx_n_s_dflist,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)__pyx_kp_s_);
    values[1] = (PyObject *)((struct __pyx_obj_6pytraj_8topology_Topology *)Py_None);
    values[2] = (PyObject *)((struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *)Py_None);
    values[3] = (PyObject *)__pyx_k__2;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_command);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_top);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dslist);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dflist);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_command = values[0];
    __pyx_v_top = ((struct __pyx_obj_6pytraj_8topology_Topology *)values[1]);
    __pyx_v_dslist = ((struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *)values[2]);
    __pyx_v_dflist = ((struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_top), __pyx_ptype_6pytraj_8topology_Topology, 1, "top", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dslist), __pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList, 1, "dslist", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dflist), __pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList, 1, "dflist", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_2__init__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), __pyx_v_command, __pyx_v_top, __pyx_v_dslist, __pyx_v_dflist);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_2__init__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_command, struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_top, struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_v_dslist, struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_v_dflist) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pytraj/c_action/c_action.pyx":34
 *         # don't directly create instance of this ABC class.
 * 
 *         self._command = command             # <<<<<<<<<<<<<<
 *         self._dslist = dslist
 *         self._dflist = dflist
 */
  __Pyx_INCREF(__pyx_v_command);
  __Pyx_GIVEREF(__pyx_v_command);
  __Pyx_GOTREF(__pyx_v_self->_command);
  __Pyx_DECREF(__pyx_v_self->_command);
  __pyx_v_self->_command = __pyx_v_command;

  /* "pytraj/c_action/c_action.pyx":35
 * 
 *         self._command = command
 *         self._dslist = dslist             # <<<<<<<<<<<<<<
 *         self._dflist = dflist
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_dslist));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_dslist));
  __Pyx_GOTREF(__pyx_v_self->_dslist);
  __Pyx_DECREF(__pyx_v_self->_dslist);
  __pyx_v_self->_dslist = ((PyObject *)__pyx_v_dslist);

  /* "pytraj/c_action/c_action.pyx":36
 *         self._command = command
 *         self._dslist = dslist
 *         self._dflist = dflist             # <<<<<<<<<<<<<<
 * 
 *         if top is not None and dslist is not None:
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_dflist));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_dflist));
  __Pyx_GOTREF(__pyx_v_self->_dflist);
  __Pyx_DECREF(__pyx_v_self->_dflist);
  __pyx_v_self->_dflist = ((PyObject *)__pyx_v_dflist);

  /* "pytraj/c_action/c_action.pyx":38
 *         self._dflist = dflist
 * 
 *         if top is not None and dslist is not None:             # <<<<<<<<<<<<<<
 *             self.read_input(command, top=top, dslist=dslist, dflist=dflist)
 *             self.check_topology(top)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_top) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (((PyObject *)__pyx_v_dslist) != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":39
 * 
 *         if top is not None and dslist is not None:
 *             self.read_input(command, top=top, dslist=dslist, dflist=dflist)             # <<<<<<<<<<<<<<
 *             self.check_topology(top)
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read_input); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_command);
    __Pyx_GIVEREF(__pyx_v_command);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_command);
    __pyx_t_6 = PyDict_New(); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_top, ((PyObject *)__pyx_v_top)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_dslist, ((PyObject *)__pyx_v_dslist)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_dflist, ((PyObject *)__pyx_v_dflist)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "pytraj/c_action/c_action.pyx":40
 *         if top is not None and dslist is not None:
 *             self.read_input(command, top=top, dslist=dslist, dflist=dflist)
 *             self.check_topology(top)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_check_topology); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, ((PyObject *)__pyx_v_top)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_top));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_top));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_top));
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "pytraj/c_action/c_action.pyx":38
 *         self._dflist = dflist
 * 
 *         if top is not None and dslist is not None:             # <<<<<<<<<<<<<<
 *             self.read_input(command, top=top, dslist=dslist, dflist=dflist)
 *             self.check_topology(top)
 */
  }

  /* "pytraj/c_action/c_action.pyx":28
 *         self.top_is_processed = False
 * 
 *     def __init__(self, command='', Topology top=None, DatasetList dslist=None,             # <<<<<<<<<<<<<<
 *                  DataFileList dflist=DataFileList()):
 *         # __init__ will be called after __cinit__
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":42
 *             self.check_topology(top)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         # should I del pointer here or in subclass?
 *         #del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_6Action_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_6Action_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_6Action_4__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_6Action_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":47
 *         pass
 * 
 *     def __del__(self):             # <<<<<<<<<<<<<<
 *         del self.baseptr
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_7__del__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_6__del__[] = "Action.__del__(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_7__del__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_6__del__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_6__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);

  /* "pytraj/c_action/c_action.pyx":48
 * 
 *     def __del__(self):
 *         del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  delete __pyx_v_self->baseptr;

  /* "pytraj/c_action/c_action.pyx":47
 *         pass
 * 
 *     def __del__(self):             # <<<<<<<<<<<<<<
 *         del self.baseptr
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":50
 *         del self.baseptr
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         txt = "<pytraj.actions.CpptrajActions.%s>" % (self.__class__.__name__)
 *         return txt
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_8__str__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_8__str__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_v_txt = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "pytraj/c_action/c_action.pyx":51
 * 
 *     def __str__(self):
 *         txt = "<pytraj.actions.CpptrajActions.%s>" % (self.__class__.__name__)             # <<<<<<<<<<<<<<
 *         return txt
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_pytraj_actions_CpptrajActions_s, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_txt = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":52
 *     def __str__(self):
 *         txt = "<pytraj.actions.CpptrajActions.%s>" % (self.__class__.__name__)
 *         return txt             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_txt);
  __pyx_r = __pyx_v_txt;
  goto __pyx_L0;

  /* "pytraj/c_action/c_action.pyx":50
 *         del self.baseptr
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         txt = "<pytraj.actions.CpptrajActions.%s>" % (self.__class__.__name__)
 *         return txt
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_txt);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":54
 *         return txt
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return self.__str__()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_10__repr__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_10__repr__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pytraj/c_action/c_action.pyx":55
 * 
 *     def __repr__(self):
 *         return self.__str__()             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, *args, **kwd):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_str); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pytraj/c_action/c_action.pyx":54
 *         return txt
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return self.__str__()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":57
 *         return self.__str__()
 * 
 *     def __call__(self, *args, **kwd):             # <<<<<<<<<<<<<<
 *         """
 *         >>> from pytraj import *
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_12__call__[] = "\n        >>> from pytraj import *\n        >>> traj = io.load(\"../tz2.nc\", \"../tz2.parm7\")\n        >>> dslist = DatasetList.DatasetList()\n        >>> adict['jcoupling'](\"outfile Jcoupling.dat kfile Karplus.txt\", traj[0], traj.top, dslist=dslist)\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_6pytraj_8c_action_8c_action_6Action_12__call__;
#endif
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwd = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__call__", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwd = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwd)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwd);
  } else {
    __pyx_v_kwd = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_12__call__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), __pyx_v_args, __pyx_v_kwd);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwd);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_12__call__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwd) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "pytraj/c_action/c_action.pyx":64
 *         >>> adict['jcoupling']("outfile Jcoupling.dat kfile Karplus.txt", traj[0], traj.top, dslist=dslist)
 *         """
 *         return self._master(*args, **kwd)             # <<<<<<<<<<<<<<
 * 
 *     @makesureABC("Action")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_master); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, __pyx_v_kwd); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pytraj/c_action/c_action.pyx":57
 *         return self.__str__()
 * 
 *     def __call__(self, *args, **kwd):             # <<<<<<<<<<<<<<
 *         """
 *         >>> from pytraj import *
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":67
 * 
 *     @makesureABC("Action")
 *     def read_input(self, command='',             # <<<<<<<<<<<<<<
 *                    top=Topology(),
 *                    DatasetList dslist=DatasetList(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_15read_input(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_14read_input[] = "Action.read_input(self, command='', top=<\077\077?>, DatasetList dslist=<\077\077?>, DataFileList dflist=<\077\077?>, int debug=0)\n\n        Parameters\n        ----------\n        command : str\n            Type of actions, mask, ... (Get help: Action_Box().help())\n        top : Topology\n        dslist : DatasetList instance, default=DatasetList()\n        dflist : DataFileList instance, default=DataFileList()\n        debug : int, default=0\n            debug option from cpptraj. (Do we need this?)\n        ";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_15read_input(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_command = 0;
  PyObject *__pyx_v_top = 0;
  struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_v_dslist = 0;
  struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_v_dflist = 0;
  int __pyx_v_debug;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read_input (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_command,&__pyx_n_s_top,&__pyx_n_s_dslist,&__pyx_n_s_dflist,&__pyx_n_s_debug,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)__pyx_kp_s_);
    values[1] = __pyx_k__3;
    values[2] = (PyObject *)__pyx_k__4;
    values[3] = (PyObject *)__pyx_k__5;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_command);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_top);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dslist);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dflist);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_debug);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "read_input") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_command = values[0];
    __pyx_v_top = values[1];
    __pyx_v_dslist = ((struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *)values[2]);
    __pyx_v_dflist = ((struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *)values[3]);
    if (values[4]) {
      __pyx_v_debug = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_debug == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_debug = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("read_input", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.read_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dslist), __pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList, 1, "dslist", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dflist), __pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList, 1, "dflist", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_14read_input(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), __pyx_v_command, __pyx_v_top, __pyx_v_dslist, __pyx_v_dflist, __pyx_v_debug);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_14read_input(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_command, PyObject *__pyx_v_top, struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *__pyx_v_dslist, struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *__pyx_v_dflist, int __pyx_v_debug) {
  struct __pyx_obj_6pytraj_4core_6c_core_ArgList *__pyx_v_arglist = 0;
  Action::RetType __pyx_v_i_fail;
  ActionInit __pyx_v_actioninit_;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read_input", 0);

  /* "pytraj/c_action/c_action.pyx":86
 *         cdef RetType i_fail
 *         cdef _ActionInit actioninit_
 *         actioninit_ = _ActionInit(dslist.thisptr[0], dflist.thisptr[0])             # <<<<<<<<<<<<<<
 * 
 *         self.top = top
 */
  __pyx_v_actioninit_ = ActionInit((__pyx_v_dslist->thisptr[0]), (__pyx_v_dflist->thisptr[0]));

  /* "pytraj/c_action/c_action.pyx":88
 *         actioninit_ = _ActionInit(dslist.thisptr[0], dflist.thisptr[0])
 * 
 *         self.top = top             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(command, string_types):
 */
  __Pyx_INCREF(__pyx_v_top);
  __Pyx_GIVEREF(__pyx_v_top);
  __Pyx_GOTREF(__pyx_v_self->top);
  __Pyx_DECREF(__pyx_v_self->top);
  __pyx_v_self->top = __pyx_v_top;

  /* "pytraj/c_action/c_action.pyx":90
 *         self.top = top
 * 
 *         if isinstance(command, string_types):             # <<<<<<<<<<<<<<
 *             #command = command.encode("UTF-8")
 *             arglist = ArgList(command)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_string_types); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_command, __pyx_t_1); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pytraj/c_action/c_action.pyx":92
 *         if isinstance(command, string_types):
 *             #command = command.encode("UTF-8")
 *             arglist = ArgList(command)             # <<<<<<<<<<<<<<
 *         elif isinstance(command, ArgList):
 *             arglist = <ArgList> command
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_command);
    __Pyx_GIVEREF(__pyx_v_command);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_command);
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_4core_6c_core_ArgList), __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_arglist = ((struct __pyx_obj_6pytraj_4core_6c_core_ArgList *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "pytraj/c_action/c_action.pyx":90
 *         self.top = top
 * 
 *         if isinstance(command, string_types):             # <<<<<<<<<<<<<<
 *             #command = command.encode("UTF-8")
 *             arglist = ArgList(command)
 */
    goto __pyx_L3;
  }

  /* "pytraj/c_action/c_action.pyx":93
 *             #command = command.encode("UTF-8")
 *             arglist = ArgList(command)
 *         elif isinstance(command, ArgList):             # <<<<<<<<<<<<<<
 *             arglist = <ArgList> command
 * 
 */
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_command, __pyx_ptype_6pytraj_4core_6c_core_ArgList); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "pytraj/c_action/c_action.pyx":94
 *             arglist = ArgList(command)
 *         elif isinstance(command, ArgList):
 *             arglist = <ArgList> command             # <<<<<<<<<<<<<<
 * 
 *         i_fail = self.baseptr.Init(arglist.thisptr[0],
 */
    __pyx_t_4 = __pyx_v_command;
    __Pyx_INCREF(__pyx_t_4);
    __pyx_v_arglist = ((struct __pyx_obj_6pytraj_4core_6c_core_ArgList *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "pytraj/c_action/c_action.pyx":93
 *             #command = command.encode("UTF-8")
 *             arglist = ArgList(command)
 *         elif isinstance(command, ArgList):             # <<<<<<<<<<<<<<
 *             arglist = <ArgList> command
 * 
 */
  }
  __pyx_L3:;

  /* "pytraj/c_action/c_action.pyx":96
 *             arglist = <ArgList> command
 * 
 *         i_fail = self.baseptr.Init(arglist.thisptr[0],             # <<<<<<<<<<<<<<
 *                                    actioninit_,
 *                                    debug)
 */
  if (unlikely(!__pyx_v_arglist)) { __Pyx_RaiseUnboundLocalError("arglist"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }

  /* "pytraj/c_action/c_action.pyx":98
 *         i_fail = self.baseptr.Init(arglist.thisptr[0],
 *                                    actioninit_,
 *                                    debug)             # <<<<<<<<<<<<<<
 * 
 *         if i_fail != OK:
 */
  __pyx_v_i_fail = __pyx_v_self->baseptr->Init((__pyx_v_arglist->thisptr[0]), __pyx_v_actioninit_, __pyx_v_debug);

  /* "pytraj/c_action/c_action.pyx":100
 *                                    debug)
 * 
 *         if i_fail != OK:             # <<<<<<<<<<<<<<
 *             # check before compute to avoid segfault
 *             raise ValueError("")
 */
  __pyx_t_2 = ((__pyx_v_i_fail != Action::OK) != 0);
  if (__pyx_t_2) {

    /* "pytraj/c_action/c_action.pyx":102
 *         if i_fail != OK:
 *             # check before compute to avoid segfault
 *             raise ValueError("")             # <<<<<<<<<<<<<<
 *         else:
 *             return i_fail
 */
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pytraj/c_action/c_action.pyx":100
 *                                    debug)
 * 
 *         if i_fail != OK:             # <<<<<<<<<<<<<<
 *             # check before compute to avoid segfault
 *             raise ValueError("")
 */
  }

  /* "pytraj/c_action/c_action.pyx":104
 *             raise ValueError("")
 *         else:
 *             return i_fail             # <<<<<<<<<<<<<<
 * 
 *     @makesureABC("Action")
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyInt_From_Action_3a__3a_RetType(__pyx_v_i_fail); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "pytraj/c_action/c_action.pyx":67
 * 
 *     @makesureABC("Action")
 *     def read_input(self, command='',             # <<<<<<<<<<<<<<
 *                    top=Topology(),
 *                    DatasetList dslist=DatasetList(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.read_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_arglist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":107
 * 
 *     @makesureABC("Action")
 *     def check_topology(self, Topology top=Topology(), crdinfo={}, n_frames_t=0, get_new_top=False):             # <<<<<<<<<<<<<<
 *         """pass coordinate_info
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_17check_topology(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_16check_topology[] = "Action.check_topology(self, Topology top=<\077\077?>, crdinfo={}, n_frames_t=0, get_new_top=False)\npass coordinate_info\n\n        Parameters:\n        ----------\n        top : Topology\n        coordinate_info : a Python dict\n        n_frames_t : number of frames associated with Topology\n        ";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_17check_topology(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_top = 0;
  PyObject *__pyx_v_crdinfo = 0;
  PyObject *__pyx_v_n_frames_t = 0;
  PyObject *__pyx_v_get_new_top = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_topology (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_top,&__pyx_n_s_crdinfo,&__pyx_n_s_n_frames_t,&__pyx_n_s_get_new_top,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = (PyObject *)__pyx_k__7;
    values[1] = __pyx_k__8;
    values[2] = ((PyObject *)__pyx_int_0);
    values[3] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_top);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_crdinfo);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n_frames_t);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_get_new_top);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "check_topology") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_top = ((struct __pyx_obj_6pytraj_8topology_Topology *)values[0]);
    __pyx_v_crdinfo = values[1];
    __pyx_v_n_frames_t = values[2];
    __pyx_v_get_new_top = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_topology", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.check_topology", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_top), __pyx_ptype_6pytraj_8topology_Topology, 1, "top", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_16check_topology(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), __pyx_v_top, __pyx_v_crdinfo, __pyx_v_n_frames_t, __pyx_v_get_new_top);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_16check_topology(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_top, PyObject *__pyx_v_crdinfo, PyObject *__pyx_v_n_frames_t, PyObject *__pyx_v_get_new_top) {
  ActionSetup __pyx_v_actionsetup_;
  CoordinateInfo __pyx_v_crdinfo_;
  struct __pyx_obj_6pytraj_4core_3box_Box *__pyx_v_box = 0;
  int __pyx_v_has_velocity;
  int __pyx_v_has_time;
  int __pyx_v_has_force;
  struct __pyx_obj_6pytraj_8topology_Topology *__pyx_v_new_top = 0;
  Action::RetType __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("check_topology", 0);

  /* "pytraj/c_action/c_action.pyx":116
 *         n_frames_t : number of frames associated with Topology
 *         """
 *         self.top_is_processed = True             # <<<<<<<<<<<<<<
 *         cdef _ActionSetup actionsetup_
 *         cdef CoordinateInfo crdinfo_
 */
  __pyx_v_self->top_is_processed = 1;

  /* "pytraj/c_action/c_action.pyx":121
 *         cdef Box box
 *         cdef bint has_velocity, has_time, has_force
 *         cdef Topology new_top = Topology()             # <<<<<<<<<<<<<<
 * 
 *         box = crdinfo.get('box', top.box)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_8topology_Topology), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_new_top = ((struct __pyx_obj_6pytraj_8topology_Topology *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":123
 *         cdef Topology new_top = Topology()
 * 
 *         box = crdinfo.get('box', top.box)             # <<<<<<<<<<<<<<
 *         has_velocity = crdinfo.get('has_velocity', False)
 *         has_time = crdinfo.get('has_time', False)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_crdinfo, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_top), __pyx_n_s_box); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
  }
  __Pyx_INCREF(__pyx_n_s_box);
  __Pyx_GIVEREF(__pyx_n_s_box);
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_n_s_box);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_6pytraj_4core_3box_Box))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_box = ((struct __pyx_obj_6pytraj_4core_3box_Box *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":124
 * 
 *         box = crdinfo.get('box', top.box)
 *         has_velocity = crdinfo.get('has_velocity', False)             # <<<<<<<<<<<<<<
 *         has_time = crdinfo.get('has_time', False)
 *         has_force = crdinfo.get('has_force', False)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_crdinfo, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_has_velocity = __pyx_t_7;

  /* "pytraj/c_action/c_action.pyx":125
 *         box = crdinfo.get('box', top.box)
 *         has_velocity = crdinfo.get('has_velocity', False)
 *         has_time = crdinfo.get('has_time', False)             # <<<<<<<<<<<<<<
 *         has_force = crdinfo.get('has_force', False)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_crdinfo, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_has_time = __pyx_t_7;

  /* "pytraj/c_action/c_action.pyx":126
 *         has_velocity = crdinfo.get('has_velocity', False)
 *         has_time = crdinfo.get('has_time', False)
 *         has_force = crdinfo.get('has_force', False)             # <<<<<<<<<<<<<<
 * 
 *         crdinfo_ = CoordinateInfo(box.thisptr[0], has_velocity, has_time, has_force)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_crdinfo, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_has_force = __pyx_t_7;

  /* "pytraj/c_action/c_action.pyx":128
 *         has_force = crdinfo.get('has_force', False)
 * 
 *         crdinfo_ = CoordinateInfo(box.thisptr[0], has_velocity, has_time, has_force)             # <<<<<<<<<<<<<<
 * 
 *         actionsetup_ = _ActionSetup(top.thisptr, crdinfo_, n_frames_t)
 */
  __pyx_v_crdinfo_ = CoordinateInfo((__pyx_v_box->thisptr[0]), __pyx_v_has_velocity, __pyx_v_has_time, __pyx_v_has_force);

  /* "pytraj/c_action/c_action.pyx":130
 *         crdinfo_ = CoordinateInfo(box.thisptr[0], has_velocity, has_time, has_force)
 * 
 *         actionsetup_ = _ActionSetup(top.thisptr, crdinfo_, n_frames_t)             # <<<<<<<<<<<<<<
 *         status = self.baseptr.Setup(actionsetup_)
 * 
 */
  __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_v_n_frames_t); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_actionsetup_ = ActionSetup(__pyx_v_top->thisptr, __pyx_v_crdinfo_, __pyx_t_8);

  /* "pytraj/c_action/c_action.pyx":131
 * 
 *         actionsetup_ = _ActionSetup(top.thisptr, crdinfo_, n_frames_t)
 *         status = self.baseptr.Setup(actionsetup_)             # <<<<<<<<<<<<<<
 * 
 *         if status == ERR:
 */
  __pyx_v_status = __pyx_v_self->baseptr->Setup(__pyx_v_actionsetup_);

  /* "pytraj/c_action/c_action.pyx":133
 *         status = self.baseptr.Setup(actionsetup_)
 * 
 *         if status == ERR:             # <<<<<<<<<<<<<<
 *             # cpptraj have a bunch of options, so we only check if there is
 *             # ERR
 */
  __pyx_t_7 = ((__pyx_v_status == Action::ERR) != 0);
  if (__pyx_t_7) {

    /* "pytraj/c_action/c_action.pyx":136
 *             # cpptraj have a bunch of options, so we only check if there is
 *             # ERR
 *             raise RuntimeError('failed to setup action')             # <<<<<<<<<<<<<<
 * 
 *         if get_new_top:
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pytraj/c_action/c_action.pyx":133
 *         status = self.baseptr.Setup(actionsetup_)
 * 
 *         if status == ERR:             # <<<<<<<<<<<<<<
 *             # cpptraj have a bunch of options, so we only check if there is
 *             # ERR
 */
  }

  /* "pytraj/c_action/c_action.pyx":138
 *             raise RuntimeError('failed to setup action')
 * 
 *         if get_new_top:             # <<<<<<<<<<<<<<
 *             new_top._own_memory = False
 *             new_top.thisptr[0] = actionsetup_.Top()
 */
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_get_new_top); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_7) {

    /* "pytraj/c_action/c_action.pyx":139
 * 
 *         if get_new_top:
 *             new_top._own_memory = False             # <<<<<<<<<<<<<<
 *             new_top.thisptr[0] = actionsetup_.Top()
 *             return new_top
 */
    __pyx_v_new_top->_own_memory = 0;

    /* "pytraj/c_action/c_action.pyx":140
 *         if get_new_top:
 *             new_top._own_memory = False
 *             new_top.thisptr[0] = actionsetup_.Top()             # <<<<<<<<<<<<<<
 *             return new_top
 * 
 */
    (__pyx_v_new_top->thisptr[0]) = __pyx_v_actionsetup_.Top();

    /* "pytraj/c_action/c_action.pyx":141
 *             new_top._own_memory = False
 *             new_top.thisptr[0] = actionsetup_.Top()
 *             return new_top             # <<<<<<<<<<<<<<
 * 
 *     @makesureABC("Action")
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_new_top));
    __pyx_r = ((PyObject *)__pyx_v_new_top);
    goto __pyx_L0;

    /* "pytraj/c_action/c_action.pyx":138
 *             raise RuntimeError('failed to setup action')
 * 
 *         if get_new_top:             # <<<<<<<<<<<<<<
 *             new_top._own_memory = False
 *             new_top.thisptr[0] = actionsetup_.Top()
 */
  }

  /* "pytraj/c_action/c_action.pyx":107
 * 
 *     @makesureABC("Action")
 *     def check_topology(self, Topology top=Topology(), crdinfo={}, n_frames_t=0, get_new_top=False):             # <<<<<<<<<<<<<<
 *         """pass coordinate_info
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.check_topology", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_box);
  __Pyx_XDECREF((PyObject *)__pyx_v_new_top);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":144
 * 
 *     @makesureABC("Action")
 *     def compute(self, current_frame=None, int idx=0, get_new_frame=False):             # <<<<<<<<<<<<<<
 *         """Perform action on Frame
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_19compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_18compute[] = "Action.compute(self, current_frame=None, int idx=0, get_new_frame=False)\nPerform action on Frame\n\n        Parameters\n        ----------\n        current_frame : Frame instance need to be processed, default=Frame()\n        itx : int, frame index\n        get_new_frame : bool\n        ";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_19compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_current_frame = 0;
  int __pyx_v_idx;
  PyObject *__pyx_v_get_new_frame = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_current_frame,&__pyx_n_s_idx,&__pyx_n_s_get_new_frame,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_current_frame);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_idx);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_get_new_frame);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_current_frame = values[0];
    if (values[1]) {
      __pyx_v_idx = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_idx = ((int)0);
    }
    __pyx_v_get_new_frame = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_18compute(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), __pyx_v_current_frame, __pyx_v_idx, __pyx_v_get_new_frame);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_18compute(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_current_frame, int __pyx_v_idx, PyObject *__pyx_v_get_new_frame) {
  struct __pyx_obj_6pytraj_5frame_Frame *__pyx_v_frame = 0;
  struct __pyx_obj_6pytraj_5frame_Frame *__pyx_v_new_frame = 0;
  ActionFrame __pyx_v_actframe_;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute", 0);

  /* "pytraj/c_action/c_action.pyx":159
 *         cdef _ActionFrame actframe_
 * 
 *         if isinstance(current_frame, Frame):             # <<<<<<<<<<<<<<
 *             frame = <Frame> current_frame
 *             actframe_ = _ActionFrame(frame.thisptr)
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_current_frame, __pyx_ptype_6pytraj_5frame_Frame); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pytraj/c_action/c_action.pyx":160
 * 
 *         if isinstance(current_frame, Frame):
 *             frame = <Frame> current_frame             # <<<<<<<<<<<<<<
 *             actframe_ = _ActionFrame(frame.thisptr)
 *             self.baseptr.DoAction(idx, actframe_)
 */
    __pyx_t_3 = __pyx_v_current_frame;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_frame = ((struct __pyx_obj_6pytraj_5frame_Frame *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "pytraj/c_action/c_action.pyx":161
 *         if isinstance(current_frame, Frame):
 *             frame = <Frame> current_frame
 *             actframe_ = _ActionFrame(frame.thisptr)             # <<<<<<<<<<<<<<
 *             self.baseptr.DoAction(idx, actframe_)
 *             self.n_frames += 1
 */
    __pyx_v_actframe_ = ActionFrame(__pyx_v_frame->thisptr);

    /* "pytraj/c_action/c_action.pyx":162
 *             frame = <Frame> current_frame
 *             actframe_ = _ActionFrame(frame.thisptr)
 *             self.baseptr.DoAction(idx, actframe_)             # <<<<<<<<<<<<<<
 *             self.n_frames += 1
 * 
 */
    __pyx_v_self->baseptr->DoAction(__pyx_v_idx, __pyx_v_actframe_);

    /* "pytraj/c_action/c_action.pyx":163
 *             actframe_ = _ActionFrame(frame.thisptr)
 *             self.baseptr.DoAction(idx, actframe_)
 *             self.n_frames += 1             # <<<<<<<<<<<<<<
 * 
 *             if get_new_frame:
 */
    __pyx_v_self->n_frames = (__pyx_v_self->n_frames + 1);

    /* "pytraj/c_action/c_action.pyx":165
 *             self.n_frames += 1
 * 
 *             if get_new_frame:             # <<<<<<<<<<<<<<
 *                 new_frame = Frame()
 *                 new_frame.thisptr[0] = actframe_.ModifyFrm()
 */
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_get_new_frame); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "pytraj/c_action/c_action.pyx":166
 * 
 *             if get_new_frame:
 *                 new_frame = Frame()             # <<<<<<<<<<<<<<
 *                 new_frame.thisptr[0] = actframe_.ModifyFrm()
 *                 return new_frame
 */
      __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_5frame_Frame), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_v_new_frame = ((struct __pyx_obj_6pytraj_5frame_Frame *)__pyx_t_3);
      __pyx_t_3 = 0;

      /* "pytraj/c_action/c_action.pyx":167
 *             if get_new_frame:
 *                 new_frame = Frame()
 *                 new_frame.thisptr[0] = actframe_.ModifyFrm()             # <<<<<<<<<<<<<<
 *                 return new_frame
 *         else:
 */
      (__pyx_v_new_frame->thisptr[0]) = __pyx_v_actframe_.ModifyFrm();

      /* "pytraj/c_action/c_action.pyx":168
 *                 new_frame = Frame()
 *                 new_frame.thisptr[0] = actframe_.ModifyFrm()
 *                 return new_frame             # <<<<<<<<<<<<<<
 *         else:
 *             for frame in iterframe_master(current_frame):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(((PyObject *)__pyx_v_new_frame));
      __pyx_r = ((PyObject *)__pyx_v_new_frame);
      goto __pyx_L0;

      /* "pytraj/c_action/c_action.pyx":165
 *             self.n_frames += 1
 * 
 *             if get_new_frame:             # <<<<<<<<<<<<<<
 *                 new_frame = Frame()
 *                 new_frame.thisptr[0] = actframe_.ModifyFrm()
 */
    }

    /* "pytraj/c_action/c_action.pyx":159
 *         cdef _ActionFrame actframe_
 * 
 *         if isinstance(current_frame, Frame):             # <<<<<<<<<<<<<<
 *             frame = <Frame> current_frame
 *             actframe_ = _ActionFrame(frame.thisptr)
 */
    goto __pyx_L3;
  }

  /* "pytraj/c_action/c_action.pyx":170
 *                 return new_frame
 *         else:
 *             for frame in iterframe_master(current_frame):             # <<<<<<<<<<<<<<
 *                 self.compute(frame, idx=idx)
 * 
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_iterframe_master); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_current_frame); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_v_current_frame);
      __Pyx_GIVEREF(__pyx_v_current_frame);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_current_frame);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_8(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_6pytraj_5frame_Frame))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_XDECREF_SET(__pyx_v_frame, ((struct __pyx_obj_6pytraj_5frame_Frame *)__pyx_t_3));
      __pyx_t_3 = 0;

      /* "pytraj/c_action/c_action.pyx":171
 *         else:
 *             for frame in iterframe_master(current_frame):
 *                 self.compute(frame, idx=idx)             # <<<<<<<<<<<<<<
 * 
 *     @makesureABC("Action")
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(((PyObject *)__pyx_v_frame));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_frame));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_frame));
      __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_idx); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_idx, __pyx_t_9) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "pytraj/c_action/c_action.pyx":170
 *                 return new_frame
 *         else:
 *             for frame in iterframe_master(current_frame):             # <<<<<<<<<<<<<<
 *                 self.compute(frame, idx=idx)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "pytraj/c_action/c_action.pyx":144
 * 
 *     @makesureABC("Action")
 *     def compute(self, current_frame=None, int idx=0, get_new_frame=False):             # <<<<<<<<<<<<<<
 *         """Perform action on Frame
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_frame);
  __Pyx_XDECREF((PyObject *)__pyx_v_new_frame);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":174
 * 
 *     @makesureABC("Action")
 *     def post_process(self):             # <<<<<<<<<<<<<<
 *         self.baseptr.Print()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_21post_process(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_20post_process[] = "Action.post_process(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_21post_process(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("post_process (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_20post_process(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_20post_process(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("post_process", 0);

  /* "pytraj/c_action/c_action.pyx":175
 *     @makesureABC("Action")
 *     def post_process(self):
 *         self.baseptr.Print()             # <<<<<<<<<<<<<<
 * 
 *     def _master(self, command='',
 */
  __pyx_v_self->baseptr->Print();

  /* "pytraj/c_action/c_action.pyx":174
 * 
 *     @makesureABC("Action")
 *     def post_process(self):             # <<<<<<<<<<<<<<
 *         self.baseptr.Print()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":177
 *         self.baseptr.Print()
 * 
 *     def _master(self, command='',             # <<<<<<<<<<<<<<
 *                 current_frame=Frame(),
 *                 top=Topology(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_23_master(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_22_master[] = "Action._master(self, command='', current_frame=<\077\077?>, top=<\077\077?>, dslist=<\077\077?>, dflist=<\077\077?>, int debug=0)\ncreate shortcut\n        ";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_23_master(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_command = 0;
  PyObject *__pyx_v_current_frame = 0;
  PyObject *__pyx_v_top = 0;
  PyObject *__pyx_v_dslist = 0;
  PyObject *__pyx_v_dflist = 0;
  int __pyx_v_debug;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_master (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_command,&__pyx_n_s_current_frame,&__pyx_n_s_top,&__pyx_n_s_dslist,&__pyx_n_s_dflist,&__pyx_n_s_debug,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[0] = ((PyObject *)__pyx_kp_s_);
    values[1] = __pyx_k__13;
    values[2] = __pyx_k__14;
    values[3] = __pyx_k__15;
    values[4] = __pyx_k__16;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_command);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_current_frame);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_top);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dslist);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dflist);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_debug);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_master") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_command = values[0];
    __pyx_v_current_frame = values[1];
    __pyx_v_top = values[2];
    __pyx_v_dslist = values[3];
    __pyx_v_dflist = values[4];
    if (values[5]) {
      __pyx_v_debug = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_debug == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_debug = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_master", 0, 0, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action._master", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_22_master(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), __pyx_v_command, __pyx_v_current_frame, __pyx_v_top, __pyx_v_dslist, __pyx_v_dflist, __pyx_v_debug);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_22_master(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_command, PyObject *__pyx_v_current_frame, PyObject *__pyx_v_top, PyObject *__pyx_v_dslist, PyObject *__pyx_v_dflist, int __pyx_v_debug) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_master", 0);

  /* "pytraj/c_action/c_action.pyx":185
 *         """create shortcut
 *         """
 *         self.read_input(command=command,             # <<<<<<<<<<<<<<
 *                         top=top,
 *                         dslist=dslist,
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read_input); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_command, __pyx_v_command) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pytraj/c_action/c_action.pyx":186
 *         """
 *         self.read_input(command=command,
 *                         top=top,             # <<<<<<<<<<<<<<
 *                         dslist=dslist,
 *                         dflist=dflist, debug=debug)
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_top, __pyx_v_top) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pytraj/c_action/c_action.pyx":187
 *         self.read_input(command=command,
 *                         top=top,
 *                         dslist=dslist,             # <<<<<<<<<<<<<<
 *                         dflist=dflist, debug=debug)
 * 
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dslist, __pyx_v_dslist) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pytraj/c_action/c_action.pyx":188
 *                         top=top,
 *                         dslist=dslist,
 *                         dflist=dflist, debug=debug)             # <<<<<<<<<<<<<<
 * 
 *         self.check_topology(top=top)
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dflist, __pyx_v_dflist) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_debug); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_debug, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pytraj/c_action/c_action.pyx":185
 *         """create shortcut
 *         """
 *         self.read_input(command=command,             # <<<<<<<<<<<<<<
 *                         top=top,
 *                         dslist=dslist,
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pytraj/c_action/c_action.pyx":190
 *                         dflist=dflist, debug=debug)
 * 
 *         self.check_topology(top=top)             # <<<<<<<<<<<<<<
 *         self.compute(current_frame)
 *         return dslist
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_check_topology); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_top, __pyx_v_top) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":191
 * 
 *         self.check_topology(top=top)
 *         self.compute(current_frame)             # <<<<<<<<<<<<<<
 *         return dslist
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_current_frame); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_current_frame);
    __Pyx_GIVEREF(__pyx_v_current_frame);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_current_frame);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":192
 *         self.check_topology(top=top)
 *         self.compute(current_frame)
 *         return dslist             # <<<<<<<<<<<<<<
 * 
 *     def reset_counter(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_dslist);
  __pyx_r = __pyx_v_dslist;
  goto __pyx_L0;

  /* "pytraj/c_action/c_action.pyx":177
 *         self.baseptr.Print()
 * 
 *     def _master(self, command='',             # <<<<<<<<<<<<<<
 *                 current_frame=Frame(),
 *                 top=Topology(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action._master", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":194
 *         return dslist
 * 
 *     def reset_counter(self):             # <<<<<<<<<<<<<<
 *         self.n_frames = 0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_25reset_counter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_6Action_24reset_counter[] = "Action.reset_counter(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_25reset_counter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_counter (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_24reset_counter(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_24reset_counter(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_counter", 0);

  /* "pytraj/c_action/c_action.pyx":195
 * 
 *     def reset_counter(self):
 *         self.n_frames = 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->n_frames = 0;

  /* "pytraj/c_action/c_action.pyx":194
 *         return dslist
 * 
 *     def reset_counter(self):             # <<<<<<<<<<<<<<
 *         self.n_frames = 0
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pxd":62
 * cdef class Action:
 *     cdef _Action* baseptr
 *     cdef public int n_frames             # <<<<<<<<<<<<<<
 *     cdef bint top_is_processed
 *     cdef object top
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_8n_frames_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_8n_frames_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_8n_frames___get__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_8n_frames___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->n_frames); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.n_frames.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_8n_frames_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_8n_frames_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_8n_frames_2__set__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_8n_frames_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->n_frames = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action.n_frames.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pxd":65
 *     cdef bint top_is_processed
 *     cdef object top
 *     cdef public object _dslist             # <<<<<<<<<<<<<<
 *     cdef public object _dflist
 *     cdef public object _command
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist___get__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_dslist);
  __pyx_r = __pyx_v_self->_dslist;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist_2__set__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_dslist);
  __Pyx_DECREF(__pyx_v_self->_dslist);
  __pyx_v_self->_dslist = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist_4__del__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dslist_4__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_dslist);
  __Pyx_DECREF(__pyx_v_self->_dslist);
  __pyx_v_self->_dslist = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pxd":66
 *     cdef object top
 *     cdef public object _dslist
 *     cdef public object _dflist             # <<<<<<<<<<<<<<
 *     cdef public object _command
 *     # create pointer to pass to ActionList
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist___get__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_dflist);
  __pyx_r = __pyx_v_self->_dflist;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist_2__set__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_dflist);
  __Pyx_DECREF(__pyx_v_self->_dflist);
  __pyx_v_self->_dflist = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist_4__del__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_7_dflist_4__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_dflist);
  __Pyx_DECREF(__pyx_v_self->_dflist);
  __pyx_v_self->_dflist = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pxd":67
 *     cdef public object _dslist
 *     cdef public object _dflist
 *     cdef public object _command             # <<<<<<<<<<<<<<
 *     # create pointer to pass to ActionList
 *     cdef bint own_memory
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command___get__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command___get__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_command);
  __pyx_r = __pyx_v_self->_command;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command_2__set__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command_2__set__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->_command);
  __Pyx_DECREF(__pyx_v_self->_command);
  __pyx_v_self->_command = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command_4__del__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_6Action_8_command_4__del__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_command);
  __Pyx_DECREF(__pyx_v_self->_command);
  __pyx_v_self->_command = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":199
 * 
 * cdef class Action_Angle(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Angle()
 *         self.thisptr = <_Action_Angle*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":200
 * cdef class Action_Angle(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Angle()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Angle*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Angle());

  /* "pytraj/c_action/c_action.pyx":201
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Angle()
 *         self.thisptr = <_Action_Angle*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Angle *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":202
 *         self.baseptr = <_Action*> new _Action_Angle()
 *         self.thisptr = <_Action_Angle*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":199
 * 
 * cdef class Action_Angle(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Angle()
 *         self.thisptr = <_Action_Angle*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":204
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":205
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":206
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":205
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":204
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":208
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_12Action_Angle_4help[] = "Action_Angle.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Angle_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":209
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":208
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":213
 * 
 * cdef class Action_Distance(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Distance()
 *         self.thisptr = <_Action_Distance*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":214
 * cdef class Action_Distance(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Distance()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Distance*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Distance());

  /* "pytraj/c_action/c_action.pyx":215
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Distance()
 *         self.thisptr = <_Action_Distance*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Distance *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":216
 *         self.baseptr = <_Action*> new _Action_Distance()
 *         self.thisptr = <_Action_Distance*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":213
 * 
 * cdef class Action_Distance(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Distance()
 *         self.thisptr = <_Action_Distance*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":218
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":219
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":220
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":219
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":218
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":222
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_Distance_4help[] = "Action_Distance.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Distance_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":223
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":222
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":227
 * 
 * cdef class Action_Rmsd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Rmsd()
 *         self.thisptr = <_Action_Rmsd*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":228
 * cdef class Action_Rmsd(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Rmsd()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Rmsd*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Rmsd());

  /* "pytraj/c_action/c_action.pyx":229
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Rmsd()
 *         self.thisptr = <_Action_Rmsd*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Rmsd *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":230
 *         self.baseptr = <_Action*> new _Action_Rmsd()
 *         self.thisptr = <_Action_Rmsd*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":227
 * 
 * cdef class Action_Rmsd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Rmsd()
 *         self.thisptr = <_Action_Rmsd*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":232
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":233
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":234
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":233
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":232
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":236
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_Rmsd_4help[] = "Action_Rmsd.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Rmsd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":237
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":236
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":241
 * 
 * cdef class Action_Dihedral(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Dihedral()
 *         self.thisptr = <_Action_Dihedral*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":242
 * cdef class Action_Dihedral(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Dihedral()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Dihedral*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Dihedral());

  /* "pytraj/c_action/c_action.pyx":243
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Dihedral()
 *         self.thisptr = <_Action_Dihedral*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Dihedral *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":244
 *         self.baseptr = <_Action*> new _Action_Dihedral()
 *         self.thisptr = <_Action_Dihedral*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":241
 * 
 * cdef class Action_Dihedral(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Dihedral()
 *         self.thisptr = <_Action_Dihedral*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":246
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":247
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":248
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":247
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":246
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":250
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_Dihedral_4help[] = "Action_Dihedral.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Dihedral_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":251
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":250
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":255
 * 
 * cdef class Action_AtomMap(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AtomMap()
 *         self.thisptr = <_Action_AtomMap*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":256
 * cdef class Action_AtomMap(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AtomMap()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_AtomMap*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_AtomMap());

  /* "pytraj/c_action/c_action.pyx":257
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AtomMap()
 *         self.thisptr = <_Action_AtomMap*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_AtomMap *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":258
 *         self.baseptr = <_Action*> new _Action_AtomMap()
 *         self.thisptr = <_Action_AtomMap*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":255
 * 
 * cdef class Action_AtomMap(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AtomMap()
 *         self.thisptr = <_Action_AtomMap*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":260
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":261
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":262
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":261
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":260
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":264
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_AtomMap_4help[] = "Action_AtomMap.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_AtomMap_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":265
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":264
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":269
 * 
 * cdef class Action_Strip(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Strip()
 *         self.thisptr = <_Action_Strip*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":270
 * cdef class Action_Strip(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Strip()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Strip*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Strip());

  /* "pytraj/c_action/c_action.pyx":271
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Strip()
 *         self.thisptr = <_Action_Strip*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Strip *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":272
 *         self.baseptr = <_Action*> new _Action_Strip()
 *         self.thisptr = <_Action_Strip*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":269
 * 
 * cdef class Action_Strip(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Strip()
 *         self.thisptr = <_Action_Strip*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":274
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":275
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":276
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":275
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":274
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":278
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_12Action_Strip_4help[] = "Action_Strip.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Strip_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":279
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":278
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":283
 * 
 * cdef class Action_Unstrip(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Unstrip()
 *         self.thisptr = <_Action_Unstrip*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":284
 * cdef class Action_Unstrip(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Unstrip()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Unstrip*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Unstrip());

  /* "pytraj/c_action/c_action.pyx":285
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Unstrip()
 *         self.thisptr = <_Action_Unstrip*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Unstrip *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":286
 *         self.baseptr = <_Action*> new _Action_Unstrip()
 *         self.thisptr = <_Action_Unstrip*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":283
 * 
 * cdef class Action_Unstrip(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Unstrip()
 *         self.thisptr = <_Action_Unstrip*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":288
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":289
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":290
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":289
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":288
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":292
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Unstrip_4help[] = "Action_Unstrip.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Unstrip_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":293
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":292
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":297
 * 
 * cdef class Action_DSSP(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DSSP()
 *         self.thisptr = <_Action_DSSP*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":298
 * cdef class Action_DSSP(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DSSP()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_DSSP*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_DSSP());

  /* "pytraj/c_action/c_action.pyx":299
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DSSP()
 *         self.thisptr = <_Action_DSSP*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_DSSP *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":300
 *         self.baseptr = <_Action*> new _Action_DSSP()
 *         self.thisptr = <_Action_DSSP*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":297
 * 
 * cdef class Action_DSSP(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DSSP()
 *         self.thisptr = <_Action_DSSP*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":302
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":303
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":304
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":303
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":302
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":306
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_DSSP_4help[] = "Action_DSSP.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_DSSP_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":307
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":306
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":311
 * 
 * cdef class Action_Center(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Center()
 *         self.thisptr = <_Action_Center*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":312
 * cdef class Action_Center(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Center()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Center*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Center());

  /* "pytraj/c_action/c_action.pyx":313
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Center()
 *         self.thisptr = <_Action_Center*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Center *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":314
 *         self.baseptr = <_Action*> new _Action_Center()
 *         self.thisptr = <_Action_Center*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":311
 * 
 * cdef class Action_Center(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Center()
 *         self.thisptr = <_Action_Center*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":316
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":317
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":318
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":317
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":316
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":320
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Center_4help[] = "Action_Center.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Center_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Center_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":321
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":320
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":325
 * 
 * cdef class Action_Hbond(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Hbond()
 *         self.thisptr = <_Action_Hbond*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":326
 * cdef class Action_Hbond(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Hbond()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Hbond*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Hbond());

  /* "pytraj/c_action/c_action.pyx":327
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Hbond()
 *         self.thisptr = <_Action_Hbond*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Hbond *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":328
 *         self.baseptr = <_Action*> new _Action_Hbond()
 *         self.thisptr = <_Action_Hbond*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":325
 * 
 * cdef class Action_Hbond(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Hbond()
 *         self.thisptr = <_Action_Hbond*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":330
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":331
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":332
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":331
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":330
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":334
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_12Action_Hbond_4help[] = "Action_Hbond.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Hbond_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":335
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":334
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":339
 * 
 * cdef class Action_Image(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Image()
 *         self.thisptr = <_Action_Image*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":340
 * cdef class Action_Image(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Image()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Image*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Image());

  /* "pytraj/c_action/c_action.pyx":341
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Image()
 *         self.thisptr = <_Action_Image*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Image *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":342
 *         self.baseptr = <_Action*> new _Action_Image()
 *         self.thisptr = <_Action_Image*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":339
 * 
 * cdef class Action_Image(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Image()
 *         self.thisptr = <_Action_Image*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":344
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":345
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":346
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":345
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":344
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":348
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_12Action_Image_4help[] = "Action_Image.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Image_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Image_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":349
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":348
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":353
 * 
 * cdef class Action_Surf(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Surf()
 *         self.thisptr = <_Action_Surf*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":354
 * cdef class Action_Surf(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Surf()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Surf*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Surf());

  /* "pytraj/c_action/c_action.pyx":355
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Surf()
 *         self.thisptr = <_Action_Surf*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Surf *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":356
 *         self.baseptr = <_Action*> new _Action_Surf()
 *         self.thisptr = <_Action_Surf*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":353
 * 
 * cdef class Action_Surf(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Surf()
 *         self.thisptr = <_Action_Surf*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":358
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":359
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":360
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":359
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":358
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":362
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_Surf_4help[] = "Action_Surf.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Surf_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":363
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":362
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":367
 * 
 * cdef class Action_Radgyr(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Radgyr()
 *         self.thisptr = <_Action_Radgyr*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":368
 * cdef class Action_Radgyr(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Radgyr()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Radgyr*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Radgyr());

  /* "pytraj/c_action/c_action.pyx":369
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Radgyr()
 *         self.thisptr = <_Action_Radgyr*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Radgyr *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":370
 *         self.baseptr = <_Action*> new _Action_Radgyr()
 *         self.thisptr = <_Action_Radgyr*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":367
 * 
 * cdef class Action_Radgyr(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Radgyr()
 *         self.thisptr = <_Action_Radgyr*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":372
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":373
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":374
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":373
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":372
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":376
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Radgyr_4help[] = "Action_Radgyr.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Radgyr_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":377
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":376
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":381
 * 
 * cdef class Action_Mask(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Mask()
 *         self.thisptr = <_Action_Mask*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":382
 * cdef class Action_Mask(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Mask()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Mask*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Mask());

  /* "pytraj/c_action/c_action.pyx":383
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Mask()
 *         self.thisptr = <_Action_Mask*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Mask *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":384
 *         self.baseptr = <_Action*> new _Action_Mask()
 *         self.thisptr = <_Action_Mask*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":381
 * 
 * cdef class Action_Mask(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Mask()
 *         self.thisptr = <_Action_Mask*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":386
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":387
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":388
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":387
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":386
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":390
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_Mask_4help[] = "Action_Mask.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Mask_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":391
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":390
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":395
 * 
 * cdef class Action_Closest(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Closest()
 *         self.thisptr = <_Action_Closest*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":396
 * cdef class Action_Closest(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Closest()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Closest*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Closest());

  /* "pytraj/c_action/c_action.pyx":397
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Closest()
 *         self.thisptr = <_Action_Closest*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Closest *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":398
 *         self.baseptr = <_Action*> new _Action_Closest()
 *         self.thisptr = <_Action_Closest*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":395
 * 
 * cdef class Action_Closest(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Closest()
 *         self.thisptr = <_Action_Closest*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":400
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":401
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":402
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":401
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":400
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":404
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Closest_4help[] = "Action_Closest.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Closest_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":405
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":404
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":409
 * 
 * cdef class Action_NAstruct(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_NAstruct()
 *         self.thisptr = <_Action_NAstruct*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":410
 * cdef class Action_NAstruct(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_NAstruct()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_NAstruct*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_NAstruct());

  /* "pytraj/c_action/c_action.pyx":411
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_NAstruct()
 *         self.thisptr = <_Action_NAstruct*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_NAstruct *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":412
 *         self.baseptr = <_Action*> new _Action_NAstruct()
 *         self.thisptr = <_Action_NAstruct*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":409
 * 
 * cdef class Action_NAstruct(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_NAstruct()
 *         self.thisptr = <_Action_NAstruct*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":414
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":415
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":416
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":415
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":414
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":418
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_NAstruct_4help[] = "Action_NAstruct.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_NAstruct_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":419
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":418
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":423
 * 
 * cdef class Action_Pucker(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Pucker()
 *         self.thisptr = <_Action_Pucker*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":424
 * cdef class Action_Pucker(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Pucker()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Pucker*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Pucker());

  /* "pytraj/c_action/c_action.pyx":425
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Pucker()
 *         self.thisptr = <_Action_Pucker*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Pucker *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":426
 *         self.baseptr = <_Action*> new _Action_Pucker()
 *         self.thisptr = <_Action_Pucker*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":423
 * 
 * cdef class Action_Pucker(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Pucker()
 *         self.thisptr = <_Action_Pucker*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":428
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":429
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":430
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":429
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":428
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":432
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Pucker_4help[] = "Action_Pucker.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Pucker_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":433
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":432
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":437
 * 
 * cdef class Action_Outtraj(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Outtraj()
 *         self.thisptr = <_Action_Outtraj*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":438
 * cdef class Action_Outtraj(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Outtraj()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Outtraj*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Outtraj());

  /* "pytraj/c_action/c_action.pyx":439
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Outtraj()
 *         self.thisptr = <_Action_Outtraj*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Outtraj *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":440
 *         self.baseptr = <_Action*> new _Action_Outtraj()
 *         self.thisptr = <_Action_Outtraj*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":437
 * 
 * cdef class Action_Outtraj(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Outtraj()
 *         self.thisptr = <_Action_Outtraj*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":442
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":443
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":444
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":443
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":442
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":446
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Outtraj_4help[] = "Action_Outtraj.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Outtraj_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":447
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":446
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":451
 * 
 * cdef class Action_Average(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Average()
 *         self.thisptr = <_Action_Average*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":452
 * cdef class Action_Average(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Average()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Average*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Average());

  /* "pytraj/c_action/c_action.pyx":453
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Average()
 *         self.thisptr = <_Action_Average*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Average *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":454
 *         self.baseptr = <_Action*> new _Action_Average()
 *         self.thisptr = <_Action_Average*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":451
 * 
 * cdef class Action_Average(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Average()
 *         self.thisptr = <_Action_Average*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":456
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":457
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":458
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":457
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":456
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":460
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Average_4help[] = "Action_Average.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Average_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Average_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":461
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":460
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":465
 * 
 * cdef class Action_Radial(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Radial()
 *         self.thisptr = <_Action_Radial*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":466
 * cdef class Action_Radial(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Radial()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Radial*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Radial());

  /* "pytraj/c_action/c_action.pyx":467
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Radial()
 *         self.thisptr = <_Action_Radial*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Radial *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":468
 *         self.baseptr = <_Action*> new _Action_Radial()
 *         self.thisptr = <_Action_Radial*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":465
 * 
 * cdef class Action_Radial(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Radial()
 *         self.thisptr = <_Action_Radial*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":470
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":471
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":472
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":471
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":470
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":474
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Radial_4help[] = "Action_Radial.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Radial_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":475
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":474
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":479
 * 
 * cdef class Action_DistRmsd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DistRmsd()
 *         self.thisptr = <_Action_DistRmsd*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":480
 * cdef class Action_DistRmsd(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DistRmsd()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_DistRmsd*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_DistRmsd());

  /* "pytraj/c_action/c_action.pyx":481
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DistRmsd()
 *         self.thisptr = <_Action_DistRmsd*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_DistRmsd *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":482
 *         self.baseptr = <_Action*> new _Action_DistRmsd()
 *         self.thisptr = <_Action_DistRmsd*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":479
 * 
 * cdef class Action_DistRmsd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DistRmsd()
 *         self.thisptr = <_Action_DistRmsd*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":484
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":485
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":486
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":485
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":484
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":488
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_DistRmsd_4help[] = "Action_DistRmsd.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_DistRmsd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":489
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":488
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":493
 * 
 * cdef class Action_Jcoupling(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Jcoupling()
 *         self.thisptr = <_Action_Jcoupling*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":494
 * cdef class Action_Jcoupling(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Jcoupling()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Jcoupling*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Jcoupling());

  /* "pytraj/c_action/c_action.pyx":495
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Jcoupling()
 *         self.thisptr = <_Action_Jcoupling*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Jcoupling *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":496
 *         self.baseptr = <_Action*> new _Action_Jcoupling()
 *         self.thisptr = <_Action_Jcoupling*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":493
 * 
 * cdef class Action_Jcoupling(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Jcoupling()
 *         self.thisptr = <_Action_Jcoupling*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":498
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":499
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":500
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":499
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":498
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":502
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_16Action_Jcoupling_4help[] = "Action_Jcoupling.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Jcoupling_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":503
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":502
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":507
 * 
 * cdef class Action_Pairwise(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Pairwise()
 *         self.thisptr = <_Action_Pairwise*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":508
 * cdef class Action_Pairwise(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Pairwise()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Pairwise*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Pairwise());

  /* "pytraj/c_action/c_action.pyx":509
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Pairwise()
 *         self.thisptr = <_Action_Pairwise*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Pairwise *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":510
 *         self.baseptr = <_Action*> new _Action_Pairwise()
 *         self.thisptr = <_Action_Pairwise*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":507
 * 
 * cdef class Action_Pairwise(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Pairwise()
 *         self.thisptr = <_Action_Pairwise*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":512
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":513
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":514
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":513
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":512
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":516
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_Pairwise_4help[] = "Action_Pairwise.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Pairwise_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":517
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":516
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":521
 * 
 * cdef class Action_Molsurf(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Molsurf()
 *         self.thisptr = <_Action_Molsurf*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":522
 * cdef class Action_Molsurf(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Molsurf()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Molsurf*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Molsurf());

  /* "pytraj/c_action/c_action.pyx":523
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Molsurf()
 *         self.thisptr = <_Action_Molsurf*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Molsurf *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":524
 *         self.baseptr = <_Action*> new _Action_Molsurf()
 *         self.thisptr = <_Action_Molsurf*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":521
 * 
 * cdef class Action_Molsurf(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Molsurf()
 *         self.thisptr = <_Action_Molsurf*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":526
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":527
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":528
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":527
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":526
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":530
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Molsurf_4help[] = "Action_Molsurf.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Molsurf_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":531
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":530
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":535
 * 
 * cdef class Action_CheckStructure(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_CheckStructure()
 *         self.thisptr = <_Action_CheckStructure*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":536
 * cdef class Action_CheckStructure(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_CheckStructure()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_CheckStructure*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_CheckStructure());

  /* "pytraj/c_action/c_action.pyx":537
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_CheckStructure()
 *         self.thisptr = <_Action_CheckStructure*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_CheckStructure *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":538
 *         self.baseptr = <_Action*> new _Action_CheckStructure()
 *         self.thisptr = <_Action_CheckStructure*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":535
 * 
 * cdef class Action_CheckStructure(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_CheckStructure()
 *         self.thisptr = <_Action_CheckStructure*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":540
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":541
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":542
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":541
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":540
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":544
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_21Action_CheckStructure_4help[] = "Action_CheckStructure.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckStructure_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":545
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":544
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":549
 * 
 * cdef class Action_DihedralScan(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DihedralScan()
 *         self.thisptr = <_Action_DihedralScan*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":550
 * cdef class Action_DihedralScan(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DihedralScan()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_DihedralScan*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_DihedralScan());

  /* "pytraj/c_action/c_action.pyx":551
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DihedralScan()
 *         self.thisptr = <_Action_DihedralScan*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_DihedralScan *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":552
 *         self.baseptr = <_Action*> new _Action_DihedralScan()
 *         self.thisptr = <_Action_DihedralScan*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":549
 * 
 * cdef class Action_DihedralScan(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DihedralScan()
 *         self.thisptr = <_Action_DihedralScan*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":554
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":555
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":556
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":555
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":554
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":558
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_19Action_DihedralScan_4help[] = "Action_DihedralScan.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_19Action_DihedralScan_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":559
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":558
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":563
 * 
 * cdef class Action_RunningAvg(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_RunningAvg()
 *         self.thisptr = <_Action_RunningAvg*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":564
 * cdef class Action_RunningAvg(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_RunningAvg()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_RunningAvg*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_RunningAvg());

  /* "pytraj/c_action/c_action.pyx":565
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_RunningAvg()
 *         self.thisptr = <_Action_RunningAvg*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_RunningAvg *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":566
 *         self.baseptr = <_Action*> new _Action_RunningAvg()
 *         self.thisptr = <_Action_RunningAvg*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":563
 * 
 * cdef class Action_RunningAvg(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_RunningAvg()
 *         self.thisptr = <_Action_RunningAvg*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":568
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":569
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":570
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":569
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":568
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":572
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_17Action_RunningAvg_4help[] = "Action_RunningAvg.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_RunningAvg_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":573
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":572
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":577
 * 
 * cdef class Action_AtomicFluct(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AtomicFluct()
 *         self.thisptr = <_Action_AtomicFluct*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":578
 * cdef class Action_AtomicFluct(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AtomicFluct()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_AtomicFluct*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_AtomicFluct());

  /* "pytraj/c_action/c_action.pyx":579
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AtomicFluct()
 *         self.thisptr = <_Action_AtomicFluct*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_AtomicFluct *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":580
 *         self.baseptr = <_Action*> new _Action_AtomicFluct()
 *         self.thisptr = <_Action_AtomicFluct*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":577
 * 
 * cdef class Action_AtomicFluct(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AtomicFluct()
 *         self.thisptr = <_Action_AtomicFluct*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":582
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":583
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":584
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":583
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":582
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":586
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_18Action_AtomicFluct_4help[] = "Action_AtomicFluct.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_AtomicFluct_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":587
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":586
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":591
 * 
 * cdef class Action_Watershell(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Watershell()
 *         self.thisptr = <_Action_Watershell*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":592
 * cdef class Action_Watershell(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Watershell()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Watershell*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Watershell());

  /* "pytraj/c_action/c_action.pyx":593
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Watershell()
 *         self.thisptr = <_Action_Watershell*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Watershell *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":594
 *         self.baseptr = <_Action*> new _Action_Watershell()
 *         self.thisptr = <_Action_Watershell*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":591
 * 
 * cdef class Action_Watershell(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Watershell()
 *         self.thisptr = <_Action_Watershell*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":596
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":597
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":598
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":597
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":596
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":600
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_17Action_Watershell_4help[] = "Action_Watershell.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_Watershell_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":601
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":600
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":605
 * 
 * cdef class Action_Contacts(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Contacts()
 *         self.thisptr = <_Action_Contacts*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":606
 * cdef class Action_Contacts(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Contacts()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Contacts*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Contacts());

  /* "pytraj/c_action/c_action.pyx":607
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Contacts()
 *         self.thisptr = <_Action_Contacts*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Contacts *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":608
 *         self.baseptr = <_Action*> new _Action_Contacts()
 *         self.thisptr = <_Action_Contacts*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":605
 * 
 * cdef class Action_Contacts(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Contacts()
 *         self.thisptr = <_Action_Contacts*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":610
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":611
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":612
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":611
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":610
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":614
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_Contacts_4help[] = "Action_Contacts.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_Contacts_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":615
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":614
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":619
 * 
 * cdef class Action_Vector(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Vector()
 *         self.thisptr = <_Action_Vector*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":620
 * cdef class Action_Vector(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Vector()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Vector*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Vector());

  /* "pytraj/c_action/c_action.pyx":621
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Vector()
 *         self.thisptr = <_Action_Vector*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Vector *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":622
 *         self.baseptr = <_Action*> new _Action_Vector()
 *         self.thisptr = <_Action_Vector*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":619
 * 
 * cdef class Action_Vector(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Vector()
 *         self.thisptr = <_Action_Vector*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":624
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":625
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":626
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":625
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":624
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":628
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Vector_4help[] = "Action_Vector.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Vector_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":629
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":628
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":633
 * 
 * cdef class Action_Principal(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Principal()
 *         self.thisptr = <_Action_Principal*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":634
 * cdef class Action_Principal(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Principal()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Principal*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Principal());

  /* "pytraj/c_action/c_action.pyx":635
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Principal()
 *         self.thisptr = <_Action_Principal*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Principal *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":636
 *         self.baseptr = <_Action*> new _Action_Principal()
 *         self.thisptr = <_Action_Principal*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":633
 * 
 * cdef class Action_Principal(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Principal()
 *         self.thisptr = <_Action_Principal*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":638
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":639
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":640
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":639
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":638
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":642
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_16Action_Principal_4help[] = "Action_Principal.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Principal_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":643
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":642
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":647
 * 
 * cdef class Action_Matrix(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Matrix()
 *         self.thisptr = <_Action_Matrix*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":648
 * cdef class Action_Matrix(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Matrix()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Matrix*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Matrix());

  /* "pytraj/c_action/c_action.pyx":649
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Matrix()
 *         self.thisptr = <_Action_Matrix*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Matrix *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":650
 *         self.baseptr = <_Action*> new _Action_Matrix()
 *         self.thisptr = <_Action_Matrix*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":647
 * 
 * cdef class Action_Matrix(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Matrix()
 *         self.thisptr = <_Action_Matrix*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":652
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":653
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":654
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":653
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":652
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":656
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Matrix_4help[] = "Action_Matrix.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Matrix_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":657
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":656
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":661
 * 
 * cdef class Action_LIE(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_LIE()
 *         self.thisptr = <_Action_LIE*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":662
 * cdef class Action_LIE(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_LIE()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_LIE*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_LIE());

  /* "pytraj/c_action/c_action.pyx":663
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_LIE()
 *         self.thisptr = <_Action_LIE*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_LIE *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":664
 *         self.baseptr = <_Action*> new _Action_LIE()
 *         self.thisptr = <_Action_LIE*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":661
 * 
 * cdef class Action_LIE(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_LIE()
 *         self.thisptr = <_Action_LIE*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":666
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":667
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":668
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":667
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":666
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":670
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_10Action_LIE_4help[] = "Action_LIE.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_10Action_LIE_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":671
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":670
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":675
 * 
 * cdef class Action_Grid(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Grid()
 *         self.thisptr = <_Action_Grid*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":676
 * cdef class Action_Grid(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Grid()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Grid*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Grid());

  /* "pytraj/c_action/c_action.pyx":677
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Grid()
 *         self.thisptr = <_Action_Grid*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Grid *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":678
 *         self.baseptr = <_Action*> new _Action_Grid()
 *         self.thisptr = <_Action_Grid*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":675
 * 
 * cdef class Action_Grid(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Grid()
 *         self.thisptr = <_Action_Grid*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":680
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":681
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":682
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":681
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":680
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":684
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_Grid_4help[] = "Action_Grid.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Grid_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":685
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":684
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":689
 * 
 * cdef class Action_GridFreeEnergy(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_GridFreeEnergy()
 *         self.thisptr = <_Action_GridFreeEnergy*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":690
 * cdef class Action_GridFreeEnergy(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_GridFreeEnergy()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_GridFreeEnergy*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_GridFreeEnergy());

  /* "pytraj/c_action/c_action.pyx":691
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_GridFreeEnergy()
 *         self.thisptr = <_Action_GridFreeEnergy*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_GridFreeEnergy *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":692
 *         self.baseptr = <_Action*> new _Action_GridFreeEnergy()
 *         self.thisptr = <_Action_GridFreeEnergy*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":689
 * 
 * cdef class Action_GridFreeEnergy(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_GridFreeEnergy()
 *         self.thisptr = <_Action_GridFreeEnergy*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":694
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":695
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":696
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":695
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":694
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":698
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_4help[] = "Action_GridFreeEnergy.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":699
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":698
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":703
 * 
 * cdef class Action_Dipole(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Dipole()
 *         self.thisptr = <_Action_Dipole*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":704
 * cdef class Action_Dipole(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Dipole()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Dipole*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Dipole());

  /* "pytraj/c_action/c_action.pyx":705
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Dipole()
 *         self.thisptr = <_Action_Dipole*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Dipole *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":706
 *         self.baseptr = <_Action*> new _Action_Dipole()
 *         self.thisptr = <_Action_Dipole*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":703
 * 
 * cdef class Action_Dipole(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Dipole()
 *         self.thisptr = <_Action_Dipole*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":708
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":709
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":710
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":709
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":708
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":712
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Dipole_4help[] = "Action_Dipole.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Dipole_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":713
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":712
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":717
 * 
 * cdef class Action_Projection(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Projection()
 *         self.thisptr = <_Action_Projection*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":718
 * cdef class Action_Projection(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Projection()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Projection*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Projection());

  /* "pytraj/c_action/c_action.pyx":719
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Projection()
 *         self.thisptr = <_Action_Projection*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Projection *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":720
 *         self.baseptr = <_Action*> new _Action_Projection()
 *         self.thisptr = <_Action_Projection*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":717
 * 
 * cdef class Action_Projection(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Projection()
 *         self.thisptr = <_Action_Projection*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":722
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":723
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":724
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":723
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":722
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":726
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_17Action_Projection_4help[] = "Action_Projection.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_Projection_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":727
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":726
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":731
 * 
 * cdef class Action_ClusterDihedral(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_ClusterDihedral()
 *         self.thisptr = <_Action_ClusterDihedral*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":732
 * cdef class Action_ClusterDihedral(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_ClusterDihedral()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_ClusterDihedral*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_ClusterDihedral());

  /* "pytraj/c_action/c_action.pyx":733
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_ClusterDihedral()
 *         self.thisptr = <_Action_ClusterDihedral*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_ClusterDihedral *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":734
 *         self.baseptr = <_Action*> new _Action_ClusterDihedral()
 *         self.thisptr = <_Action_ClusterDihedral*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":731
 * 
 * cdef class Action_ClusterDihedral(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_ClusterDihedral()
 *         self.thisptr = <_Action_ClusterDihedral*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":736
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":737
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":738
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":737
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":736
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":740
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_4help[] = "Action_ClusterDihedral.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":741
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":740
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":745
 * 
 * cdef class Action_Unwrap(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Unwrap()
 *         self.thisptr = <_Action_Unwrap*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":746
 * cdef class Action_Unwrap(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Unwrap()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Unwrap*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Unwrap());

  /* "pytraj/c_action/c_action.pyx":747
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Unwrap()
 *         self.thisptr = <_Action_Unwrap*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Unwrap *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":748
 *         self.baseptr = <_Action*> new _Action_Unwrap()
 *         self.thisptr = <_Action_Unwrap*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":745
 * 
 * cdef class Action_Unwrap(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Unwrap()
 *         self.thisptr = <_Action_Unwrap*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":750
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":751
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":752
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":751
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":750
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":754
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Unwrap_4help[] = "Action_Unwrap.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Unwrap_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":755
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":754
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":759
 * 
 * cdef class Action_Diffusion(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Diffusion()
 *         self.thisptr = <_Action_Diffusion*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":760
 * cdef class Action_Diffusion(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Diffusion()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Diffusion*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Diffusion());

  /* "pytraj/c_action/c_action.pyx":761
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Diffusion()
 *         self.thisptr = <_Action_Diffusion*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Diffusion *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":762
 *         self.baseptr = <_Action*> new _Action_Diffusion()
 *         self.thisptr = <_Action_Diffusion*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":759
 * 
 * cdef class Action_Diffusion(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Diffusion()
 *         self.thisptr = <_Action_Diffusion*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":764
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":765
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":766
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":765
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":764
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":768
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_16Action_Diffusion_4help[] = "Action_Diffusion.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Diffusion_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":769
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":768
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":773
 * 
 * cdef class Action_DNAionTracker(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DNAionTracker()
 *         self.thisptr = <_Action_DNAionTracker*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":774
 * cdef class Action_DNAionTracker(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DNAionTracker()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_DNAionTracker*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_DNAionTracker());

  /* "pytraj/c_action/c_action.pyx":775
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_DNAionTracker()
 *         self.thisptr = <_Action_DNAionTracker*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_DNAionTracker *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":776
 *         self.baseptr = <_Action*> new _Action_DNAionTracker()
 *         self.thisptr = <_Action_DNAionTracker*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":773
 * 
 * cdef class Action_DNAionTracker(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_DNAionTracker()
 *         self.thisptr = <_Action_DNAionTracker*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":778
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":779
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":780
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":779
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":778
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":782
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_20Action_DNAionTracker_4help[] = "Action_DNAionTracker.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_DNAionTracker_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":783
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":782
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":787
 * 
 * cdef class Action_Scale(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Scale()
 *         self.thisptr = <_Action_Scale*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":788
 * cdef class Action_Scale(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Scale()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Scale*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Scale());

  /* "pytraj/c_action/c_action.pyx":789
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Scale()
 *         self.thisptr = <_Action_Scale*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Scale *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":790
 *         self.baseptr = <_Action*> new _Action_Scale()
 *         self.thisptr = <_Action_Scale*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":787
 * 
 * cdef class Action_Scale(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Scale()
 *         self.thisptr = <_Action_Scale*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":792
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":793
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":794
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":793
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":792
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":796
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_12Action_Scale_4help[] = "Action_Scale.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_12Action_Scale_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":797
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":796
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":801
 * 
 * cdef class Action_RandomizeIons(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_RandomizeIons()
 *         self.thisptr = <_Action_RandomizeIons*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":802
 * cdef class Action_RandomizeIons(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_RandomizeIons()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_RandomizeIons*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_RandomizeIons());

  /* "pytraj/c_action/c_action.pyx":803
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_RandomizeIons()
 *         self.thisptr = <_Action_RandomizeIons*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_RandomizeIons *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":804
 *         self.baseptr = <_Action*> new _Action_RandomizeIons()
 *         self.thisptr = <_Action_RandomizeIons*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":801
 * 
 * cdef class Action_RandomizeIons(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_RandomizeIons()
 *         self.thisptr = <_Action_RandomizeIons*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":806
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":807
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":808
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":807
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":806
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":810
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_20Action_RandomizeIons_4help[] = "Action_RandomizeIons.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_RandomizeIons_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":811
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":810
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":815
 * 
 * cdef class Action_AutoImage(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AutoImage()
 *         self.thisptr = <_Action_AutoImage*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":816
 * cdef class Action_AutoImage(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AutoImage()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_AutoImage*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_AutoImage());

  /* "pytraj/c_action/c_action.pyx":817
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AutoImage()
 *         self.thisptr = <_Action_AutoImage*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_AutoImage *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":818
 *         self.baseptr = <_Action*> new _Action_AutoImage()
 *         self.thisptr = <_Action_AutoImage*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":815
 * 
 * cdef class Action_AutoImage(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AutoImage()
 *         self.thisptr = <_Action_AutoImage*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":820
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":821
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":822
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":821
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":820
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":824
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_16Action_AutoImage_4help[] = "Action_AutoImage.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_AutoImage_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":825
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":824
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":829
 * 
 * cdef class Action_STFC_Diffusion(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_STFC_Diffusion()
 *         self.thisptr = <_Action_STFC_Diffusion*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":830
 * cdef class Action_STFC_Diffusion(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_STFC_Diffusion()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_STFC_Diffusion*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_STFC_Diffusion());

  /* "pytraj/c_action/c_action.pyx":831
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_STFC_Diffusion()
 *         self.thisptr = <_Action_STFC_Diffusion*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_STFC_Diffusion *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":832
 *         self.baseptr = <_Action*> new _Action_STFC_Diffusion()
 *         self.thisptr = <_Action_STFC_Diffusion*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":829
 * 
 * cdef class Action_STFC_Diffusion(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_STFC_Diffusion()
 *         self.thisptr = <_Action_STFC_Diffusion*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":834
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":835
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":836
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":835
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":834
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":838
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_4help[] = "Action_STFC_Diffusion.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":839
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":838
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":843
 * 
 * cdef class Action_AtomicCorr(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AtomicCorr()
 *         self.thisptr = <_Action_AtomicCorr*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":844
 * cdef class Action_AtomicCorr(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AtomicCorr()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_AtomicCorr*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_AtomicCorr());

  /* "pytraj/c_action/c_action.pyx":845
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AtomicCorr()
 *         self.thisptr = <_Action_AtomicCorr*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_AtomicCorr *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":846
 *         self.baseptr = <_Action*> new _Action_AtomicCorr()
 *         self.thisptr = <_Action_AtomicCorr*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":843
 * 
 * cdef class Action_AtomicCorr(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AtomicCorr()
 *         self.thisptr = <_Action_AtomicCorr*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":848
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":849
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":850
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":849
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":848
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":852
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_17Action_AtomicCorr_4help[] = "Action_AtomicCorr.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_AtomicCorr_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":853
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":852
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":857
 * 
 * cdef class Action_Bounds(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Bounds()
 *         self.thisptr = <_Action_Bounds*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":858
 * cdef class Action_Bounds(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Bounds()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Bounds*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Bounds());

  /* "pytraj/c_action/c_action.pyx":859
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Bounds()
 *         self.thisptr = <_Action_Bounds*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Bounds *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":860
 *         self.baseptr = <_Action*> new _Action_Bounds()
 *         self.thisptr = <_Action_Bounds*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":857
 * 
 * cdef class Action_Bounds(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Bounds()
 *         self.thisptr = <_Action_Bounds*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":862
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":863
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":864
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":863
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":862
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":866
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Bounds_4help[] = "Action_Bounds.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Bounds_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":867
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":866
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":871
 * 
 * cdef class Action_Rotate(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Rotate()
 *         self.thisptr = <_Action_Rotate*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":872
 * cdef class Action_Rotate(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Rotate()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Rotate*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Rotate());

  /* "pytraj/c_action/c_action.pyx":873
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Rotate()
 *         self.thisptr = <_Action_Rotate*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Rotate *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":874
 *         self.baseptr = <_Action*> new _Action_Rotate()
 *         self.thisptr = <_Action_Rotate*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":871
 * 
 * cdef class Action_Rotate(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Rotate()
 *         self.thisptr = <_Action_Rotate*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":876
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":877
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":878
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":877
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":876
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":880
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Rotate_4help[] = "Action_Rotate.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Rotate_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":881
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":880
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":885
 * 
 * cdef class Action_Translate(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Translate()
 *         self.thisptr = <_Action_Translate*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":886
 * cdef class Action_Translate(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Translate()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Translate*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Translate());

  /* "pytraj/c_action/c_action.pyx":887
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Translate()
 *         self.thisptr = <_Action_Translate*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Translate *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":888
 *         self.baseptr = <_Action*> new _Action_Translate()
 *         self.thisptr = <_Action_Translate*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":885
 * 
 * cdef class Action_Translate(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Translate()
 *         self.thisptr = <_Action_Translate*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":890
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":891
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":892
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":891
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":890
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":894
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_16Action_Translate_4help[] = "Action_Translate.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_Translate_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":895
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":894
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":899
 * 
 * cdef class Action_Box(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Box()
 *         self.thisptr = <_Action_Box*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":900
 * cdef class Action_Box(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Box()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Box*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Box());

  /* "pytraj/c_action/c_action.pyx":901
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Box()
 *         self.thisptr = <_Action_Box*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Box *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":902
 *         self.baseptr = <_Action*> new _Action_Box()
 *         self.thisptr = <_Action_Box*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":899
 * 
 * cdef class Action_Box(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Box()
 *         self.thisptr = <_Action_Box*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":904
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":905
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":906
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":905
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":904
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":908
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_10Action_Box_4help[] = "Action_Box.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_10Action_Box_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_10Action_Box_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":909
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":908
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":913
 * 
 * cdef class Action_CreateCrd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_CreateCrd()
 *         self.thisptr = <_Action_CreateCrd*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":914
 * cdef class Action_CreateCrd(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_CreateCrd()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_CreateCrd*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_CreateCrd());

  /* "pytraj/c_action/c_action.pyx":915
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_CreateCrd()
 *         self.thisptr = <_Action_CreateCrd*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_CreateCrd *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":916
 *         self.baseptr = <_Action*> new _Action_CreateCrd()
 *         self.thisptr = <_Action_CreateCrd*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":913
 * 
 * cdef class Action_CreateCrd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_CreateCrd()
 *         self.thisptr = <_Action_CreateCrd*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":918
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":919
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":920
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":919
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":918
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":922
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_16Action_CreateCrd_4help[] = "Action_CreateCrd.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_16Action_CreateCrd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":923
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":922
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":927
 * 
 * cdef class Action_MultiDihedral(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MultiDihedral()
 *         self.thisptr = <_Action_MultiDihedral*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":928
 * cdef class Action_MultiDihedral(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MultiDihedral()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_MultiDihedral*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_MultiDihedral());

  /* "pytraj/c_action/c_action.pyx":929
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MultiDihedral()
 *         self.thisptr = <_Action_MultiDihedral*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_MultiDihedral *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":930
 *         self.baseptr = <_Action*> new _Action_MultiDihedral()
 *         self.thisptr = <_Action_MultiDihedral*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":927
 * 
 * cdef class Action_MultiDihedral(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MultiDihedral()
 *         self.thisptr = <_Action_MultiDihedral*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":932
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":933
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":934
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":933
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":932
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":936
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_20Action_MultiDihedral_4help[] = "Action_MultiDihedral.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_MultiDihedral_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":937
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":936
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":941
 * 
 * cdef class Action_MakeStructure(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MakeStructure()
 *         self.thisptr = <_Action_MakeStructure*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":942
 * cdef class Action_MakeStructure(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MakeStructure()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_MakeStructure*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_MakeStructure());

  /* "pytraj/c_action/c_action.pyx":943
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MakeStructure()
 *         self.thisptr = <_Action_MakeStructure*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_MakeStructure *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":944
 *         self.baseptr = <_Action*> new _Action_MakeStructure()
 *         self.thisptr = <_Action_MakeStructure*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":941
 * 
 * cdef class Action_MakeStructure(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MakeStructure()
 *         self.thisptr = <_Action_MakeStructure*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":946
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":947
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":948
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":947
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":946
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":950
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_20Action_MakeStructure_4help[] = "Action_MakeStructure.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_MakeStructure_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":951
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":950
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":955
 * 
 * cdef class Action_SymmetricRmsd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_SymmetricRmsd()
 *         self.thisptr = <_Action_SymmetricRmsd*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":956
 * cdef class Action_SymmetricRmsd(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_SymmetricRmsd()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_SymmetricRmsd*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_SymmetricRmsd());

  /* "pytraj/c_action/c_action.pyx":957
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_SymmetricRmsd()
 *         self.thisptr = <_Action_SymmetricRmsd*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_SymmetricRmsd *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":958
 *         self.baseptr = <_Action*> new _Action_SymmetricRmsd()
 *         self.thisptr = <_Action_SymmetricRmsd*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":955
 * 
 * cdef class Action_SymmetricRmsd(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_SymmetricRmsd()
 *         self.thisptr = <_Action_SymmetricRmsd*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":960
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":961
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":962
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":961
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":960
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":964
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_4help[] = "Action_SymmetricRmsd.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":965
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":964
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":969
 * 
 * cdef class Action_Volmap(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Volmap()
 *         self.thisptr = <_Action_Volmap*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":970
 * cdef class Action_Volmap(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Volmap()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Volmap*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Volmap());

  /* "pytraj/c_action/c_action.pyx":971
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Volmap()
 *         self.thisptr = <_Action_Volmap*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Volmap *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":972
 *         self.baseptr = <_Action*> new _Action_Volmap()
 *         self.thisptr = <_Action_Volmap*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":969
 * 
 * cdef class Action_Volmap(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Volmap()
 *         self.thisptr = <_Action_Volmap*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":974
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":975
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":976
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":975
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":974
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":978
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Volmap_4help[] = "Action_Volmap.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Volmap_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":979
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":978
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":983
 * 
 * cdef class Action_Spam(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Spam()
 *         self.thisptr = <_Action_Spam*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":984
 * cdef class Action_Spam(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Spam()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Spam*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Spam());

  /* "pytraj/c_action/c_action.pyx":985
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Spam()
 *         self.thisptr = <_Action_Spam*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Spam *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":986
 *         self.baseptr = <_Action*> new _Action_Spam()
 *         self.thisptr = <_Action_Spam*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":983
 * 
 * cdef class Action_Spam(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Spam()
 *         self.thisptr = <_Action_Spam*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":988
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":989
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":990
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":989
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":988
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":992
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_Spam_4help[] = "Action_Spam.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Spam_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":993
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":992
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":997
 * 
 * cdef class Action_Temperature(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Temperature()
 *         self.thisptr = <_Action_Temperature*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":998
 * cdef class Action_Temperature(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Temperature()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Temperature*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Temperature());

  /* "pytraj/c_action/c_action.pyx":999
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Temperature()
 *         self.thisptr = <_Action_Temperature*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Temperature *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1000
 *         self.baseptr = <_Action*> new _Action_Temperature()
 *         self.thisptr = <_Action_Temperature*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":997
 * 
 * cdef class Action_Temperature(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Temperature()
 *         self.thisptr = <_Action_Temperature*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1002
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1003
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1004
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1003
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1002
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1006
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_18Action_Temperature_4help[] = "Action_Temperature.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_Temperature_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1007
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1006
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1011
 * 
 * cdef class Action_Gist(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Gist()
 *         self.thisptr = <_Action_Gist*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1012
 * cdef class Action_Gist(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Gist()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Gist*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Gist());

  /* "pytraj/c_action/c_action.pyx":1013
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Gist()
 *         self.thisptr = <_Action_Gist*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Gist *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1014
 *         self.baseptr = <_Action*> new _Action_Gist()
 *         self.thisptr = <_Action_Gist*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1011
 * 
 * cdef class Action_Gist(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Gist()
 *         self.thisptr = <_Action_Gist*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1016
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1017
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1018
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1017
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1016
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1020
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_11Action_Gist_4help[] = "Action_Gist.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_11Action_Gist_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1021
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1020
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1025
 * 
 * cdef class Action_Density(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Density()
 *         self.thisptr = <_Action_Density*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1026
 * cdef class Action_Density(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Density()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Density*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Density());

  /* "pytraj/c_action/c_action.pyx":1027
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Density()
 *         self.thisptr = <_Action_Density*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Density *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1028
 *         self.baseptr = <_Action*> new _Action_Density()
 *         self.thisptr = <_Action_Density*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1025
 * 
 * cdef class Action_Density(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Density()
 *         self.thisptr = <_Action_Density*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1030
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1031
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1032
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1031
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1030
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1034
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Density_4help[] = "Action_Density.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Density_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Density_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1035
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1034
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1039
 * 
 * cdef class Action_PairDist(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_PairDist()
 *         self.thisptr = <_Action_PairDist*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1040
 * cdef class Action_PairDist(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_PairDist()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_PairDist*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_PairDist());

  /* "pytraj/c_action/c_action.pyx":1041
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_PairDist()
 *         self.thisptr = <_Action_PairDist*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_PairDist *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1042
 *         self.baseptr = <_Action*> new _Action_PairDist()
 *         self.thisptr = <_Action_PairDist*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1039
 * 
 * cdef class Action_PairDist(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_PairDist()
 *         self.thisptr = <_Action_PairDist*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1044
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1045
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1046
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1045
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1044
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1048
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_PairDist_4help[] = "Action_PairDist.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_PairDist_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1049
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1048
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1053
 * 
 * cdef class Action_OrderParameter(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_OrderParameter()
 *         self.thisptr = <_Action_OrderParameter*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1054
 * cdef class Action_OrderParameter(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_OrderParameter()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_OrderParameter*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_OrderParameter());

  /* "pytraj/c_action/c_action.pyx":1055
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_OrderParameter()
 *         self.thisptr = <_Action_OrderParameter*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_OrderParameter *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1056
 *         self.baseptr = <_Action*> new _Action_OrderParameter()
 *         self.thisptr = <_Action_OrderParameter*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1053
 * 
 * cdef class Action_OrderParameter(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_OrderParameter()
 *         self.thisptr = <_Action_OrderParameter*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1058
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1059
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1060
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1059
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1058
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1062
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_21Action_OrderParameter_4help[] = "Action_OrderParameter.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_OrderParameter_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1063
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1062
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1067
 * 
 * cdef class Action_FixAtomOrder(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_FixAtomOrder()
 *         self.thisptr = <_Action_FixAtomOrder*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Action_FixAtomOrder *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1068
 * cdef class Action_FixAtomOrder(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_FixAtomOrder()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_FixAtomOrder*> self.baseptr
 *         self.own_memory = True
 */
  try {
    __pyx_t_1 = new Action_FixAtomOrder();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->__pyx_base.baseptr = ((Action *)__pyx_t_1);

  /* "pytraj/c_action/c_action.pyx":1069
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_FixAtomOrder()
 *         self.thisptr = <_Action_FixAtomOrder*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_FixAtomOrder *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1070
 *         self.baseptr = <_Action*> new _Action_FixAtomOrder()
 *         self.thisptr = <_Action_FixAtomOrder*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1067
 * 
 * cdef class Action_FixAtomOrder(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_FixAtomOrder()
 *         self.thisptr = <_Action_FixAtomOrder*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pytraj.c_action.c_action.Action_FixAtomOrder.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1072
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1073
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1074
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1073
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1072
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1076
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_4help[] = "Action_FixAtomOrder.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1077
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1076
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1081
 * 
 * cdef class Action_NMRrst(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_NMRrst()
 *         self.thisptr = <_Action_NMRrst*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1082
 * cdef class Action_NMRrst(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_NMRrst()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_NMRrst*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_NMRrst());

  /* "pytraj/c_action/c_action.pyx":1083
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_NMRrst()
 *         self.thisptr = <_Action_NMRrst*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_NMRrst *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1084
 *         self.baseptr = <_Action*> new _Action_NMRrst()
 *         self.thisptr = <_Action_NMRrst*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1081
 * 
 * cdef class Action_NMRrst(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_NMRrst()
 *         self.thisptr = <_Action_NMRrst*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1086
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1087
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1088
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1087
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1086
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1090
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_NMRrst_4help[] = "Action_NMRrst.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_NMRrst_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1091
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1090
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1095
 * 
 * cdef class Action_FilterByData(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_FilterByData()
 *         self.thisptr = <_Action_FilterByData*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1096
 * cdef class Action_FilterByData(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_FilterByData()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_FilterByData*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_FilterByData());

  /* "pytraj/c_action/c_action.pyx":1097
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_FilterByData()
 *         self.thisptr = <_Action_FilterByData*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_FilterByData *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1098
 *         self.baseptr = <_Action*> new _Action_FilterByData()
 *         self.thisptr = <_Action_FilterByData*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1095
 * 
 * cdef class Action_FilterByData(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_FilterByData()
 *         self.thisptr = <_Action_FilterByData*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1100
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1101
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1102
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1101
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1100
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1104
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_19Action_FilterByData_4help[] = "Action_FilterByData.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_19Action_FilterByData_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1105
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1104
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1109
 * 
 * cdef class Action_LESsplit(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_LESsplit()
 *         self.thisptr = <_Action_LESsplit*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1110
 * cdef class Action_LESsplit(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_LESsplit()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_LESsplit*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_LESsplit());

  /* "pytraj/c_action/c_action.pyx":1111
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_LESsplit()
 *         self.thisptr = <_Action_LESsplit*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_LESsplit *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1112
 *         self.baseptr = <_Action*> new _Action_LESsplit()
 *         self.thisptr = <_Action_LESsplit*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1109
 * 
 * cdef class Action_LESsplit(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_LESsplit()
 *         self.thisptr = <_Action_LESsplit*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1114
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1115
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1116
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1115
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1114
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1118
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_LESsplit_4help[] = "Action_LESsplit.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_LESsplit_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1119
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1118
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1123
 * 
 * cdef class Action_NativeContacts(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_NativeContacts()
 *         self.thisptr = <_Action_NativeContacts*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1124
 * cdef class Action_NativeContacts(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_NativeContacts()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_NativeContacts*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_NativeContacts());

  /* "pytraj/c_action/c_action.pyx":1125
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_NativeContacts()
 *         self.thisptr = <_Action_NativeContacts*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_NativeContacts *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1126
 *         self.baseptr = <_Action*> new _Action_NativeContacts()
 *         self.thisptr = <_Action_NativeContacts*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1123
 * 
 * cdef class Action_NativeContacts(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_NativeContacts()
 *         self.thisptr = <_Action_NativeContacts*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1128
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1129
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1130
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1129
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1128
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1132
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_21Action_NativeContacts_4help[] = "Action_NativeContacts.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_NativeContacts_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1133
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1132
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1137
 * 
 * cdef class Action_VelocityAutoCorr(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_VelocityAutoCorr()
 *         self.thisptr = <_Action_VelocityAutoCorr*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1138
 * cdef class Action_VelocityAutoCorr(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_VelocityAutoCorr()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_VelocityAutoCorr*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_VelocityAutoCorr());

  /* "pytraj/c_action/c_action.pyx":1139
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_VelocityAutoCorr()
 *         self.thisptr = <_Action_VelocityAutoCorr*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_VelocityAutoCorr *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1140
 *         self.baseptr = <_Action*> new _Action_VelocityAutoCorr()
 *         self.thisptr = <_Action_VelocityAutoCorr*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1137
 * 
 * cdef class Action_VelocityAutoCorr(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_VelocityAutoCorr()
 *         self.thisptr = <_Action_VelocityAutoCorr*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1142
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1143
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1144
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1143
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1142
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1146
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_4help[] = "Action_VelocityAutoCorr.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1147
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1146
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1151
 * 
 * cdef class Action_SetVelocity(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_SetVelocity()
 *         self.thisptr = <_Action_SetVelocity*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1152
 * cdef class Action_SetVelocity(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_SetVelocity()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_SetVelocity*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_SetVelocity());

  /* "pytraj/c_action/c_action.pyx":1153
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_SetVelocity()
 *         self.thisptr = <_Action_SetVelocity*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_SetVelocity *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1154
 *         self.baseptr = <_Action*> new _Action_SetVelocity()
 *         self.thisptr = <_Action_SetVelocity*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1151
 * 
 * cdef class Action_SetVelocity(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_SetVelocity()
 *         self.thisptr = <_Action_SetVelocity*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1156
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1157
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1158
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1157
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1156
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1160
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_18Action_SetVelocity_4help[] = "Action_SetVelocity.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_SetVelocity_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1161
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1160
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1165
 * 
 * cdef class Action_MultiVector(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MultiVector()
 *         self.thisptr = <_Action_MultiVector*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1166
 * cdef class Action_MultiVector(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MultiVector()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_MultiVector*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_MultiVector());

  /* "pytraj/c_action/c_action.pyx":1167
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MultiVector()
 *         self.thisptr = <_Action_MultiVector*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_MultiVector *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1168
 *         self.baseptr = <_Action*> new _Action_MultiVector()
 *         self.thisptr = <_Action_MultiVector*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1165
 * 
 * cdef class Action_MultiVector(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MultiVector()
 *         self.thisptr = <_Action_MultiVector*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1170
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1171
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1172
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1171
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1170
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1174
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_18Action_MultiVector_4help[] = "Action_MultiVector.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_18Action_MultiVector_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1175
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1174
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1179
 * 
 * cdef class Action_MinImage(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MinImage()
 *         self.thisptr = <_Action_MinImage*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1180
 * cdef class Action_MinImage(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MinImage()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_MinImage*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_MinImage());

  /* "pytraj/c_action/c_action.pyx":1181
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_MinImage()
 *         self.thisptr = <_Action_MinImage*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_MinImage *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1182
 *         self.baseptr = <_Action*> new _Action_MinImage()
 *         self.thisptr = <_Action_MinImage*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1179
 * 
 * cdef class Action_MinImage(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_MinImage()
 *         self.thisptr = <_Action_MinImage*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1184
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1185
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1186
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1185
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1184
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1188
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_15Action_MinImage_4help[] = "Action_MinImage.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_15Action_MinImage_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1189
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1188
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1193
 * 
 * cdef class Action_ReplicateCell(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_ReplicateCell()
 *         self.thisptr = <_Action_ReplicateCell*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1194
 * cdef class Action_ReplicateCell(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_ReplicateCell()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_ReplicateCell*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_ReplicateCell());

  /* "pytraj/c_action/c_action.pyx":1195
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_ReplicateCell()
 *         self.thisptr = <_Action_ReplicateCell*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_ReplicateCell *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1196
 *         self.baseptr = <_Action*> new _Action_ReplicateCell()
 *         self.thisptr = <_Action_ReplicateCell*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1193
 * 
 * cdef class Action_ReplicateCell(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_ReplicateCell()
 *         self.thisptr = <_Action_ReplicateCell*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1198
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1199
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1200
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1199
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1198
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1202
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_20Action_ReplicateCell_4help[] = "Action_ReplicateCell.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_20Action_ReplicateCell_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1203
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1202
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1207
 * 
 * cdef class Action_AreaPerMol(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AreaPerMol()
 *         self.thisptr = <_Action_AreaPerMol*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1208
 * cdef class Action_AreaPerMol(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AreaPerMol()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_AreaPerMol*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_AreaPerMol());

  /* "pytraj/c_action/c_action.pyx":1209
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_AreaPerMol()
 *         self.thisptr = <_Action_AreaPerMol*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_AreaPerMol *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1210
 *         self.baseptr = <_Action*> new _Action_AreaPerMol()
 *         self.thisptr = <_Action_AreaPerMol*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1207
 * 
 * cdef class Action_AreaPerMol(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_AreaPerMol()
 *         self.thisptr = <_Action_AreaPerMol*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1212
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1213
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1214
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1213
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1212
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1216
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_17Action_AreaPerMol_4help[] = "Action_AreaPerMol.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_17Action_AreaPerMol_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1217
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1216
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1221
 * 
 * cdef class Action_Energy(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Energy()
 *         self.thisptr = <_Action_Energy*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1222
 * cdef class Action_Energy(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Energy()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Energy*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Energy());

  /* "pytraj/c_action/c_action.pyx":1223
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Energy()
 *         self.thisptr = <_Action_Energy*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Energy *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1224
 *         self.baseptr = <_Action*> new _Action_Energy()
 *         self.thisptr = <_Action_Energy*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1221
 * 
 * cdef class Action_Energy(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Energy()
 *         self.thisptr = <_Action_Energy*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1226
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1227
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1228
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1227
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1226
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1230
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Energy_4help[] = "Action_Energy.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Energy_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1231
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1230
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1235
 * 
 * cdef class Action_CheckChirality(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_CheckChirality()
 *         self.thisptr = <_Action_CheckChirality*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1236
 * cdef class Action_CheckChirality(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_CheckChirality()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_CheckChirality*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_CheckChirality());

  /* "pytraj/c_action/c_action.pyx":1237
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_CheckChirality()
 *         self.thisptr = <_Action_CheckChirality*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_CheckChirality *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1238
 *         self.baseptr = <_Action*> new _Action_CheckChirality()
 *         self.thisptr = <_Action_CheckChirality*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1235
 * 
 * cdef class Action_CheckChirality(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_CheckChirality()
 *         self.thisptr = <_Action_CheckChirality*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1240
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1241
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1242
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1241
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1240
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1244
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_21Action_CheckChirality_4help[] = "Action_CheckChirality.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_21Action_CheckChirality_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1245
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1244
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1249
 * 
 * cdef class Action_Channel(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Channel()
 *         self.thisptr = <_Action_Channel*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1250
 * cdef class Action_Channel(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Channel()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Channel*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Channel());

  /* "pytraj/c_action/c_action.pyx":1251
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Channel()
 *         self.thisptr = <_Action_Channel*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Channel *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1252
 *         self.baseptr = <_Action*> new _Action_Channel()
 *         self.thisptr = <_Action_Channel*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1249
 * 
 * cdef class Action_Channel(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Channel()
 *         self.thisptr = <_Action_Channel*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1254
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1255
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1256
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1255
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1254
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1258
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_14Action_Channel_4help[] = "Action_Channel.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_14Action_Channel_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1259
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1258
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1263
 * 
 * cdef class Action_Volume(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Volume()
 *         self.thisptr = <_Action_Volume*> self.baseptr
 */

/* Python wrapper */
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume___cinit__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume___cinit__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pytraj/c_action/c_action.pyx":1264
 * cdef class Action_Volume(Action):
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Volume()             # <<<<<<<<<<<<<<
 *         self.thisptr = <_Action_Volume*> self.baseptr
 *         self.own_memory = True
 */
  __pyx_v_self->__pyx_base.baseptr = ((Action *)new Action_Volume());

  /* "pytraj/c_action/c_action.pyx":1265
 *     def __cinit__(self):
 *         self.baseptr = <_Action*> new _Action_Volume()
 *         self.thisptr = <_Action_Volume*> self.baseptr             # <<<<<<<<<<<<<<
 *         self.own_memory = True
 * 
 */
  __pyx_v_self->thisptr = ((Action_Volume *)__pyx_v_self->__pyx_base.baseptr);

  /* "pytraj/c_action/c_action.pyx":1266
 *         self.baseptr = <_Action*> new _Action_Volume()
 *         self.thisptr = <_Action_Volume*> self.baseptr
 *         self.own_memory = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.own_memory = 1;

  /* "pytraj/c_action/c_action.pyx":1263
 * 
 * cdef class Action_Volume(Action):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.baseptr = <_Action*> new _Action_Volume()
 *         self.thisptr = <_Action_Volume*> self.baseptr
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pytraj/c_action/c_action.pyx":1268
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

/* Python wrapper */
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume_2__dealloc__(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume_2__dealloc__(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pytraj/c_action/c_action.pyx":1269
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->__pyx_base.baseptr != NULL) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->__pyx_base.own_memory != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pytraj/c_action/c_action.pyx":1270
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
    delete __pyx_v_self->__pyx_base.baseptr;

    /* "pytraj/c_action/c_action.pyx":1269
 * 
 *     def __dealloc__(self):
 *         if self.baseptr is not NULL and self.own_memory:             # <<<<<<<<<<<<<<
 *             del self.baseptr
 * 
 */
  }

  /* "pytraj/c_action/c_action.pyx":1268
 *         self.own_memory = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.baseptr is not NULL and self.own_memory:
 *             del self.baseptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pytraj/c_action/c_action.pyx":1272
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6pytraj_8c_action_8c_action_13Action_Volume_4help[] = "Action_Volume.help(self)";
static PyObject *__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_5help(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume_4help(((struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6pytraj_8c_action_8c_action_13Action_Volume_4help(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help", 0);

  /* "pytraj/c_action/c_action.pyx":1273
 * 
 *     def help(self):
 *         self.thisptr.Help()             # <<<<<<<<<<<<<<
 * 
 */
  __pyx_v_self->thisptr->Help();

  /* "pytraj/c_action/c_action.pyx":1272
 *             del self.baseptr
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.Help()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "frame.pxd":123
 *     cdef void _append_xyz_2d(self, double[:, :] xyz)
 * 
 * cdef inline int get_positive_idx(idx, size):             # <<<<<<<<<<<<<<
 *     # TODO : do we need this method?
 *     # we can we memoryview to get slicing too
 */

static CYTHON_INLINE int __pyx_f_6pytraj_5frame_get_positive_idx(PyObject *__pyx_v_idx, PyObject *__pyx_v_size) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_positive_idx", 0);
  __Pyx_INCREF(__pyx_v_idx);

  /* "frame.pxd":127
 *     # we can we memoryview to get slicing too
 *     """Used for negative indexing"""
 *     if idx < 0:             # <<<<<<<<<<<<<<
 *         idx = size + idx
 *         if idx < 0:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_idx, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "frame.pxd":128
 *     """Used for negative indexing"""
 *     if idx < 0:
 *         idx = size + idx             # <<<<<<<<<<<<<<
 *         if idx < 0:
 *             raise ValueError("index is out of range")
 */
    __pyx_t_1 = PyNumber_Add(__pyx_v_size, __pyx_v_idx); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_idx, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "frame.pxd":129
 *     if idx < 0:
 *         idx = size + idx
 *         if idx < 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("index is out of range")
 *     if idx >= size:
 */
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_idx, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_2) {

      /* "frame.pxd":130
 *         idx = size + idx
 *         if idx < 0:
 *             raise ValueError("index is out of range")             # <<<<<<<<<<<<<<
 *     if idx >= size:
 *         raise ValueError("index is out of range")
 */
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "frame.pxd":129
 *     if idx < 0:
 *         idx = size + idx
 *         if idx < 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("index is out of range")
 *     if idx >= size:
 */
    }

    /* "frame.pxd":127
 *     # we can we memoryview to get slicing too
 *     """Used for negative indexing"""
 *     if idx < 0:             # <<<<<<<<<<<<<<
 *         idx = size + idx
 *         if idx < 0:
 */
  }

  /* "frame.pxd":131
 *         if idx < 0:
 *             raise ValueError("index is out of range")
 *     if idx >= size:             # <<<<<<<<<<<<<<
 *         raise ValueError("index is out of range")
 *     return idx
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_idx, __pyx_v_size, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "frame.pxd":132
 *             raise ValueError("index is out of range")
 *     if idx >= size:
 *         raise ValueError("index is out of range")             # <<<<<<<<<<<<<<
 *     return idx
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[2]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "frame.pxd":131
 *         if idx < 0:
 *             raise ValueError("index is out of range")
 *     if idx >= size:             # <<<<<<<<<<<<<<
 *         raise ValueError("index is out of range")
 *     return idx
 */
  }

  /* "frame.pxd":133
 *     if idx >= size:
 *         raise ValueError("index is out of range")
 *     return idx             # <<<<<<<<<<<<<<
 */
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_idx); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_t_3;
  goto __pyx_L0;

  /* "frame.pxd":123
 *     cdef void _append_xyz_2d(self, double[:, :] xyz)
 * 
 * cdef inline int get_positive_idx(idx, size):             # <<<<<<<<<<<<<<
 *     # TODO : do we need this method?
 *     # we can we memoryview to get slicing too
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("pytraj.frame.get_positive_idx", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":118
 *         cdef bint dtype_is_object
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,             # <<<<<<<<<<<<<<
 *                   mode="c", bint allocate_buffer=True):
 * 
 */

/* Python wrapper */
static int __pyx_array___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_array___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_shape = 0;
  Py_ssize_t __pyx_v_itemsize;
  PyObject *__pyx_v_format = 0;
  PyObject *__pyx_v_mode = 0;
  int __pyx_v_allocate_buffer;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_shape,&__pyx_n_s_itemsize,&__pyx_n_s_format,&__pyx_n_s_mode,&__pyx_n_s_allocate_buffer,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[3] = ((PyObject *)__pyx_n_s_c);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_shape)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_itemsize)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 1); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_format)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 2); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mode);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_allocate_buffer);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_shape = ((PyObject*)values[0]);
    __pyx_v_itemsize = __Pyx_PyIndex_AsSsize_t(values[1]); if (unlikely((__pyx_v_itemsize == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_format = values[2];
    __pyx_v_mode = values[3];
    if (values[4]) {
      __pyx_v_allocate_buffer = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_allocate_buffer == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "View.MemoryView":119
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,
 *                   mode="c", bint allocate_buffer=True):             # <<<<<<<<<<<<<<
 * 
 *         cdef int idx
 */
      __pyx_v_allocate_buffer = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.array.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), (&PyTuple_Type), 1, "shape", 1))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(((PyObject *)__pyx_v_format) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "format"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(((struct __pyx_array_obj *)__pyx_v_self), __pyx_v_shape, __pyx_v_itemsize, __pyx_v_format, __pyx_v_mode, __pyx_v_allocate_buffer);

  /* "View.MemoryView":118
 *         cdef bint dtype_is_object
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,             # <<<<<<<<<<<<<<
 *                   mode="c", bint allocate_buffer=True):
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, PyObject *__pyx_v_format, PyObject *__pyx_v_mode, int __pyx_v_allocate_buffer) {
  int __pyx_v_idx;
  Py_ssize_t __pyx_v_i;
  Py_ssize_t __pyx_v_dim;
  PyObject **__pyx_v_p;
  char __pyx_v_order;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  char *__pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_format);

  /* "View.MemoryView":125
 *         cdef PyObject **p
 * 
 *         self.ndim = <int> len(shape)             # <<<<<<<<<<<<<<
 *         self.itemsize = itemsize
 * 
 */
  if (unlikely(__pyx_v_shape == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = PyTuple_GET_SIZE(__pyx_v_shape); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ndim = ((int)__pyx_t_1);

  /* "View.MemoryView":126
 * 
 *         self.ndim = <int> len(shape)
 *         self.itemsize = itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not self.ndim:
 */
  __pyx_v_self->itemsize = __pyx_v_itemsize;

  /* "View.MemoryView":128
 *         self.itemsize = itemsize
 * 
 *         if not self.ndim:             # <<<<<<<<<<<<<<
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_self->ndim != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":129
 * 
 *         if not self.ndim:
 *             raise ValueError("Empty shape tuple for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if itemsize <= 0:
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":128
 *         self.itemsize = itemsize
 * 
 *         if not self.ndim:             # <<<<<<<<<<<<<<
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 */
  }

  /* "View.MemoryView":131
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 *         if itemsize <= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 */
  __pyx_t_2 = ((__pyx_v_itemsize <= 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":132
 * 
 *         if itemsize <= 0:
 *             raise ValueError("itemsize <= 0 for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(format, bytes):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":131
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 *         if itemsize <= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 */
  }

  /* "View.MemoryView":134
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 *         if not isinstance(format, bytes):             # <<<<<<<<<<<<<<
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string
 */
  __pyx_t_2 = PyBytes_Check(__pyx_v_format); 
  __pyx_t_4 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_4) {

    /* "View.MemoryView":135
 * 
 *         if not isinstance(format, bytes):
 *             format = format.encode('ASCII')             # <<<<<<<<<<<<<<
 *         self._format = format  # keep a reference to the byte string
 *         self.format = self._format
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_format, __pyx_n_s_encode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_format, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "View.MemoryView":134
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 *         if not isinstance(format, bytes):             # <<<<<<<<<<<<<<
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string
 */
  }

  /* "View.MemoryView":136
 *         if not isinstance(format, bytes):
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string             # <<<<<<<<<<<<<<
 *         self.format = self._format
 * 
 */
  if (!(likely(PyBytes_CheckExact(__pyx_v_format))||((__pyx_v_format) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_format)->tp_name), 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_v_format;
  __Pyx_INCREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __Pyx_GOTREF(__pyx_v_self->_format);
  __Pyx_DECREF(__pyx_v_self->_format);
  __pyx_v_self->_format = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "View.MemoryView":137
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string
 *         self.format = self._format             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_AsString(__pyx_v_self->_format); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->format = __pyx_t_6;

  /* "View.MemoryView":140
 * 
 * 
 *         self._shape = <Py_ssize_t *> PyMem_Malloc(sizeof(Py_ssize_t)*self.ndim*2)             # <<<<<<<<<<<<<<
 *         self._strides = self._shape + self.ndim
 * 
 */
  __pyx_v_self->_shape = ((Py_ssize_t *)PyMem_Malloc((((sizeof(Py_ssize_t)) * __pyx_v_self->ndim) * 2)));

  /* "View.MemoryView":141
 * 
 *         self._shape = <Py_ssize_t *> PyMem_Malloc(sizeof(Py_ssize_t)*self.ndim*2)
 *         self._strides = self._shape + self.ndim             # <<<<<<<<<<<<<<
 * 
 *         if not self._shape:
 */
  __pyx_v_self->_strides = (__pyx_v_self->_shape + __pyx_v_self->ndim);

  /* "View.MemoryView":143
 *         self._strides = self._shape + self.ndim
 * 
 *         if not self._shape:             # <<<<<<<<<<<<<<
 *             raise MemoryError("unable to allocate shape and strides.")
 * 
 */
  __pyx_t_4 = ((!(__pyx_v_self->_shape != 0)) != 0);
  if (__pyx_t_4) {

    /* "View.MemoryView":144
 * 
 *         if not self._shape:
 *             raise MemoryError("unable to allocate shape and strides.")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_MemoryError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":143
 *         self._strides = self._shape + self.ndim
 * 
 *         if not self._shape:             # <<<<<<<<<<<<<<
 *             raise MemoryError("unable to allocate shape and strides.")
 * 
 */
  }

  /* "View.MemoryView":147
 * 
 * 
 *         for idx, dim in enumerate(shape):             # <<<<<<<<<<<<<<
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 */
  __pyx_t_7 = 0;
  __pyx_t_5 = __pyx_v_shape; __Pyx_INCREF(__pyx_t_5); __pyx_t_1 = 0;
  for (;;) {
    if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_1); __pyx_t_1++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_dim = __pyx_t_8;
    __pyx_v_idx = __pyx_t_7;
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "View.MemoryView":148
 * 
 *         for idx, dim in enumerate(shape):
 *             if dim <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 *             self._shape[idx] = dim
 */
    __pyx_t_4 = ((__pyx_v_dim <= 0) != 0);
    if (__pyx_t_4) {

      /* "View.MemoryView":149
 *         for idx, dim in enumerate(shape):
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))             # <<<<<<<<<<<<<<
 *             self._shape[idx] = dim
 * 
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_idx); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = PyInt_FromSsize_t(__pyx_v_dim); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_9);
      __pyx_t_3 = 0;
      __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyString_Format(__pyx_kp_s_Invalid_shape_in_axis_d_d, __pyx_t_10); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_10, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":148
 * 
 *         for idx, dim in enumerate(shape):
 *             if dim <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 *             self._shape[idx] = dim
 */
    }

    /* "View.MemoryView":150
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 *             self._shape[idx] = dim             # <<<<<<<<<<<<<<
 * 
 *         cdef char order
 */
    (__pyx_v_self->_shape[__pyx_v_idx]) = __pyx_v_dim;

    /* "View.MemoryView":147
 * 
 * 
 *         for idx, dim in enumerate(shape):             # <<<<<<<<<<<<<<
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 */
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "View.MemoryView":153
 * 
 *         cdef char order
 *         if mode == 'fortran':             # <<<<<<<<<<<<<<
 *             order = b'F'
 *             self.mode = u'fortran'
 */
  __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_v_mode, __pyx_n_s_fortran, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "View.MemoryView":154
 *         cdef char order
 *         if mode == 'fortran':
 *             order = b'F'             # <<<<<<<<<<<<<<
 *             self.mode = u'fortran'
 *         elif mode == 'c':
 */
    __pyx_v_order = 'F';

    /* "View.MemoryView":155
 *         if mode == 'fortran':
 *             order = b'F'
 *             self.mode = u'fortran'             # <<<<<<<<<<<<<<
 *         elif mode == 'c':
 *             order = b'C'
 */
    __Pyx_INCREF(__pyx_n_u_fortran);
    __Pyx_GIVEREF(__pyx_n_u_fortran);
    __Pyx_GOTREF(__pyx_v_self->mode);
    __Pyx_DECREF(__pyx_v_self->mode);
    __pyx_v_self->mode = __pyx_n_u_fortran;

    /* "View.MemoryView":153
 * 
 *         cdef char order
 *         if mode == 'fortran':             # <<<<<<<<<<<<<<
 *             order = b'F'
 *             self.mode = u'fortran'
 */
    goto __pyx_L10;
  }

  /* "View.MemoryView":156
 *             order = b'F'
 *             self.mode = u'fortran'
 *         elif mode == 'c':             # <<<<<<<<<<<<<<
 *             order = b'C'
 *             self.mode = u'c'
 */
  __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_v_mode, __pyx_n_s_c, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "View.MemoryView":157
 *             self.mode = u'fortran'
 *         elif mode == 'c':
 *             order = b'C'             # <<<<<<<<<<<<<<
 *             self.mode = u'c'
 *         else:
 */
    __pyx_v_order = 'C';

    /* "View.MemoryView":158
 *         elif mode == 'c':
 *             order = b'C'
 *             self.mode = u'c'             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError("Invalid mode, expected 'c' or 'fortran', got %s" % mode)
 */
    __Pyx_INCREF(__pyx_n_u_c);
    __Pyx_GIVEREF(__pyx_n_u_c);
    __Pyx_GOTREF(__pyx_v_self->mode);
    __Pyx_DECREF(__pyx_v_self->mode);
    __pyx_v_self->mode = __pyx_n_u_c;

    /* "View.MemoryView":156
 *             order = b'F'
 *             self.mode = u'fortran'
 *         elif mode == 'c':             # <<<<<<<<<<<<<<
 *             order = b'C'
 *             self.mode = u'c'
 */
    goto __pyx_L10;
  }

  /* "View.MemoryView":160
 *             self.mode = u'c'
 *         else:
 *             raise ValueError("Invalid mode, expected 'c' or 'fortran', got %s" % mode)             # <<<<<<<<<<<<<<
 * 
 *         self.len = fill_contig_strides_array(self._shape, self._strides,
 */
  /*else*/ {
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Invalid_mode_expected_c_or_fortr, __pyx_v_mode); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L10:;

  /* "View.MemoryView":162
 *             raise ValueError("Invalid mode, expected 'c' or 'fortran', got %s" % mode)
 * 
 *         self.len = fill_contig_strides_array(self._shape, self._strides,             # <<<<<<<<<<<<<<
 *                                              itemsize, self.ndim, order)
 * 
 */
  __pyx_v_self->len = __pyx_fill_contig_strides_array(__pyx_v_self->_shape, __pyx_v_self->_strides, __pyx_v_itemsize, __pyx_v_self->ndim, __pyx_v_order);

  /* "View.MemoryView":165
 *                                              itemsize, self.ndim, order)
 * 
 *         self.free_data = allocate_buffer             # <<<<<<<<<<<<<<
 *         self.dtype_is_object = format == b'O'
 *         if allocate_buffer:
 */
  __pyx_v_self->free_data = __pyx_v_allocate_buffer;

  /* "View.MemoryView":166
 * 
 *         self.free_data = allocate_buffer
 *         self.dtype_is_object = format == b'O'             # <<<<<<<<<<<<<<
 *         if allocate_buffer:
 * 
 */
  __pyx_t_5 = PyObject_RichCompare(__pyx_v_format, __pyx_n_b_O, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_self->dtype_is_object = __pyx_t_4;

  /* "View.MemoryView":167
 *         self.free_data = allocate_buffer
 *         self.dtype_is_object = format == b'O'
 *         if allocate_buffer:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = (__pyx_v_allocate_buffer != 0);
  if (__pyx_t_4) {

    /* "View.MemoryView":170
 * 
 * 
 *             self.data = <char *>malloc(self.len)             # <<<<<<<<<<<<<<
 *             if not self.data:
 *                 raise MemoryError("unable to allocate array data.")
 */
    __pyx_v_self->data = ((char *)malloc(__pyx_v_self->len));

    /* "View.MemoryView":171
 * 
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:             # <<<<<<<<<<<<<<
 *                 raise MemoryError("unable to allocate array data.")
 * 
 */
    __pyx_t_4 = ((!(__pyx_v_self->data != 0)) != 0);
    if (__pyx_t_4) {

      /* "View.MemoryView":172
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:
 *                 raise MemoryError("unable to allocate array data.")             # <<<<<<<<<<<<<<
 * 
 *             if self.dtype_is_object:
 */
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_MemoryError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":171
 * 
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:             # <<<<<<<<<<<<<<
 *                 raise MemoryError("unable to allocate array data.")
 * 
 */
    }

    /* "View.MemoryView":174
 *                 raise MemoryError("unable to allocate array data.")
 * 
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):
 */
    __pyx_t_4 = (__pyx_v_self->dtype_is_object != 0);
    if (__pyx_t_4) {

      /* "View.MemoryView":175
 * 
 *             if self.dtype_is_object:
 *                 p = <PyObject **> self.data             # <<<<<<<<<<<<<<
 *                 for i in range(self.len / itemsize):
 *                     p[i] = Py_None
 */
      __pyx_v_p = ((PyObject **)__pyx_v_self->data);

      /* "View.MemoryView":176
 *             if self.dtype_is_object:
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):             # <<<<<<<<<<<<<<
 *                     p[i] = Py_None
 *                     Py_INCREF(Py_None)
 */
      if (unlikely(__pyx_v_itemsize == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      else if (sizeof(Py_ssize_t) == sizeof(long) && (!(((Py_ssize_t)-1) > 0)) && unlikely(__pyx_v_itemsize == (Py_ssize_t)-1)  && unlikely(UNARY_NEG_WOULD_OVERFLOW(__pyx_v_self->len))) {
        PyErr_SetString(PyExc_OverflowError, "value too large to perform division");
        {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = __Pyx_div_Py_ssize_t(__pyx_v_self->len, __pyx_v_itemsize);
      for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_1; __pyx_t_8+=1) {
        __pyx_v_i = __pyx_t_8;

        /* "View.MemoryView":177
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):
 *                     p[i] = Py_None             # <<<<<<<<<<<<<<
 *                     Py_INCREF(Py_None)
 * 
 */
        (__pyx_v_p[__pyx_v_i]) = Py_None;

        /* "View.MemoryView":178
 *                 for i in range(self.len / itemsize):
 *                     p[i] = Py_None
 *                     Py_INCREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *     @cname('getbuffer')
 */
        Py_INCREF(Py_None);
      }

      /* "View.MemoryView":174
 *                 raise MemoryError("unable to allocate array data.")
 * 
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):
 */
    }

    /* "View.MemoryView":167
 *         self.free_data = allocate_buffer
 *         self.dtype_is_object = format == b'O'
 *         if allocate_buffer:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  }

  /* "View.MemoryView":118
 *         cdef bint dtype_is_object
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,             # <<<<<<<<<<<<<<
 *                   mode="c", bint allocate_buffer=True):
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("View.MemoryView.array.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_format);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":181
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         cdef int bufmode = -1
 *         if self.mode == u"c":
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_array_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_array_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(((struct __pyx_array_obj *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(struct __pyx_array_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_bufmode;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  char *__pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "View.MemoryView":182
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         cdef int bufmode = -1             # <<<<<<<<<<<<<<
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 */
  __pyx_v_bufmode = -1;

  /* "View.MemoryView":183
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         cdef int bufmode = -1
 *         if self.mode == u"c":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_self->mode, __pyx_n_u_c, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":184
 *         cdef int bufmode = -1
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS             # <<<<<<<<<<<<<<
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 */
    __pyx_v_bufmode = (PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS);

    /* "View.MemoryView":183
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         cdef int bufmode = -1
 *         if self.mode == u"c":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":185
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 */
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_v_self->mode, __pyx_n_u_fortran, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":186
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS             # <<<<<<<<<<<<<<
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 */
    __pyx_v_bufmode = (PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS);

    /* "View.MemoryView":185
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":187
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):             # <<<<<<<<<<<<<<
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data
 */
  __pyx_t_1 = ((!((__pyx_v_flags & __pyx_v_bufmode) != 0)) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":188
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")             # <<<<<<<<<<<<<<
 *         info.buf = self.data
 *         info.len = self.len
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":187
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):             # <<<<<<<<<<<<<<
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data
 */
  }

  /* "View.MemoryView":189
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data             # <<<<<<<<<<<<<<
 *         info.len = self.len
 *         info.ndim = self.ndim
 */
  __pyx_t_4 = __pyx_v_self->data;
  __pyx_v_info->buf = __pyx_t_4;

  /* "View.MemoryView":190
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data
 *         info.len = self.len             # <<<<<<<<<<<<<<
 *         info.ndim = self.ndim
 *         info.shape = self._shape
 */
  __pyx_t_5 = __pyx_v_self->len;
  __pyx_v_info->len = __pyx_t_5;

  /* "View.MemoryView":191
 *         info.buf = self.data
 *         info.len = self.len
 *         info.ndim = self.ndim             # <<<<<<<<<<<<<<
 *         info.shape = self._shape
 *         info.strides = self._strides
 */
  __pyx_t_6 = __pyx_v_self->ndim;
  __pyx_v_info->ndim = __pyx_t_6;

  /* "View.MemoryView":192
 *         info.len = self.len
 *         info.ndim = self.ndim
 *         info.shape = self._shape             # <<<<<<<<<<<<<<
 *         info.strides = self._strides
 *         info.suboffsets = NULL
 */
  __pyx_t_7 = __pyx_v_self->_shape;
  __pyx_v_info->shape = __pyx_t_7;

  /* "View.MemoryView":193
 *         info.ndim = self.ndim
 *         info.shape = self._shape
 *         info.strides = self._strides             # <<<<<<<<<<<<<<
 *         info.suboffsets = NULL
 *         info.itemsize = self.itemsize
 */
  __pyx_t_7 = __pyx_v_self->_strides;
  __pyx_v_info->strides = __pyx_t_7;

  /* "View.MemoryView":194
 *         info.shape = self._shape
 *         info.strides = self._strides
 *         info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *         info.itemsize = self.itemsize
 *         info.readonly = 0
 */
  __pyx_v_info->suboffsets = NULL;

  /* "View.MemoryView":195
 *         info.strides = self._strides
 *         info.suboffsets = NULL
 *         info.itemsize = self.itemsize             # <<<<<<<<<<<<<<
 *         info.readonly = 0
 * 
 */
  __pyx_t_5 = __pyx_v_self->itemsize;
  __pyx_v_info->itemsize = __pyx_t_5;

  /* "View.MemoryView":196
 *         info.suboffsets = NULL
 *         info.itemsize = self.itemsize
 *         info.readonly = 0             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_FORMAT:
 */
  __pyx_v_info->readonly = 0;

  /* "View.MemoryView":198
 *         info.readonly = 0
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.format
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_FORMAT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":199
 * 
 *         if flags & PyBUF_FORMAT:
 *             info.format = self.format             # <<<<<<<<<<<<<<
 *         else:
 *             info.format = NULL
 */
    __pyx_t_4 = __pyx_v_self->format;
    __pyx_v_info->format = __pyx_t_4;

    /* "View.MemoryView":198
 *         info.readonly = 0
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.format
 *         else:
 */
    goto __pyx_L5;
  }

  /* "View.MemoryView":201
 *             info.format = self.format
 *         else:
 *             info.format = NULL             # <<<<<<<<<<<<<<
 * 
 *         info.obj = self
 */
  /*else*/ {
    __pyx_v_info->format = NULL;
  }
  __pyx_L5:;

  /* "View.MemoryView":203
 *             info.format = NULL
 * 
 *         info.obj = self             # <<<<<<<<<<<<<<
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "View.MemoryView":181
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         cdef int bufmode = -1
 *         if self.mode == u"c":
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.array.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":207
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")
 * 
 *     def __dealloc__(array self):             # <<<<<<<<<<<<<<
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 */

/* Python wrapper */
static void __pyx_array___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_array___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(((struct __pyx_array_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(struct __pyx_array_obj *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "View.MemoryView":208
 * 
 *     def __dealloc__(array self):
 *         if self.callback_free_data != NULL:             # <<<<<<<<<<<<<<
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 */
  __pyx_t_1 = ((__pyx_v_self->callback_free_data != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":209
 *     def __dealloc__(array self):
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)             # <<<<<<<<<<<<<<
 *         elif self.free_data:
 *             if self.dtype_is_object:
 */
    __pyx_v_self->callback_free_data(__pyx_v_self->data);

    /* "View.MemoryView":208
 * 
 *     def __dealloc__(array self):
 *         if self.callback_free_data != NULL:             # <<<<<<<<<<<<<<
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":210
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 *         elif self.free_data:             # <<<<<<<<<<<<<<
 *             if self.dtype_is_object:
 *                 refcount_objects_in_slice(self.data, self._shape,
 */
  __pyx_t_1 = (__pyx_v_self->free_data != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":211
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 refcount_objects_in_slice(self.data, self._shape,
 *                                           self._strides, self.ndim, False)
 */
    __pyx_t_1 = (__pyx_v_self->dtype_is_object != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":212
 *         elif self.free_data:
 *             if self.dtype_is_object:
 *                 refcount_objects_in_slice(self.data, self._shape,             # <<<<<<<<<<<<<<
 *                                           self._strides, self.ndim, False)
 *             free(self.data)
 */
      __pyx_memoryview_refcount_objects_in_slice(__pyx_v_self->data, __pyx_v_self->_shape, __pyx_v_self->_strides, __pyx_v_self->ndim, 0);

      /* "View.MemoryView":211
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 refcount_objects_in_slice(self.data, self._shape,
 *                                           self._strides, self.ndim, False)
 */
    }

    /* "View.MemoryView":214
 *                 refcount_objects_in_slice(self.data, self._shape,
 *                                           self._strides, self.ndim, False)
 *             free(self.data)             # <<<<<<<<<<<<<<
 *         PyMem_Free(self._shape)
 * 
 */
    free(__pyx_v_self->data);

    /* "View.MemoryView":210
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 *         elif self.free_data:             # <<<<<<<<<<<<<<
 *             if self.dtype_is_object:
 *                 refcount_objects_in_slice(self.data, self._shape,
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":215
 *                                           self._strides, self.ndim, False)
 *             free(self.data)
 *         PyMem_Free(self._shape)             # <<<<<<<<<<<<<<
 * 
 *     property memview:
 */
  PyMem_Free(__pyx_v_self->_shape);

  /* "View.MemoryView":207
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")
 * 
 *     def __dealloc__(array self):             # <<<<<<<<<<<<<<
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":219
 *     property memview:
 *         @cname('get_memview')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 * 
 *             flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE
 */

/* Python wrapper */
static PyObject *get_memview(PyObject *__pyx_v_self); /*proto*/
static PyObject *get_memview(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_5array_7memview___get__(((struct __pyx_array_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_5array_7memview___get__(struct __pyx_array_obj *__pyx_v_self) {
  int __pyx_v_flags;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":221
 *         def __get__(self):
 * 
 *             flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE             # <<<<<<<<<<<<<<
 *             return  memoryview(self, flags, self.dtype_is_object)
 * 
 */
  __pyx_v_flags = ((PyBUF_ANY_CONTIGUOUS | PyBUF_FORMAT) | PyBUF_WRITABLE);

  /* "View.MemoryView":222
 * 
 *             flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE
 *             return  memoryview(self, flags, self.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->dtype_is_object); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryview_type), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":219
 *     property memview:
 *         @cname('get_memview')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 * 
 *             flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.array.memview.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":225
 * 
 * 
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         return getattr(self.memview, attr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_array___getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_array___getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getattr__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__getattr__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v_attr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__getattr__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_attr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getattr__", 0);

  /* "View.MemoryView":226
 * 
 *     def __getattr__(self, attr):
 *         return getattr(self.memview, attr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, item):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_memview); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetAttr(__pyx_t_1, __pyx_v_attr); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":225
 * 
 * 
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         return getattr(self.memview, attr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.array.__getattr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":228
 *         return getattr(self.memview, attr)
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         return self.memview[item]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_array___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_array___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getitem__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "View.MemoryView":229
 * 
 *     def __getitem__(self, item):
 *         return self.memview[item]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, item, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_memview); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_v_item); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":228
 *         return getattr(self.memview, attr)
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         return self.memview[item]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.array.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":231
 *         return self.memview[item]
 * 
 *     def __setitem__(self, item, value):             # <<<<<<<<<<<<<<
 *         self.memview[item] = value
 * 
 */

/* Python wrapper */
static int __pyx_array___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value); /*proto*/
static int __pyx_array___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__setitem__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v_item), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__setitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "View.MemoryView":232
 * 
 *     def __setitem__(self, item, value):
 *         self.memview[item] = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_memview); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyObject_SetItem(__pyx_t_1, __pyx_v_item, __pyx_v_value) < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "View.MemoryView":231
 *         return self.memview[item]
 * 
 *     def __setitem__(self, item, value):             # <<<<<<<<<<<<<<
 *         self.memview[item] = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.array.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":236
 * 
 * @cname("__pyx_array_new")
 * cdef array array_cwrapper(tuple shape, Py_ssize_t itemsize, char *format,             # <<<<<<<<<<<<<<
 *                           char *mode, char *buf):
 *     cdef array result
 */

static struct __pyx_array_obj *__pyx_array_new(PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, char *__pyx_v_format, char *__pyx_v_mode, char *__pyx_v_buf) {
  struct __pyx_array_obj *__pyx_v_result = 0;
  struct __pyx_array_obj *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("array_cwrapper", 0);

  /* "View.MemoryView":240
 *     cdef array result
 * 
 *     if buf == NULL:             # <<<<<<<<<<<<<<
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_buf == NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":241
 * 
 *     if buf == NULL:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))             # <<<<<<<<<<<<<<
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),
 */
    __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_itemsize); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_format); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_decode_c_string(__pyx_v_mode, 0, strlen(__pyx_v_mode), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_shape);
    __Pyx_GIVEREF(__pyx_v_shape);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_shape);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_array_type), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_result = ((struct __pyx_array_obj *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "View.MemoryView":240
 *     cdef array result
 * 
 *     if buf == NULL:             # <<<<<<<<<<<<<<
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":243
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),             # <<<<<<<<<<<<<<
 *                        allocate_buffer=False)
 *         result.data = buf
 */
  /*else*/ {
    __pyx_t_4 = PyInt_FromSsize_t(__pyx_v_itemsize); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyBytes_FromString(__pyx_v_format); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_decode_c_string(__pyx_v_mode, 0, strlen(__pyx_v_mode), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_shape);
    __Pyx_GIVEREF(__pyx_v_shape);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_shape);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_3 = 0;

    /* "View.MemoryView":244
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),
 *                        allocate_buffer=False)             # <<<<<<<<<<<<<<
 *         result.data = buf
 * 
 */
    __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_allocate_buffer, Py_False) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":243
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),             # <<<<<<<<<<<<<<
 *                        allocate_buffer=False)
 *         result.data = buf
 */
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_array_type), __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_result = ((struct __pyx_array_obj *)__pyx_t_5);
    __pyx_t_5 = 0;

    /* "View.MemoryView":245
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),
 *                        allocate_buffer=False)
 *         result.data = buf             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
    __pyx_v_result->data = __pyx_v_buf;
  }
  __pyx_L3:;

  /* "View.MemoryView":247
 *         result.data = buf
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "View.MemoryView":236
 * 
 * @cname("__pyx_array_new")
 * cdef array array_cwrapper(tuple shape, Py_ssize_t itemsize, char *format,             # <<<<<<<<<<<<<<
 *                           char *mode, char *buf):
 *     cdef array result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.array_cwrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":273
 * cdef class Enum(object):
 *     cdef object name
 *     def __init__(self, name):             # <<<<<<<<<<<<<<
 *         self.name = name
 *     def __repr__(self):
 */

/* Python wrapper */
static int __pyx_MemviewEnum___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_MemviewEnum___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name_2,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name_2)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_name = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.Enum.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(((struct __pyx_MemviewEnum_obj *)__pyx_v_self), __pyx_v_name);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(struct __pyx_MemviewEnum_obj *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "View.MemoryView":274
 *     cdef object name
 *     def __init__(self, name):
 *         self.name = name             # <<<<<<<<<<<<<<
 *     def __repr__(self):
 *         return self.name
 */
  __Pyx_INCREF(__pyx_v_name);
  __Pyx_GIVEREF(__pyx_v_name);
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(__pyx_v_self->name);
  __pyx_v_self->name = __pyx_v_name;

  /* "View.MemoryView":273
 * cdef class Enum(object):
 *     cdef object name
 *     def __init__(self, name):             # <<<<<<<<<<<<<<
 *         self.name = name
 *     def __repr__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":275
 *     def __init__(self, name):
 *         self.name = name
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return self.name
 * 
 */

/* Python wrapper */
static PyObject *__pyx_MemviewEnum___repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_MemviewEnum___repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(((struct __pyx_MemviewEnum_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(struct __pyx_MemviewEnum_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "View.MemoryView":276
 *         self.name = name
 *     def __repr__(self):
 *         return self.name             # <<<<<<<<<<<<<<
 * 
 * cdef generic = Enum("<strided and direct or indirect>")
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->name);
  __pyx_r = __pyx_v_self->name;
  goto __pyx_L0;

  /* "View.MemoryView":275
 *     def __init__(self, name):
 *         self.name = name
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return self.name
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":290
 * 
 * @cname('__pyx_align_pointer')
 * cdef void *align_pointer(void *memory, size_t alignment) nogil:             # <<<<<<<<<<<<<<
 *     "Align pointer memory on a given boundary"
 *     cdef Py_intptr_t aligned_p = <Py_intptr_t> memory
 */

static void *__pyx_align_pointer(void *__pyx_v_memory, size_t __pyx_v_alignment) {
  Py_intptr_t __pyx_v_aligned_p;
  size_t __pyx_v_offset;
  void *__pyx_r;
  int __pyx_t_1;

  /* "View.MemoryView":292
 * cdef void *align_pointer(void *memory, size_t alignment) nogil:
 *     "Align pointer memory on a given boundary"
 *     cdef Py_intptr_t aligned_p = <Py_intptr_t> memory             # <<<<<<<<<<<<<<
 *     cdef size_t offset
 * 
 */
  __pyx_v_aligned_p = ((Py_intptr_t)__pyx_v_memory);

  /* "View.MemoryView":296
 * 
 *     with cython.cdivision(True):
 *         offset = aligned_p % alignment             # <<<<<<<<<<<<<<
 * 
 *     if offset > 0:
 */
  __pyx_v_offset = (__pyx_v_aligned_p % __pyx_v_alignment);

  /* "View.MemoryView":298
 *         offset = aligned_p % alignment
 * 
 *     if offset > 0:             # <<<<<<<<<<<<<<
 *         aligned_p += alignment - offset
 * 
 */
  __pyx_t_1 = ((__pyx_v_offset > 0) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":299
 * 
 *     if offset > 0:
 *         aligned_p += alignment - offset             # <<<<<<<<<<<<<<
 * 
 *     return <void *> aligned_p
 */
    __pyx_v_aligned_p = (__pyx_v_aligned_p + (__pyx_v_alignment - __pyx_v_offset));

    /* "View.MemoryView":298
 *         offset = aligned_p % alignment
 * 
 *     if offset > 0:             # <<<<<<<<<<<<<<
 *         aligned_p += alignment - offset
 * 
 */
  }

  /* "View.MemoryView":301
 *         aligned_p += alignment - offset
 * 
 *     return <void *> aligned_p             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview')
 */
  __pyx_r = ((void *)__pyx_v_aligned_p);
  goto __pyx_L0;

  /* "View.MemoryView":290
 * 
 * @cname('__pyx_align_pointer')
 * cdef void *align_pointer(void *memory, size_t alignment) nogil:             # <<<<<<<<<<<<<<
 *     "Align pointer memory on a given boundary"
 *     cdef Py_intptr_t aligned_p = <Py_intptr_t> memory
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":319
 *     cdef __Pyx_TypeInfo *typeinfo
 * 
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):             # <<<<<<<<<<<<<<
 *         self.obj = obj
 *         self.flags = flags
 */

/* Python wrapper */
static int __pyx_memoryview___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_memoryview___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_obj = 0;
  int __pyx_v_flags;
  int __pyx_v_dtype_is_object;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_obj,&__pyx_n_s_flags,&__pyx_n_s_dtype_is_object,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_obj)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_flags)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dtype_is_object);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_obj = values[0];
    __pyx_v_flags = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_flags == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_dtype_is_object = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_dtype_is_object == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_dtype_is_object = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.memoryview.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(((struct __pyx_memoryview_obj *)__pyx_v_self), __pyx_v_obj, __pyx_v_flags, __pyx_v_dtype_is_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_v_flags, int __pyx_v_dtype_is_object) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "View.MemoryView":320
 * 
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):
 *         self.obj = obj             # <<<<<<<<<<<<<<
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:
 */
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  __Pyx_GOTREF(__pyx_v_self->obj);
  __Pyx_DECREF(__pyx_v_self->obj);
  __pyx_v_self->obj = __pyx_v_obj;

  /* "View.MemoryView":321
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):
 *         self.obj = obj
 *         self.flags = flags             # <<<<<<<<<<<<<<
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 */
  __pyx_v_self->flags = __pyx_v_flags;

  /* "View.MemoryView":322
 *         self.obj = obj
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:
 */
  __pyx_t_2 = (((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))) == ((PyObject *)__pyx_memoryview_type));
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__pyx_v_obj != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "View.MemoryView":323
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)             # <<<<<<<<<<<<<<
 *             if <PyObject *> self.view.obj == NULL:
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 */
    __pyx_t_4 = __Pyx_GetBuffer(__pyx_v_obj, (&__pyx_v_self->view), __pyx_v_flags); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":324
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:             # <<<<<<<<<<<<<<
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 *                 Py_INCREF(Py_None)
 */
    __pyx_t_1 = ((((PyObject *)__pyx_v_self->view.obj) == NULL) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":325
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:
 *                 (<__pyx_buffer *> &self.view).obj = Py_None             # <<<<<<<<<<<<<<
 *                 Py_INCREF(Py_None)
 * 
 */
      ((Py_buffer *)(&__pyx_v_self->view))->obj = Py_None;

      /* "View.MemoryView":326
 *             if <PyObject *> self.view.obj == NULL:
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 *                 Py_INCREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *         self.lock = PyThread_allocate_lock()
 */
      Py_INCREF(Py_None);

      /* "View.MemoryView":324
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:             # <<<<<<<<<<<<<<
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 *                 Py_INCREF(Py_None)
 */
    }

    /* "View.MemoryView":322
 *         self.obj = obj
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:
 */
  }

  /* "View.MemoryView":328
 *                 Py_INCREF(Py_None)
 * 
 *         self.lock = PyThread_allocate_lock()             # <<<<<<<<<<<<<<
 *         if self.lock == NULL:
 *             raise MemoryError
 */
  __pyx_v_self->lock = PyThread_allocate_lock();

  /* "View.MemoryView":329
 * 
 *         self.lock = PyThread_allocate_lock()
 *         if self.lock == NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->lock == NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":330
 *         self.lock = PyThread_allocate_lock()
 *         if self.lock == NULL:
 *             raise MemoryError             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_FORMAT:
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":329
 * 
 *         self.lock = PyThread_allocate_lock()
 *         if self.lock == NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError
 * 
 */
  }

  /* "View.MemoryView":332
 *             raise MemoryError
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             self.dtype_is_object = self.view.format == b'O'
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_FORMAT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":333
 * 
 *         if flags & PyBUF_FORMAT:
 *             self.dtype_is_object = self.view.format == b'O'             # <<<<<<<<<<<<<<
 *         else:
 *             self.dtype_is_object = dtype_is_object
 */
    __pyx_t_5 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_5, __pyx_n_b_O, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_self->dtype_is_object = __pyx_t_1;

    /* "View.MemoryView":332
 *             raise MemoryError
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             self.dtype_is_object = self.view.format == b'O'
 *         else:
 */
    goto __pyx_L8;
  }

  /* "View.MemoryView":335
 *             self.dtype_is_object = self.view.format == b'O'
 *         else:
 *             self.dtype_is_object = dtype_is_object             # <<<<<<<<<<<<<<
 * 
 *         self.acquisition_count_aligned_p = <__pyx_atomic_int *> align_pointer(
 */
  /*else*/ {
    __pyx_v_self->dtype_is_object = __pyx_v_dtype_is_object;
  }
  __pyx_L8:;

  /* "View.MemoryView":337
 *             self.dtype_is_object = dtype_is_object
 * 
 *         self.acquisition_count_aligned_p = <__pyx_atomic_int *> align_pointer(             # <<<<<<<<<<<<<<
 *                   <void *> &self.acquisition_count[0], sizeof(__pyx_atomic_int))
 *         self.typeinfo = NULL
 */
  __pyx_v_self->acquisition_count_aligned_p = ((__pyx_atomic_int *)__pyx_align_pointer(((void *)(&(__pyx_v_self->acquisition_count[0]))), (sizeof(__pyx_atomic_int))));

  /* "View.MemoryView":339
 *         self.acquisition_count_aligned_p = <__pyx_atomic_int *> align_pointer(
 *                   <void *> &self.acquisition_count[0], sizeof(__pyx_atomic_int))
 *         self.typeinfo = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(memoryview self):
 */
  __pyx_v_self->typeinfo = NULL;

  /* "View.MemoryView":319
 *     cdef __Pyx_TypeInfo *typeinfo
 * 
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):             # <<<<<<<<<<<<<<
 *         self.obj = obj
 *         self.flags = flags
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":341
 *         self.typeinfo = NULL
 * 
 *     def __dealloc__(memoryview self):             # <<<<<<<<<<<<<<
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)
 */

/* Python wrapper */
static void __pyx_memoryview___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_memoryview___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "View.MemoryView":342
 * 
 *     def __dealloc__(memoryview self):
 *         if self.obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_ReleaseBuffer(&self.view)
 * 
 */
  __pyx_t_1 = (__pyx_v_self->obj != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":343
 *     def __dealloc__(memoryview self):
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)             # <<<<<<<<<<<<<<
 * 
 *         if self.lock != NULL:
 */
    __Pyx_ReleaseBuffer((&__pyx_v_self->view));

    /* "View.MemoryView":342
 * 
 *     def __dealloc__(memoryview self):
 *         if self.obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_ReleaseBuffer(&self.view)
 * 
 */
  }

  /* "View.MemoryView":345
 *             __Pyx_ReleaseBuffer(&self.view)
 * 
 *         if self.lock != NULL:             # <<<<<<<<<<<<<<
 *             PyThread_free_lock(self.lock)
 * 
 */
  __pyx_t_2 = ((__pyx_v_self->lock != NULL) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":346
 * 
 *         if self.lock != NULL:
 *             PyThread_free_lock(self.lock)             # <<<<<<<<<<<<<<
 * 
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:
 */
    PyThread_free_lock(__pyx_v_self->lock);

    /* "View.MemoryView":345
 *             __Pyx_ReleaseBuffer(&self.view)
 * 
 *         if self.lock != NULL:             # <<<<<<<<<<<<<<
 *             PyThread_free_lock(self.lock)
 * 
 */
  }

  /* "View.MemoryView":341
 *         self.typeinfo = NULL
 * 
 *     def __dealloc__(memoryview self):             # <<<<<<<<<<<<<<
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":348
 *             PyThread_free_lock(self.lock)
 * 
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:             # <<<<<<<<<<<<<<
 *         cdef Py_ssize_t dim
 *         cdef char *itemp = <char *> self.view.buf
 */

static char *__pyx_memoryview_get_item_pointer(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index) {
  Py_ssize_t __pyx_v_dim;
  char *__pyx_v_itemp;
  PyObject *__pyx_v_idx = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_item_pointer", 0);

  /* "View.MemoryView":350
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:
 *         cdef Py_ssize_t dim
 *         cdef char *itemp = <char *> self.view.buf             # <<<<<<<<<<<<<<
 * 
 *         for dim, idx in enumerate(index):
 */
  __pyx_v_itemp = ((char *)__pyx_v_self->view.buf);

  /* "View.MemoryView":352
 *         cdef char *itemp = <char *> self.view.buf
 * 
 *         for dim, idx in enumerate(index):             # <<<<<<<<<<<<<<
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)
 * 
 */
  __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_v_index)) || PyTuple_CheckExact(__pyx_v_index)) {
    __pyx_t_2 = __pyx_v_index; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_index); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      }
    } else {
      __pyx_t_5 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_5)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[3]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    __Pyx_XDECREF_SET(__pyx_v_idx, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_v_dim = __pyx_t_1;
    __pyx_t_1 = (__pyx_t_1 + 1);

    /* "View.MemoryView":353
 * 
 *         for dim, idx in enumerate(index):
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)             # <<<<<<<<<<<<<<
 * 
 *         return itemp
 */
    __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_idx); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = __pyx_pybuffer_index((&__pyx_v_self->view), __pyx_v_itemp, __pyx_t_6, __pyx_v_dim); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_itemp = __pyx_t_7;

    /* "View.MemoryView":352
 *         cdef char *itemp = <char *> self.view.buf
 * 
 *         for dim, idx in enumerate(index):             # <<<<<<<<<<<<<<
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":355
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)
 * 
 *         return itemp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_itemp;
  goto __pyx_L0;

  /* "View.MemoryView":348
 *             PyThread_free_lock(self.lock)
 * 
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:             # <<<<<<<<<<<<<<
 *         cdef Py_ssize_t dim
 *         cdef char *itemp = <char *> self.view.buf
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview.get_item_pointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":358
 * 
 * 
 *     def __getitem__(memoryview self, object index):             # <<<<<<<<<<<<<<
 *         if index is Ellipsis:
 *             return self
 */

/* Python wrapper */
static PyObject *__pyx_memoryview___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static PyObject *__pyx_memoryview___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_v_have_slices = NULL;
  PyObject *__pyx_v_indices = NULL;
  char *__pyx_v_itemp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  char *__pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "View.MemoryView":359
 * 
 *     def __getitem__(memoryview self, object index):
 *         if index is Ellipsis:             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  __pyx_t_1 = (__pyx_v_index == __pyx_builtin_Ellipsis);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":360
 *     def __getitem__(memoryview self, object index):
 *         if index is Ellipsis:
 *             return self             # <<<<<<<<<<<<<<
 * 
 *         have_slices, indices = _unellipsify(index, self.view.ndim)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_v_self);
    goto __pyx_L0;

    /* "View.MemoryView":359
 * 
 *     def __getitem__(memoryview self, object index):
 *         if index is Ellipsis:             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  }

  /* "View.MemoryView":362
 *             return self
 * 
 *         have_slices, indices = _unellipsify(index, self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *         cdef char *itemp
 */
  __pyx_t_3 = _unellipsify(__pyx_v_index, __pyx_v_self->view.ndim); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(__pyx_t_3 != Py_None)) {
    PyObject* sequence = __pyx_t_3;
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
    __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_5);
    #else
    __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_have_slices = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_v_indices = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "View.MemoryView":365
 * 
 *         cdef char *itemp
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             return memview_slice(self, indices)
 *         else:
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_have_slices); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "View.MemoryView":366
 *         cdef char *itemp
 *         if have_slices:
 *             return memview_slice(self, indices)             # <<<<<<<<<<<<<<
 *         else:
 *             itemp = self.get_item_pointer(indices)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((PyObject *)__pyx_memview_slice(__pyx_v_self, __pyx_v_indices)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":365
 * 
 *         cdef char *itemp
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             return memview_slice(self, indices)
 *         else:
 */
  }

  /* "View.MemoryView":368
 *             return memview_slice(self, indices)
 *         else:
 *             itemp = self.get_item_pointer(indices)             # <<<<<<<<<<<<<<
 *             return self.convert_item_to_object(itemp)
 * 
 */
  /*else*/ {
    __pyx_t_6 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->get_item_pointer(__pyx_v_self, __pyx_v_indices); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_itemp = __pyx_t_6;

    /* "View.MemoryView":369
 *         else:
 *             itemp = self.get_item_pointer(indices)
 *             return self.convert_item_to_object(itemp)             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(memoryview self, object index, object value):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->convert_item_to_object(__pyx_v_self, __pyx_v_itemp); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "View.MemoryView":358
 * 
 * 
 *     def __getitem__(memoryview self, object index):             # <<<<<<<<<<<<<<
 *         if index is Ellipsis:
 *             return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_have_slices);
  __Pyx_XDECREF(__pyx_v_indices);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":371
 *             return self.convert_item_to_object(itemp)
 * 
 *     def __setitem__(memoryview self, object index, object value):             # <<<<<<<<<<<<<<
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 * 
 */

/* Python wrapper */
static int __pyx_memoryview___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /*proto*/
static int __pyx_memoryview___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((PyObject *)__pyx_v_index), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_have_slices = NULL;
  PyObject *__pyx_v_obj = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);
  __Pyx_INCREF(__pyx_v_index);

  /* "View.MemoryView":372
 * 
 *     def __setitem__(memoryview self, object index, object value):
 *         have_slices, index = _unellipsify(index, self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *         if have_slices:
 */
  __pyx_t_1 = _unellipsify(__pyx_v_index, __pyx_v_self->view.ndim); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(__pyx_t_1 != Py_None)) {
    PyObject* sequence = __pyx_t_1;
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
    __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_have_slices = __pyx_t_2;
  __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_index, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "View.MemoryView":374
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 * 
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             obj = self.is_slice(value)
 *             if obj:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_have_slices); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "View.MemoryView":375
 * 
 *         if have_slices:
 *             obj = self.is_slice(value)             # <<<<<<<<<<<<<<
 *             if obj:
 *                 self.setitem_slice_assignment(self[index], obj)
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->is_slice(__pyx_v_self, __pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_obj = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "View.MemoryView":376
 *         if have_slices:
 *             obj = self.is_slice(value)
 *             if obj:             # <<<<<<<<<<<<<<
 *                 self.setitem_slice_assignment(self[index], obj)
 *             else:
 */
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_obj); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_4) {

      /* "View.MemoryView":377
 *             obj = self.is_slice(value)
 *             if obj:
 *                 self.setitem_slice_assignment(self[index], obj)             # <<<<<<<<<<<<<<
 *             else:
 *                 self.setitem_slice_assign_scalar(self[index], value)
 */
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_index); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->setitem_slice_assignment(__pyx_v_self, __pyx_t_1, __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "View.MemoryView":376
 *         if have_slices:
 *             obj = self.is_slice(value)
 *             if obj:             # <<<<<<<<<<<<<<
 *                 self.setitem_slice_assignment(self[index], obj)
 *             else:
 */
      goto __pyx_L4;
    }

    /* "View.MemoryView":379
 *                 self.setitem_slice_assignment(self[index], obj)
 *             else:
 *                 self.setitem_slice_assign_scalar(self[index], value)             # <<<<<<<<<<<<<<
 *         else:
 *             self.setitem_indexed(index, value)
 */
    /*else*/ {
      __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_index); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_memoryview_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->setitem_slice_assign_scalar(__pyx_v_self, ((struct __pyx_memoryview_obj *)__pyx_t_3), __pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_L4:;

    /* "View.MemoryView":374
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 * 
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             obj = self.is_slice(value)
 *             if obj:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":381
 *                 self.setitem_slice_assign_scalar(self[index], value)
 *         else:
 *             self.setitem_indexed(index, value)             # <<<<<<<<<<<<<<
 * 
 *     cdef is_slice(self, obj):
 */
  /*else*/ {
    __pyx_t_1 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->setitem_indexed(__pyx_v_self, __pyx_v_index, __pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "View.MemoryView":371
 *             return self.convert_item_to_object(itemp)
 * 
 *     def __setitem__(memoryview self, object index, object value):             # <<<<<<<<<<<<<<
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_have_slices);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":383
 *             self.setitem_indexed(index, value)
 * 
 *     cdef is_slice(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, memoryview):
 *             try:
 */

static PyObject *__pyx_memoryview_is_slice(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_slice", 0);
  __Pyx_INCREF(__pyx_v_obj);

  /* "View.MemoryView":384
 * 
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):             # <<<<<<<<<<<<<<
 *             try:
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, __pyx_memoryview_type); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":385
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):
 *             try:             # <<<<<<<<<<<<<<
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      /*try:*/ {

        /* "View.MemoryView":386
 *         if not isinstance(obj, memoryview):
 *             try:
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,             # <<<<<<<<<<<<<<
 *                                  self.dtype_is_object)
 *             except TypeError:
 */
        __pyx_t_6 = __Pyx_PyInt_From_int((__pyx_v_self->flags | PyBUF_ANY_CONTIGUOUS)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_6);

        /* "View.MemoryView":387
 *             try:
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)             # <<<<<<<<<<<<<<
 *             except TypeError:
 *                 return None
 */
        __pyx_t_7 = __Pyx_PyBool_FromLong(__pyx_v_self->dtype_is_object); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_7);

        /* "View.MemoryView":386
 *         if not isinstance(obj, memoryview):
 *             try:
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,             # <<<<<<<<<<<<<<
 *                                  self.dtype_is_object)
 *             except TypeError:
 */
        __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_obj);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_7);
        __pyx_t_6 = 0;
        __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryview_type), __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_7);
        __pyx_t_7 = 0;

        /* "View.MemoryView":385
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):
 *             try:             # <<<<<<<<<<<<<<
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 */
      }
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L11_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "View.MemoryView":388
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 *             except TypeError:             # <<<<<<<<<<<<<<
 *                 return None
 * 
 */
      __pyx_t_9 = PyErr_ExceptionMatches(__pyx_builtin_TypeError);
      if (__pyx_t_9) {
        __Pyx_AddTraceback("View.MemoryView.memoryview.is_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_8, &__pyx_t_6) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GOTREF(__pyx_t_6);

        /* "View.MemoryView":389
 *                                  self.dtype_is_object)
 *             except TypeError:
 *                 return None             # <<<<<<<<<<<<<<
 * 
 *         return obj
 */
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(Py_None);
        __pyx_r = Py_None;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L7_except_return;
      }
      goto __pyx_L6_except_error;
      __pyx_L6_except_error:;

      /* "View.MemoryView":385
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):
 *             try:             # <<<<<<<<<<<<<<
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 */
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L1_error;
      __pyx_L7_except_return:;
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L0;
      __pyx_L11_try_end:;
    }

    /* "View.MemoryView":384
 * 
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):             # <<<<<<<<<<<<<<
 *             try:
 *                 obj = memoryview(obj, self.flags|PyBUF_ANY_CONTIGUOUS,
 */
  }

  /* "View.MemoryView":391
 *                 return None
 * 
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     cdef setitem_slice_assignment(self, dst, src):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "View.MemoryView":383
 *             self.setitem_indexed(index, value)
 * 
 *     cdef is_slice(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, memoryview):
 *             try:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("View.MemoryView.memoryview.is_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":393
 *         return obj
 * 
 *     cdef setitem_slice_assignment(self, dst, src):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice dst_slice
 *         cdef __Pyx_memviewslice src_slice
 */

static PyObject *__pyx_memoryview_setitem_slice_assignment(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_dst, PyObject *__pyx_v_src) {
  __Pyx_memviewslice __pyx_v_dst_slice;
  __Pyx_memviewslice __pyx_v_src_slice;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_slice_assignment", 0);

  /* "View.MemoryView":397
 *         cdef __Pyx_memviewslice src_slice
 * 
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],             # <<<<<<<<<<<<<<
 *                                  get_slice_from_memview(dst, &dst_slice)[0],
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 */
  if (!(likely(((__pyx_v_src) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_src, __pyx_memoryview_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "View.MemoryView":398
 * 
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],
 *                                  get_slice_from_memview(dst, &dst_slice)[0],             # <<<<<<<<<<<<<<
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 * 
 */
  if (!(likely(((__pyx_v_dst) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_dst, __pyx_memoryview_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "View.MemoryView":399
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],
 *                                  get_slice_from_memview(dst, &dst_slice)[0],
 *                                  src.ndim, dst.ndim, self.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_src, __pyx_n_s_ndim); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_dst, __pyx_n_s_ndim); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "View.MemoryView":397
 *         cdef __Pyx_memviewslice src_slice
 * 
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],             # <<<<<<<<<<<<<<
 *                                  get_slice_from_memview(dst, &dst_slice)[0],
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 */
  __pyx_t_4 = __pyx_memoryview_copy_contents((__pyx_memoryview_get_slice_from_memoryview(((struct __pyx_memoryview_obj *)__pyx_v_src), (&__pyx_v_src_slice))[0]), (__pyx_memoryview_get_slice_from_memoryview(((struct __pyx_memoryview_obj *)__pyx_v_dst), (&__pyx_v_dst_slice))[0]), __pyx_t_2, __pyx_t_3, __pyx_v_self->dtype_is_object); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "View.MemoryView":393
 *         return obj
 * 
 *     cdef setitem_slice_assignment(self, dst, src):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice dst_slice
 *         cdef __Pyx_memviewslice src_slice
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.setitem_slice_assignment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":401
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 * 
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):             # <<<<<<<<<<<<<<
 *         cdef int array[128]
 *         cdef void *tmp = NULL
 */

static PyObject *__pyx_memoryview_setitem_slice_assign_scalar(struct __pyx_memoryview_obj *__pyx_v_self, struct __pyx_memoryview_obj *__pyx_v_dst, PyObject *__pyx_v_value) {
  int __pyx_v_array[0x80];
  void *__pyx_v_tmp;
  void *__pyx_v_item;
  __Pyx_memviewslice *__pyx_v_dst_slice;
  __Pyx_memviewslice __pyx_v_tmp_slice;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  char const *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_slice_assign_scalar", 0);

  /* "View.MemoryView":403
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):
 *         cdef int array[128]
 *         cdef void *tmp = NULL             # <<<<<<<<<<<<<<
 *         cdef void *item
 * 
 */
  __pyx_v_tmp = NULL;

  /* "View.MemoryView":408
 *         cdef __Pyx_memviewslice *dst_slice
 *         cdef __Pyx_memviewslice tmp_slice
 *         dst_slice = get_slice_from_memview(dst, &tmp_slice)             # <<<<<<<<<<<<<<
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):
 */
  __pyx_v_dst_slice = __pyx_memoryview_get_slice_from_memoryview(__pyx_v_dst, (&__pyx_v_tmp_slice));

  /* "View.MemoryView":410
 *         dst_slice = get_slice_from_memview(dst, &tmp_slice)
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):             # <<<<<<<<<<<<<<
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:
 */
  __pyx_t_1 = ((((size_t)__pyx_v_self->view.itemsize) > (sizeof(__pyx_v_array))) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":411
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):
 *             tmp = PyMem_Malloc(self.view.itemsize)             # <<<<<<<<<<<<<<
 *             if tmp == NULL:
 *                 raise MemoryError
 */
    __pyx_v_tmp = PyMem_Malloc(__pyx_v_self->view.itemsize);

    /* "View.MemoryView":412
 *         if <size_t>self.view.itemsize > sizeof(array):
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:             # <<<<<<<<<<<<<<
 *                 raise MemoryError
 *             item = tmp
 */
    __pyx_t_1 = ((__pyx_v_tmp == NULL) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":413
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:
 *                 raise MemoryError             # <<<<<<<<<<<<<<
 *             item = tmp
 *         else:
 */
      PyErr_NoMemory(); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":412
 *         if <size_t>self.view.itemsize > sizeof(array):
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:             # <<<<<<<<<<<<<<
 *                 raise MemoryError
 *             item = tmp
 */
    }

    /* "View.MemoryView":414
 *             if tmp == NULL:
 *                 raise MemoryError
 *             item = tmp             # <<<<<<<<<<<<<<
 *         else:
 *             item = <void *> array
 */
    __pyx_v_item = __pyx_v_tmp;

    /* "View.MemoryView":410
 *         dst_slice = get_slice_from_memview(dst, &tmp_slice)
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):             # <<<<<<<<<<<<<<
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":416
 *             item = tmp
 *         else:
 *             item = <void *> array             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  /*else*/ {
    __pyx_v_item = ((void *)__pyx_v_array);
  }
  __pyx_L3:;

  /* "View.MemoryView":418
 *             item = <void *> array
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             if self.dtype_is_object:
 *                 (<PyObject **> item)[0] = <PyObject *> value
 */
  /*try:*/ {

    /* "View.MemoryView":419
 * 
 *         try:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 (<PyObject **> item)[0] = <PyObject *> value
 *             else:
 */
    __pyx_t_1 = (__pyx_v_self->dtype_is_object != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":420
 *         try:
 *             if self.dtype_is_object:
 *                 (<PyObject **> item)[0] = <PyObject *> value             # <<<<<<<<<<<<<<
 *             else:
 *                 self.assign_item_from_object(<char *> item, value)
 */
      (((PyObject **)__pyx_v_item)[0]) = ((PyObject *)__pyx_v_value);

      /* "View.MemoryView":419
 * 
 *         try:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 (<PyObject **> item)[0] = <PyObject *> value
 *             else:
 */
      goto __pyx_L8;
    }

    /* "View.MemoryView":422
 *                 (<PyObject **> item)[0] = <PyObject *> value
 *             else:
 *                 self.assign_item_from_object(<char *> item, value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else*/ {
      __pyx_t_2 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->assign_item_from_object(__pyx_v_self, ((char *)__pyx_v_item), __pyx_v_value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L8:;

    /* "View.MemoryView":426
 * 
 * 
 *             if self.view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,
 */
    __pyx_t_1 = ((__pyx_v_self->view.suboffsets != NULL) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":427
 * 
 *             if self.view.suboffsets != NULL:
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)             # <<<<<<<<<<<<<<
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,
 *                                 item, self.dtype_is_object)
 */
      __pyx_t_2 = assert_direct_dimensions(__pyx_v_self->view.suboffsets, __pyx_v_self->view.ndim); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "View.MemoryView":426
 * 
 * 
 *             if self.view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,
 */
    }

    /* "View.MemoryView":428
 *             if self.view.suboffsets != NULL:
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,             # <<<<<<<<<<<<<<
 *                                 item, self.dtype_is_object)
 *         finally:
 */
    __pyx_memoryview_slice_assign_scalar(__pyx_v_dst_slice, __pyx_v_dst->view.ndim, __pyx_v_self->view.itemsize, __pyx_v_item, __pyx_v_self->dtype_is_object);
  }

  /* "View.MemoryView":431
 *                                 item, self.dtype_is_object)
 *         finally:
 *             PyMem_Free(tmp)             # <<<<<<<<<<<<<<
 * 
 *     cdef setitem_indexed(self, index, value):
 */
  /*finally:*/ {
    /*normal exit:*/{
      PyMem_Free(__pyx_v_tmp);
      goto __pyx_L7;
    }
    /*exception exit:*/{
      __pyx_L6_error:;
      __pyx_t_6 = 0; __pyx_t_7 = 0; __pyx_t_8 = 0; __pyx_t_9 = 0; __pyx_t_10 = 0; __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0)) __Pyx_ErrFetch(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_9);
      __Pyx_XGOTREF(__pyx_t_10);
      __Pyx_XGOTREF(__pyx_t_11);
      __pyx_t_3 = __pyx_lineno; __pyx_t_4 = __pyx_clineno; __pyx_t_5 = __pyx_filename;
      {
        PyMem_Free(__pyx_v_tmp);
      }
      if (PY_MAJOR_VERSION >= 3) {
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_ErrRestore(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      __pyx_t_6 = 0; __pyx_t_7 = 0; __pyx_t_8 = 0; __pyx_t_9 = 0; __pyx_t_10 = 0; __pyx_t_11 = 0;
      __pyx_lineno = __pyx_t_3; __pyx_clineno = __pyx_t_4; __pyx_filename = __pyx_t_5;
      goto __pyx_L1_error;
    }
    __pyx_L7:;
  }

  /* "View.MemoryView":401
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 * 
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):             # <<<<<<<<<<<<<<
 *         cdef int array[128]
 *         cdef void *tmp = NULL
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.setitem_slice_assign_scalar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":433
 *             PyMem_Free(tmp)
 * 
 *     cdef setitem_indexed(self, index, value):             # <<<<<<<<<<<<<<
 *         cdef char *itemp = self.get_item_pointer(index)
 *         self.assign_item_from_object(itemp, value)
 */

static PyObject *__pyx_memoryview_setitem_indexed(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  char *__pyx_v_itemp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_indexed", 0);

  /* "View.MemoryView":434
 * 
 *     cdef setitem_indexed(self, index, value):
 *         cdef char *itemp = self.get_item_pointer(index)             # <<<<<<<<<<<<<<
 *         self.assign_item_from_object(itemp, value)
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->get_item_pointer(__pyx_v_self, __pyx_v_index); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_itemp = __pyx_t_1;

  /* "View.MemoryView":435
 *     cdef setitem_indexed(self, index, value):
 *         cdef char *itemp = self.get_item_pointer(index)
 *         self.assign_item_from_object(itemp, value)             # <<<<<<<<<<<<<<
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->assign_item_from_object(__pyx_v_self, __pyx_v_itemp, __pyx_v_value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":433
 *             PyMem_Free(tmp)
 * 
 *     cdef setitem_indexed(self, index, value):             # <<<<<<<<<<<<<<
 *         cdef char *itemp = self.get_item_pointer(index)
 *         self.assign_item_from_object(itemp, value)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.setitem_indexed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":437
 *         self.assign_item_from_object(itemp, value)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

static PyObject *__pyx_memoryview_convert_item_to_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp) {
  PyObject *__pyx_v_struct = NULL;
  PyObject *__pyx_v_bytesitem = 0;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("convert_item_to_object", 0);

  /* "View.MemoryView":440
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 *         import struct             # <<<<<<<<<<<<<<
 *         cdef bytes bytesitem
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_struct, 0, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_struct = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "View.MemoryView":443
 *         cdef bytes bytesitem
 * 
 *         bytesitem = itemp[:self.view.itemsize]             # <<<<<<<<<<<<<<
 *         try:
 *             result = struct.unpack(self.view.format, bytesitem)
 */
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_itemp + 0, __pyx_v_self->view.itemsize - 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_bytesitem = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":444
 * 
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:             # <<<<<<<<<<<<<<
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "View.MemoryView":445
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:
 *             result = struct.unpack(self.view.format, bytesitem)             # <<<<<<<<<<<<<<
 *         except struct.error:
 *             raise ValueError("Unable to convert item to object")
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_unpack); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_6);
      __Pyx_INCREF(__pyx_v_bytesitem);
      __Pyx_GIVEREF(__pyx_v_bytesitem);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_v_bytesitem);
      __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_result = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "View.MemoryView":444
 * 
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:             # <<<<<<<<<<<<<<
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 */
    }

    /* "View.MemoryView":449
 *             raise ValueError("Unable to convert item to object")
 *         else:
 *             if len(self.view.format) == 1:             # <<<<<<<<<<<<<<
 *                 return result[0]
 *             return result
 */
    /*else:*/ {
      __pyx_t_10 = strlen(__pyx_v_self->view.format); 
      __pyx_t_11 = ((__pyx_t_10 == 1) != 0);
      if (__pyx_t_11) {

        /* "View.MemoryView":450
 *         else:
 *             if len(self.view.format) == 1:
 *                 return result[0]             # <<<<<<<<<<<<<<
 *             return result
 * 
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_result, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;};
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        goto __pyx_L6_except_return;

        /* "View.MemoryView":449
 *             raise ValueError("Unable to convert item to object")
 *         else:
 *             if len(self.view.format) == 1:             # <<<<<<<<<<<<<<
 *                 return result[0]
 *             return result
 */
      }

      /* "View.MemoryView":451
 *             if len(self.view.format) == 1:
 *                 return result[0]
 *             return result             # <<<<<<<<<<<<<<
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_result);
      __pyx_r = __pyx_v_result;
      goto __pyx_L6_except_return;
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "View.MemoryView":446
 *         try:
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unable to convert item to object")
 *         else:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_error); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_12) {
      __Pyx_AddTraceback("View.MemoryView.memoryview.convert_item_to_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_9) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_9);

      /* "View.MemoryView":447
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 *             raise ValueError("Unable to convert item to object")             # <<<<<<<<<<<<<<
 *         else:
 *             if len(self.view.format) == 1:
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "View.MemoryView":444
 * 
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:             # <<<<<<<<<<<<<<
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 */
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L0;
  }

  /* "View.MemoryView":437
 *         self.assign_item_from_object(itemp, value)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("View.MemoryView.memoryview.convert_item_to_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_struct);
  __Pyx_XDECREF(__pyx_v_bytesitem);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":453
 *             return result
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

static PyObject *__pyx_memoryview_assign_item_from_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_struct = NULL;
  char __pyx_v_c;
  PyObject *__pyx_v_bytesvalue = 0;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  char *__pyx_t_10;
  char *__pyx_t_11;
  char *__pyx_t_12;
  char *__pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assign_item_from_object", 0);

  /* "View.MemoryView":456
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 *         import struct             # <<<<<<<<<<<<<<
 *         cdef char c
 *         cdef bytes bytesvalue
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_struct, 0, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_struct = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "View.MemoryView":461
 *         cdef Py_ssize_t i
 * 
 *         if isinstance(value, tuple):             # <<<<<<<<<<<<<<
 *             bytesvalue = struct.pack(self.view.format, *value)
 *         else:
 */
  __pyx_t_2 = PyTuple_Check(__pyx_v_value); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "View.MemoryView":462
 * 
 *         if isinstance(value, tuple):
 *             bytesvalue = struct.pack(self.view.format, *value)             # <<<<<<<<<<<<<<
 *         else:
 *             bytesvalue = struct.pack(self.view.format, value)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_pack); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PySequence_Tuple(__pyx_v_value); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(PyBytes_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_bytesvalue = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "View.MemoryView":461
 *         cdef Py_ssize_t i
 * 
 *         if isinstance(value, tuple):             # <<<<<<<<<<<<<<
 *             bytesvalue = struct.pack(self.view.format, *value)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":464
 *             bytesvalue = struct.pack(self.view.format, *value)
 *         else:
 *             bytesvalue = struct.pack(self.view.format, value)             # <<<<<<<<<<<<<<
 * 
 *         for i, c in enumerate(bytesvalue):
 */
  /*else*/ {
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_pack); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_value);
    __Pyx_GIVEREF(__pyx_v_value);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_value);
    __pyx_t_1 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(PyBytes_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_bytesvalue = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "View.MemoryView":466
 *             bytesvalue = struct.pack(self.view.format, value)
 * 
 *         for i, c in enumerate(bytesvalue):             # <<<<<<<<<<<<<<
 *             itemp[i] = c
 * 
 */
  __pyx_t_7 = 0;
  if (unlikely(__pyx_v_bytesvalue == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' is not iterable");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_INCREF(__pyx_v_bytesvalue);
  __pyx_t_9 = __pyx_v_bytesvalue;
  __pyx_t_11 = PyBytes_AS_STRING(__pyx_t_9);
  __pyx_t_12 = (__pyx_t_11 + PyBytes_GET_SIZE(__pyx_t_9));
  for (__pyx_t_13 = __pyx_t_11; __pyx_t_13 < __pyx_t_12; __pyx_t_13++) {
    __pyx_t_10 = __pyx_t_13;
    __pyx_v_c = (__pyx_t_10[0]);

    /* "View.MemoryView":467
 * 
 *         for i, c in enumerate(bytesvalue):
 *             itemp[i] = c             # <<<<<<<<<<<<<<
 * 
 *     @cname('getbuffer')
 */
    __pyx_v_i = __pyx_t_7;

    /* "View.MemoryView":466
 *             bytesvalue = struct.pack(self.view.format, value)
 * 
 *         for i, c in enumerate(bytesvalue):             # <<<<<<<<<<<<<<
 *             itemp[i] = c
 * 
 */
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "View.MemoryView":467
 * 
 *         for i, c in enumerate(bytesvalue):
 *             itemp[i] = c             # <<<<<<<<<<<<<<
 * 
 *     @cname('getbuffer')
 */
    (__pyx_v_itemp[__pyx_v_i]) = __pyx_v_c;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

  /* "View.MemoryView":453
 *             return result
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("View.MemoryView.memoryview.assign_item_from_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_struct);
  __Pyx_XDECREF(__pyx_v_bytesvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":470
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         if flags & PyBUF_STRIDES:
 *             info.shape = self.view.shape
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_memoryview_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_memoryview_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(struct __pyx_memoryview_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t *__pyx_t_2;
  char *__pyx_t_3;
  void *__pyx_t_4;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "View.MemoryView":471
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_STRIDES:             # <<<<<<<<<<<<<<
 *             info.shape = self.view.shape
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_STRIDES) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":472
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_STRIDES:
 *             info.shape = self.view.shape             # <<<<<<<<<<<<<<
 *         else:
 *             info.shape = NULL
 */
    __pyx_t_2 = __pyx_v_self->view.shape;
    __pyx_v_info->shape = __pyx_t_2;

    /* "View.MemoryView":471
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_STRIDES:             # <<<<<<<<<<<<<<
 *             info.shape = self.view.shape
 *         else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":474
 *             info.shape = self.view.shape
 *         else:
 *             info.shape = NULL             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_STRIDES:
 */
  /*else*/ {
    __pyx_v_info->shape = NULL;
  }
  __pyx_L3:;

  /* "View.MemoryView":476
 *             info.shape = NULL
 * 
 *         if flags & PyBUF_STRIDES:             # <<<<<<<<<<<<<<
 *             info.strides = self.view.strides
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_STRIDES) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":477
 * 
 *         if flags & PyBUF_STRIDES:
 *             info.strides = self.view.strides             # <<<<<<<<<<<<<<
 *         else:
 *             info.strides = NULL
 */
    __pyx_t_2 = __pyx_v_self->view.strides;
    __pyx_v_info->strides = __pyx_t_2;

    /* "View.MemoryView":476
 *             info.shape = NULL
 * 
 *         if flags & PyBUF_STRIDES:             # <<<<<<<<<<<<<<
 *             info.strides = self.view.strides
 *         else:
 */
    goto __pyx_L4;
  }

  /* "View.MemoryView":479
 *             info.strides = self.view.strides
 *         else:
 *             info.strides = NULL             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_INDIRECT:
 */
  /*else*/ {
    __pyx_v_info->strides = NULL;
  }
  __pyx_L4:;

  /* "View.MemoryView":481
 *             info.strides = NULL
 * 
 *         if flags & PyBUF_INDIRECT:             # <<<<<<<<<<<<<<
 *             info.suboffsets = self.view.suboffsets
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_INDIRECT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":482
 * 
 *         if flags & PyBUF_INDIRECT:
 *             info.suboffsets = self.view.suboffsets             # <<<<<<<<<<<<<<
 *         else:
 *             info.suboffsets = NULL
 */
    __pyx_t_2 = __pyx_v_self->view.suboffsets;
    __pyx_v_info->suboffsets = __pyx_t_2;

    /* "View.MemoryView":481
 *             info.strides = NULL
 * 
 *         if flags & PyBUF_INDIRECT:             # <<<<<<<<<<<<<<
 *             info.suboffsets = self.view.suboffsets
 *         else:
 */
    goto __pyx_L5;
  }

  /* "View.MemoryView":484
 *             info.suboffsets = self.view.suboffsets
 *         else:
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_FORMAT:
 */
  /*else*/ {
    __pyx_v_info->suboffsets = NULL;
  }
  __pyx_L5:;

  /* "View.MemoryView":486
 *             info.suboffsets = NULL
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.view.format
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_FORMAT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":487
 * 
 *         if flags & PyBUF_FORMAT:
 *             info.format = self.view.format             # <<<<<<<<<<<<<<
 *         else:
 *             info.format = NULL
 */
    __pyx_t_3 = __pyx_v_self->view.format;
    __pyx_v_info->format = __pyx_t_3;

    /* "View.MemoryView":486
 *             info.suboffsets = NULL
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.view.format
 *         else:
 */
    goto __pyx_L6;
  }

  /* "View.MemoryView":489
 *             info.format = self.view.format
 *         else:
 *             info.format = NULL             # <<<<<<<<<<<<<<
 * 
 *         info.buf = self.view.buf
 */
  /*else*/ {
    __pyx_v_info->format = NULL;
  }
  __pyx_L6:;

  /* "View.MemoryView":491
 *             info.format = NULL
 * 
 *         info.buf = self.view.buf             # <<<<<<<<<<<<<<
 *         info.ndim = self.view.ndim
 *         info.itemsize = self.view.itemsize
 */
  __pyx_t_4 = __pyx_v_self->view.buf;
  __pyx_v_info->buf = __pyx_t_4;

  /* "View.MemoryView":492
 * 
 *         info.buf = self.view.buf
 *         info.ndim = self.view.ndim             # <<<<<<<<<<<<<<
 *         info.itemsize = self.view.itemsize
 *         info.len = self.view.len
 */
  __pyx_t_5 = __pyx_v_self->view.ndim;
  __pyx_v_info->ndim = __pyx_t_5;

  /* "View.MemoryView":493
 *         info.buf = self.view.buf
 *         info.ndim = self.view.ndim
 *         info.itemsize = self.view.itemsize             # <<<<<<<<<<<<<<
 *         info.len = self.view.len
 *         info.readonly = 0
 */
  __pyx_t_6 = __pyx_v_self->view.itemsize;
  __pyx_v_info->itemsize = __pyx_t_6;

  /* "View.MemoryView":494
 *         info.ndim = self.view.ndim
 *         info.itemsize = self.view.itemsize
 *         info.len = self.view.len             # <<<<<<<<<<<<<<
 *         info.readonly = 0
 *         info.obj = self
 */
  __pyx_t_6 = __pyx_v_self->view.len;
  __pyx_v_info->len = __pyx_t_6;

  /* "View.MemoryView":495
 *         info.itemsize = self.view.itemsize
 *         info.len = self.view.len
 *         info.readonly = 0             # <<<<<<<<<<<<<<
 *         info.obj = self
 * 
 */
  __pyx_v_info->readonly = 0;

  /* "View.MemoryView":496
 *         info.len = self.view.len
 *         info.readonly = 0
 *         info.obj = self             # <<<<<<<<<<<<<<
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "View.MemoryView":470
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         if flags & PyBUF_STRIDES:
 *             info.shape = self.view.shape
 */

  /* function exit code */
  __pyx_r = 0;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":503
 *     property T:
 *         @cname('__pyx_memoryview_transpose')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef _memoryviewslice result = memoryview_copy(self)
 *             transpose_memslice(&result.from_slice)
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_transpose(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_transpose(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  struct __pyx_memoryviewslice_obj *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":504
 *         @cname('__pyx_memoryview_transpose')
 *         def __get__(self):
 *             cdef _memoryviewslice result = memoryview_copy(self)             # <<<<<<<<<<<<<<
 *             transpose_memslice(&result.from_slice)
 *             return result
 */
  __pyx_t_1 = __pyx_memoryview_copy_object(__pyx_v_self); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_memoryviewslice_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_result = ((struct __pyx_memoryviewslice_obj *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":505
 *         def __get__(self):
 *             cdef _memoryviewslice result = memoryview_copy(self)
 *             transpose_memslice(&result.from_slice)             # <<<<<<<<<<<<<<
 *             return result
 * 
 */
  __pyx_t_2 = __pyx_memslice_transpose((&__pyx_v_result->from_slice)); if (unlikely(__pyx_t_2 == 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "View.MemoryView":506
 *             cdef _memoryviewslice result = memoryview_copy(self)
 *             transpose_memslice(&result.from_slice)
 *             return result             # <<<<<<<<<<<<<<
 * 
 *     property base:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "View.MemoryView":503
 *     property T:
 *         @cname('__pyx_memoryview_transpose')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef _memoryviewslice result = memoryview_copy(self)
 *             transpose_memslice(&result.from_slice)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":510
 *     property base:
 *         @cname('__pyx_memoryview__get__base')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.obj
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview__get__base(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview__get__base(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":511
 *         @cname('__pyx_memoryview__get__base')
 *         def __get__(self):
 *             return self.obj             # <<<<<<<<<<<<<<
 * 
 *     property shape:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->obj);
  __pyx_r = __pyx_v_self->obj;
  goto __pyx_L0;

  /* "View.MemoryView":510
 *     property base:
 *         @cname('__pyx_memoryview__get__base')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.obj
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":515
 *     property shape:
 *         @cname('__pyx_memoryview_get_shape')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return tuple([length for length in self.view.shape[:self.view.ndim]])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_shape(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_shape(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_v_length;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t *__pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":516
 *         @cname('__pyx_memoryview_get_shape')
 *         def __get__(self):
 *             return tuple([length for length in self.view.shape[:self.view.ndim]])             # <<<<<<<<<<<<<<
 * 
 *     property strides:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_v_self->view.shape + __pyx_v_self->view.ndim);
  for (__pyx_t_4 = __pyx_v_self->view.shape; __pyx_t_4 < __pyx_t_3; __pyx_t_4++) {
    __pyx_t_2 = __pyx_t_4;
    __pyx_v_length = (__pyx_t_2[0]);
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_v_length); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = PyList_AsTuple(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":515
 *     property shape:
 *         @cname('__pyx_memoryview_get_shape')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return tuple([length for length in self.view.shape[:self.view.ndim]])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview.shape.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":520
 *     property strides:
 *         @cname('__pyx_memoryview_get_strides')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.view.strides == NULL:
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_strides(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_strides(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_v_stride;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;
  Py_ssize_t *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":521
 *         @cname('__pyx_memoryview_get_strides')
 *         def __get__(self):
 *             if self.view.strides == NULL:             # <<<<<<<<<<<<<<
 * 
 *                 raise ValueError("Buffer view does not expose strides")
 */
  __pyx_t_1 = ((__pyx_v_self->view.strides == NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":523
 *             if self.view.strides == NULL:
 * 
 *                 raise ValueError("Buffer view does not expose strides")             # <<<<<<<<<<<<<<
 * 
 *             return tuple([stride for stride in self.view.strides[:self.view.ndim]])
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":521
 *         @cname('__pyx_memoryview_get_strides')
 *         def __get__(self):
 *             if self.view.strides == NULL:             # <<<<<<<<<<<<<<
 * 
 *                 raise ValueError("Buffer view does not expose strides")
 */
  }

  /* "View.MemoryView":525
 *                 raise ValueError("Buffer view does not expose strides")
 * 
 *             return tuple([stride for stride in self.view.strides[:self.view.ndim]])             # <<<<<<<<<<<<<<
 * 
 *     property suboffsets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = (__pyx_v_self->view.strides + __pyx_v_self->view.ndim);
  for (__pyx_t_5 = __pyx_v_self->view.strides; __pyx_t_5 < __pyx_t_4; __pyx_t_5++) {
    __pyx_t_3 = __pyx_t_5;
    __pyx_v_stride = (__pyx_t_3[0]);
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_v_stride); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_6))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_t_6 = PyList_AsTuple(((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":520
 *     property strides:
 *         @cname('__pyx_memoryview_get_strides')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.view.strides == NULL:
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView.memoryview.strides.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":529
 *     property suboffsets:
 *         @cname('__pyx_memoryview_get_suboffsets')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.view.suboffsets == NULL:
 *                 return (-1,) * self.view.ndim
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_suboffsets(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_suboffsets(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_v_suboffset;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t *__pyx_t_4;
  Py_ssize_t *__pyx_t_5;
  Py_ssize_t *__pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":530
 *         @cname('__pyx_memoryview_get_suboffsets')
 *         def __get__(self):
 *             if self.view.suboffsets == NULL:             # <<<<<<<<<<<<<<
 *                 return (-1,) * self.view.ndim
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->view.suboffsets == NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":531
 *         def __get__(self):
 *             if self.view.suboffsets == NULL:
 *                 return (-1,) * self.view.ndim             # <<<<<<<<<<<<<<
 * 
 *             return tuple([suboffset for suboffset in self.view.suboffsets[:self.view.ndim]])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->view.ndim); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_Multiply(__pyx_tuple__27, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":530
 *         @cname('__pyx_memoryview_get_suboffsets')
 *         def __get__(self):
 *             if self.view.suboffsets == NULL:             # <<<<<<<<<<<<<<
 *                 return (-1,) * self.view.ndim
 * 
 */
  }

  /* "View.MemoryView":533
 *                 return (-1,) * self.view.ndim
 * 
 *             return tuple([suboffset for suboffset in self.view.suboffsets[:self.view.ndim]])             # <<<<<<<<<<<<<<
 * 
 *     property ndim:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = (__pyx_v_self->view.suboffsets + __pyx_v_self->view.ndim);
  for (__pyx_t_6 = __pyx_v_self->view.suboffsets; __pyx_t_6 < __pyx_t_5; __pyx_t_6++) {
    __pyx_t_4 = __pyx_t_6;
    __pyx_v_suboffset = (__pyx_t_4[0]);
    __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_suboffset); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_2))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = PyList_AsTuple(((PyObject*)__pyx_t_3)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":529
 *     property suboffsets:
 *         @cname('__pyx_memoryview_get_suboffsets')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.view.suboffsets == NULL:
 *                 return (-1,) * self.view.ndim
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.suboffsets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":537
 *     property ndim:
 *         @cname('__pyx_memoryview_get_ndim')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.view.ndim
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_ndim(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_ndim(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":538
 *         @cname('__pyx_memoryview_get_ndim')
 *         def __get__(self):
 *             return self.view.ndim             # <<<<<<<<<<<<<<
 * 
 *     property itemsize:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->view.ndim); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":537
 *     property ndim:
 *         @cname('__pyx_memoryview_get_ndim')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.view.ndim
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.ndim.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":542
 *     property itemsize:
 *         @cname('__pyx_memoryview_get_itemsize')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.view.itemsize
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_itemsize(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_itemsize(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":543
 *         @cname('__pyx_memoryview_get_itemsize')
 *         def __get__(self):
 *             return self.view.itemsize             # <<<<<<<<<<<<<<
 * 
 *     property nbytes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_v_self->view.itemsize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":542
 *     property itemsize:
 *         @cname('__pyx_memoryview_get_itemsize')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.view.itemsize
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.itemsize.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":547
 *     property nbytes:
 *         @cname('__pyx_memoryview_get_nbytes')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.size * self.view.itemsize
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_nbytes(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_nbytes(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":548
 *         @cname('__pyx_memoryview_get_nbytes')
 *         def __get__(self):
 *             return self.size * self.view.itemsize             # <<<<<<<<<<<<<<
 * 
 *     property size:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_self->view.itemsize); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":547
 *     property nbytes:
 *         @cname('__pyx_memoryview_get_nbytes')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.size * self.view.itemsize
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.nbytes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":552
 *     property size:
 *         @cname('__pyx_memoryview_get_size')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self._size is None:
 *                 result = 1
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_get_size(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview_get_size(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_v_length = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;
  Py_ssize_t *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":553
 *         @cname('__pyx_memoryview_get_size')
 *         def __get__(self):
 *             if self._size is None:             # <<<<<<<<<<<<<<
 *                 result = 1
 * 
 */
  __pyx_t_1 = (__pyx_v_self->_size == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":554
 *         def __get__(self):
 *             if self._size is None:
 *                 result = 1             # <<<<<<<<<<<<<<
 * 
 *                 for length in self.view.shape[:self.view.ndim]:
 */
    __Pyx_INCREF(__pyx_int_1);
    __pyx_v_result = __pyx_int_1;

    /* "View.MemoryView":556
 *                 result = 1
 * 
 *                 for length in self.view.shape[:self.view.ndim]:             # <<<<<<<<<<<<<<
 *                     result *= length
 * 
 */
    __pyx_t_4 = (__pyx_v_self->view.shape + __pyx_v_self->view.ndim);
    for (__pyx_t_5 = __pyx_v_self->view.shape; __pyx_t_5 < __pyx_t_4; __pyx_t_5++) {
      __pyx_t_3 = __pyx_t_5;
      __pyx_t_6 = PyInt_FromSsize_t((__pyx_t_3[0])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_XDECREF_SET(__pyx_v_length, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "View.MemoryView":557
 * 
 *                 for length in self.view.shape[:self.view.ndim]:
 *                     result *= length             # <<<<<<<<<<<<<<
 * 
 *                 self._size = result
 */
      __pyx_t_6 = PyNumber_InPlaceMultiply(__pyx_v_result, __pyx_v_length); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_result, __pyx_t_6);
      __pyx_t_6 = 0;
    }

    /* "View.MemoryView":559
 *                     result *= length
 * 
 *                 self._size = result             # <<<<<<<<<<<<<<
 * 
 *             return self._size
 */
    __Pyx_INCREF(__pyx_v_result);
    __Pyx_GIVEREF(__pyx_v_result);
    __Pyx_GOTREF(__pyx_v_self->_size);
    __Pyx_DECREF(__pyx_v_self->_size);
    __pyx_v_self->_size = __pyx_v_result;

    /* "View.MemoryView":553
 *         @cname('__pyx_memoryview_get_size')
 *         def __get__(self):
 *             if self._size is None:             # <<<<<<<<<<<<<<
 *                 result = 1
 * 
 */
  }

  /* "View.MemoryView":561
 *                 self._size = result
 * 
 *             return self._size             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_size);
  __pyx_r = __pyx_v_self->_size;
  goto __pyx_L0;

  /* "View.MemoryView":552
 *     property size:
 *         @cname('__pyx_memoryview_get_size')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self._size is None:
 *                 result = 1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView.memoryview.size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_length);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":563
 *             return self._size
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         if self.view.ndim >= 1:
 *             return self.view.shape[0]
 */

/* Python wrapper */
static Py_ssize_t __pyx_memoryview___len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_memoryview___len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "View.MemoryView":564
 * 
 *     def __len__(self):
 *         if self.view.ndim >= 1:             # <<<<<<<<<<<<<<
 *             return self.view.shape[0]
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->view.ndim >= 1) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":565
 *     def __len__(self):
 *         if self.view.ndim >= 1:
 *             return self.view.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         return 0
 */
    __pyx_r = (__pyx_v_self->view.shape[0]);
    goto __pyx_L0;

    /* "View.MemoryView":564
 * 
 *     def __len__(self):
 *         if self.view.ndim >= 1:             # <<<<<<<<<<<<<<
 *             return self.view.shape[0]
 * 
 */
  }

  /* "View.MemoryView":567
 *             return self.view.shape[0]
 * 
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "View.MemoryView":563
 *             return self._size
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         if self.view.ndim >= 1:
 *             return self.view.shape[0]
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":569
 *         return 0
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,
 *                                                id(self))
 */

/* Python wrapper */
static PyObject *__pyx_memoryview___repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview___repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "View.MemoryView":570
 * 
 *     def __repr__(self):
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,             # <<<<<<<<<<<<<<
 *                                                id(self))
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_base); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_class); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":571
 *     def __repr__(self):
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,
 *                                                id(self))             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_id, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":570
 * 
 *     def __repr__(self):
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,             # <<<<<<<<<<<<<<
 *                                                id(self))
 * 
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_MemoryView_of_r_at_0x_x, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":569
 *         return 0
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,
 *                                                id(self))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":573
 *                                                id(self))
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r object>" % (self.base.__class__.__name__,)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview___str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview___str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "View.MemoryView":574
 * 
 *     def __str__(self):
 *         return "<MemoryView of %r object>" % (self.base.__class__.__name__,)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_base); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_class); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_MemoryView_of_r_object, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":573
 *                                                id(self))
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r object>" % (self.base.__class__.__name__,)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":577
 * 
 * 
 *     def is_c_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_is_c_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_is_c_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_c_contig (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice *__pyx_v_mslice;
  __Pyx_memviewslice __pyx_v_tmp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_c_contig", 0);

  /* "View.MemoryView":580
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)             # <<<<<<<<<<<<<<
 *         return slice_is_contig(mslice, 'C', self.view.ndim)
 * 
 */
  __pyx_v_mslice = __pyx_memoryview_get_slice_from_memoryview(__pyx_v_self, (&__pyx_v_tmp));

  /* "View.MemoryView":581
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)
 *         return slice_is_contig(mslice, 'C', self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *     def is_f_contig(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_memviewslice_is_contig(__pyx_v_mslice, 'C', __pyx_v_self->view.ndim)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":577
 * 
 * 
 *     def is_c_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.is_c_contig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":583
 *         return slice_is_contig(mslice, 'C', self.view.ndim)
 * 
 *     def is_f_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_is_f_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_is_f_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_f_contig (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice *__pyx_v_mslice;
  __Pyx_memviewslice __pyx_v_tmp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_f_contig", 0);

  /* "View.MemoryView":586
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)             # <<<<<<<<<<<<<<
 *         return slice_is_contig(mslice, 'F', self.view.ndim)
 * 
 */
  __pyx_v_mslice = __pyx_memoryview_get_slice_from_memoryview(__pyx_v_self, (&__pyx_v_tmp));

  /* "View.MemoryView":587
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)
 *         return slice_is_contig(mslice, 'F', self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *     def copy(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_memviewslice_is_contig(__pyx_v_mslice, 'F', __pyx_v_self->view.ndim)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":583
 *         return slice_is_contig(mslice, 'C', self.view.ndim)
 * 
 *     def is_f_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.is_f_contig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":589
 *         return slice_is_contig(mslice, 'F', self.view.ndim)
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice mslice
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice __pyx_v_mslice;
  int __pyx_v_flags;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "View.MemoryView":591
 *     def copy(self):
 *         cdef __Pyx_memviewslice mslice
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS             # <<<<<<<<<<<<<<
 * 
 *         slice_copy(self, &mslice)
 */
  __pyx_v_flags = (__pyx_v_self->flags & (~PyBUF_F_CONTIGUOUS));

  /* "View.MemoryView":593
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS
 * 
 *         slice_copy(self, &mslice)             # <<<<<<<<<<<<<<
 *         mslice = slice_copy_contig(&mslice, "c", self.view.ndim,
 *                                    self.view.itemsize,
 */
  __pyx_memoryview_slice_copy(__pyx_v_self, (&__pyx_v_mslice));

  /* "View.MemoryView":594
 * 
 *         slice_copy(self, &mslice)
 *         mslice = slice_copy_contig(&mslice, "c", self.view.ndim,             # <<<<<<<<<<<<<<
 *                                    self.view.itemsize,
 *                                    flags|PyBUF_C_CONTIGUOUS,
 */
  __pyx_t_1 = __pyx_memoryview_copy_new_contig((&__pyx_v_mslice), __pyx_k_c, __pyx_v_self->view.ndim, __pyx_v_self->view.itemsize, (__pyx_v_flags | PyBUF_C_CONTIGUOUS), __pyx_v_self->dtype_is_object); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_mslice = __pyx_t_1;

  /* "View.MemoryView":599
 *                                    self.dtype_is_object)
 * 
 *         return memoryview_copy_from_slice(self, &mslice)             # <<<<<<<<<<<<<<
 * 
 *     def copy_fortran(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_memoryview_copy_object_from_slice(__pyx_v_self, (&__pyx_v_mslice)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":589
 *         return slice_is_contig(mslice, 'F', self.view.ndim)
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice mslice
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":601
 *         return memoryview_copy_from_slice(self, &mslice)
 * 
 *     def copy_fortran(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice src, dst
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_copy_fortran(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_copy_fortran(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy_fortran (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice __pyx_v_src;
  __Pyx_memviewslice __pyx_v_dst;
  int __pyx_v_flags;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_fortran", 0);

  /* "View.MemoryView":603
 *     def copy_fortran(self):
 *         cdef __Pyx_memviewslice src, dst
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS             # <<<<<<<<<<<<<<
 * 
 *         slice_copy(self, &src)
 */
  __pyx_v_flags = (__pyx_v_self->flags & (~PyBUF_C_CONTIGUOUS));

  /* "View.MemoryView":605
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS
 * 
 *         slice_copy(self, &src)             # <<<<<<<<<<<<<<
 *         dst = slice_copy_contig(&src, "fortran", self.view.ndim,
 *                                 self.view.itemsize,
 */
  __pyx_memoryview_slice_copy(__pyx_v_self, (&__pyx_v_src));

  /* "View.MemoryView":606
 * 
 *         slice_copy(self, &src)
 *         dst = slice_copy_contig(&src, "fortran", self.view.ndim,             # <<<<<<<<<<<<<<
 *                                 self.view.itemsize,
 *                                 flags|PyBUF_F_CONTIGUOUS,
 */
  __pyx_t_1 = __pyx_memoryview_copy_new_contig((&__pyx_v_src), __pyx_k_fortran, __pyx_v_self->view.ndim, __pyx_v_self->view.itemsize, (__pyx_v_flags | PyBUF_F_CONTIGUOUS), __pyx_v_self->dtype_is_object); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_dst = __pyx_t_1;

  /* "View.MemoryView":611
 *                                 self.dtype_is_object)
 * 
 *         return memoryview_copy_from_slice(self, &dst)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_memoryview_copy_object_from_slice(__pyx_v_self, (&__pyx_v_dst)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":601
 *         return memoryview_copy_from_slice(self, &mslice)
 * 
 *     def copy_fortran(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice src, dst
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.copy_fortran", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":615
 * 
 * @cname('__pyx_memoryview_new')
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):             # <<<<<<<<<<<<<<
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo
 */

static PyObject *__pyx_memoryview_new(PyObject *__pyx_v_o, int __pyx_v_flags, int __pyx_v_dtype_is_object, __Pyx_TypeInfo *__pyx_v_typeinfo) {
  struct __pyx_memoryview_obj *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_cwrapper", 0);

  /* "View.MemoryView":616
 * @cname('__pyx_memoryview_new')
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)             # <<<<<<<<<<<<<<
 *     result.typeinfo = typeinfo
 *     return result
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_dtype_is_object); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_o);
  __Pyx_GIVEREF(__pyx_v_o);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_o);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryview_type), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_result = ((struct __pyx_memoryview_obj *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "View.MemoryView":617
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
  __pyx_v_result->typeinfo = __pyx_v_typeinfo;

  /* "View.MemoryView":618
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo
 *     return result             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_check')
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "View.MemoryView":615
 * 
 * @cname('__pyx_memoryview_new')
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):             # <<<<<<<<<<<<<<
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview_cwrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":621
 * 
 * @cname('__pyx_memoryview_check')
 * cdef inline bint memoryview_check(object o):             # <<<<<<<<<<<<<<
 *     return isinstance(o, memoryview)
 * 
 */

static CYTHON_INLINE int __pyx_memoryview_check(PyObject *__pyx_v_o) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("memoryview_check", 0);

  /* "View.MemoryView":622
 * @cname('__pyx_memoryview_check')
 * cdef inline bint memoryview_check(object o):
 *     return isinstance(o, memoryview)             # <<<<<<<<<<<<<<
 * 
 * cdef tuple _unellipsify(object index, int ndim):
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_o, __pyx_memoryview_type); 
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "View.MemoryView":621
 * 
 * @cname('__pyx_memoryview_check')
 * cdef inline bint memoryview_check(object o):             # <<<<<<<<<<<<<<
 *     return isinstance(o, memoryview)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":624
 *     return isinstance(o, memoryview)
 * 
 * cdef tuple _unellipsify(object index, int ndim):             # <<<<<<<<<<<<<<
 *     """
 *     Replace all ellipses with full slices and fill incomplete indices with
 */

static PyObject *_unellipsify(PyObject *__pyx_v_index, int __pyx_v_ndim) {
  PyObject *__pyx_v_tup = NULL;
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_have_slices;
  int __pyx_v_seen_ellipsis;
  CYTHON_UNUSED PyObject *__pyx_v_idx = NULL;
  PyObject *__pyx_v_item = NULL;
  Py_ssize_t __pyx_v_nslices;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_unellipsify", 0);

  /* "View.MemoryView":629
 *     full slices.
 *     """
 *     if not isinstance(index, tuple):             # <<<<<<<<<<<<<<
 *         tup = (index,)
 *     else:
 */
  __pyx_t_1 = PyTuple_Check(__pyx_v_index); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":630
 *     """
 *     if not isinstance(index, tuple):
 *         tup = (index,)             # <<<<<<<<<<<<<<
 *     else:
 *         tup = index
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_index);
    __Pyx_GIVEREF(__pyx_v_index);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_index);
    __pyx_v_tup = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "View.MemoryView":629
 *     full slices.
 *     """
 *     if not isinstance(index, tuple):             # <<<<<<<<<<<<<<
 *         tup = (index,)
 *     else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":632
 *         tup = (index,)
 *     else:
 *         tup = index             # <<<<<<<<<<<<<<
 * 
 *     result = []
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_v_index);
    __pyx_v_tup = __pyx_v_index;
  }
  __pyx_L3:;

  /* "View.MemoryView":634
 *         tup = index
 * 
 *     result = []             # <<<<<<<<<<<<<<
 *     have_slices = False
 *     seen_ellipsis = False
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_result = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "View.MemoryView":635
 * 
 *     result = []
 *     have_slices = False             # <<<<<<<<<<<<<<
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):
 */
  __pyx_v_have_slices = 0;

  /* "View.MemoryView":636
 *     result = []
 *     have_slices = False
 *     seen_ellipsis = False             # <<<<<<<<<<<<<<
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:
 */
  __pyx_v_seen_ellipsis = 0;

  /* "View.MemoryView":637
 *     have_slices = False
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):             # <<<<<<<<<<<<<<
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_3 = __pyx_int_0;
  if (likely(PyList_CheckExact(__pyx_v_tup)) || PyTuple_CheckExact(__pyx_v_tup)) {
    __pyx_t_4 = __pyx_v_tup; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_tup); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_7); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_7); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      }
    } else {
      __pyx_t_7 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_7)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_idx, __pyx_t_3);
    __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "View.MemoryView":638
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:             # <<<<<<<<<<<<<<
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 */
    __pyx_t_2 = (__pyx_v_item == __pyx_builtin_Ellipsis);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":639
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:
 *             if not seen_ellipsis:             # <<<<<<<<<<<<<<
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 *                 seen_ellipsis = True
 */
      __pyx_t_1 = ((!(__pyx_v_seen_ellipsis != 0)) != 0);
      if (__pyx_t_1) {

        /* "View.MemoryView":640
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))             # <<<<<<<<<<<<<<
 *                 seen_ellipsis = True
 *             else:
 */
        __pyx_t_8 = PyObject_Length(__pyx_v_tup); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_7 = PyList_New(1 * ((((__pyx_v_ndim - __pyx_t_8) + 1)<0) ? 0:((__pyx_v_ndim - __pyx_t_8) + 1))); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        { Py_ssize_t __pyx_temp;
          for (__pyx_temp=0; __pyx_temp < ((__pyx_v_ndim - __pyx_t_8) + 1); __pyx_temp++) {
            __Pyx_INCREF(__pyx_slice__28);
            __Pyx_GIVEREF(__pyx_slice__28);
            PyList_SET_ITEM(__pyx_t_7, __pyx_temp, __pyx_slice__28);
          }
        }
        __pyx_t_9 = __Pyx_PyList_Extend(__pyx_v_result, __pyx_t_7); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "View.MemoryView":641
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 *                 seen_ellipsis = True             # <<<<<<<<<<<<<<
 *             else:
 *                 result.append(slice(None))
 */
        __pyx_v_seen_ellipsis = 1;

        /* "View.MemoryView":639
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:
 *             if not seen_ellipsis:             # <<<<<<<<<<<<<<
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 *                 seen_ellipsis = True
 */
        goto __pyx_L7;
      }

      /* "View.MemoryView":643
 *                 seen_ellipsis = True
 *             else:
 *                 result.append(slice(None))             # <<<<<<<<<<<<<<
 *             have_slices = True
 *         else:
 */
      /*else*/ {
        __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_result, __pyx_slice__29); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L7:;

      /* "View.MemoryView":644
 *             else:
 *                 result.append(slice(None))
 *             have_slices = True             # <<<<<<<<<<<<<<
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):
 */
      __pyx_v_have_slices = 1;

      /* "View.MemoryView":638
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:             # <<<<<<<<<<<<<<
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 */
      goto __pyx_L6;
    }

    /* "View.MemoryView":646
 *             have_slices = True
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):             # <<<<<<<<<<<<<<
 *                 raise TypeError("Cannot index with type '%s'" % type(item))
 * 
 */
    /*else*/ {
      __pyx_t_2 = PySlice_Check(__pyx_v_item); 
      __pyx_t_10 = ((!(__pyx_t_2 != 0)) != 0);
      if (__pyx_t_10) {
      } else {
        __pyx_t_1 = __pyx_t_10;
        goto __pyx_L9_bool_binop_done;
      }
      __pyx_t_10 = ((!(PyIndex_Check(__pyx_v_item) != 0)) != 0);
      __pyx_t_1 = __pyx_t_10;
      __pyx_L9_bool_binop_done:;
      if (__pyx_t_1) {

        /* "View.MemoryView":647
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):
 *                 raise TypeError("Cannot index with type '%s'" % type(item))             # <<<<<<<<<<<<<<
 * 
 *             have_slices = have_slices or isinstance(item, slice)
 */
        __pyx_t_7 = __Pyx_PyString_Format(__pyx_kp_s_Cannot_index_with_type_s, ((PyObject *)Py_TYPE(__pyx_v_item))); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_11 = PyTuple_New(1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_t_11, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_Raise(__pyx_t_7, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        {__pyx_filename = __pyx_f[3]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

        /* "View.MemoryView":646
 *             have_slices = True
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):             # <<<<<<<<<<<<<<
 *                 raise TypeError("Cannot index with type '%s'" % type(item))
 * 
 */
      }

      /* "View.MemoryView":649
 *                 raise TypeError("Cannot index with type '%s'" % type(item))
 * 
 *             have_slices = have_slices or isinstance(item, slice)             # <<<<<<<<<<<<<<
 *             result.append(item)
 * 
 */
      __pyx_t_10 = (__pyx_v_have_slices != 0);
      if (!__pyx_t_10) {
      } else {
        __pyx_t_1 = __pyx_t_10;
        goto __pyx_L11_bool_binop_done;
      }
      __pyx_t_10 = PySlice_Check(__pyx_v_item); 
      __pyx_t_2 = (__pyx_t_10 != 0);
      __pyx_t_1 = __pyx_t_2;
      __pyx_L11_bool_binop_done:;
      __pyx_v_have_slices = __pyx_t_1;

      /* "View.MemoryView":650
 * 
 *             have_slices = have_slices or isinstance(item, slice)
 *             result.append(item)             # <<<<<<<<<<<<<<
 * 
 *     nslices = ndim - len(result)
 */
      __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_result, __pyx_v_item); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L6:;

    /* "View.MemoryView":637
 *     have_slices = False
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):             # <<<<<<<<<<<<<<
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "View.MemoryView":652
 *             result.append(item)
 * 
 *     nslices = ndim - len(result)             # <<<<<<<<<<<<<<
 *     if nslices:
 *         result.extend([slice(None)] * nslices)
 */
  __pyx_t_5 = PyList_GET_SIZE(__pyx_v_result); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_nslices = (__pyx_v_ndim - __pyx_t_5);

  /* "View.MemoryView":653
 * 
 *     nslices = ndim - len(result)
 *     if nslices:             # <<<<<<<<<<<<<<
 *         result.extend([slice(None)] * nslices)
 * 
 */
  __pyx_t_1 = (__pyx_v_nslices != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":654
 *     nslices = ndim - len(result)
 *     if nslices:
 *         result.extend([slice(None)] * nslices)             # <<<<<<<<<<<<<<
 * 
 *     return have_slices or nslices, tuple(result)
 */
    __pyx_t_3 = PyList_New(1 * ((__pyx_v_nslices<0) ? 0:__pyx_v_nslices)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    { Py_ssize_t __pyx_temp;
      for (__pyx_temp=0; __pyx_temp < __pyx_v_nslices; __pyx_temp++) {
        __Pyx_INCREF(__pyx_slice__30);
        __Pyx_GIVEREF(__pyx_slice__30);
        PyList_SET_ITEM(__pyx_t_3, __pyx_temp, __pyx_slice__30);
      }
    }
    __pyx_t_9 = __Pyx_PyList_Extend(__pyx_v_result, __pyx_t_3); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "View.MemoryView":653
 * 
 *     nslices = ndim - len(result)
 *     if nslices:             # <<<<<<<<<<<<<<
 *         result.extend([slice(None)] * nslices)
 * 
 */
  }

  /* "View.MemoryView":656
 *         result.extend([slice(None)] * nslices)
 * 
 *     return have_slices or nslices, tuple(result)             # <<<<<<<<<<<<<<
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 */
  __Pyx_XDECREF(__pyx_r);
  if (!__pyx_v_have_slices) {
  } else {
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_have_slices); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L14_bool_binop_done;
  }
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_v_nslices); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_L14_bool_binop_done:;
  __pyx_t_4 = PyList_AsTuple(__pyx_v_result); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":624
 *     return isinstance(o, memoryview)
 * 
 * cdef tuple _unellipsify(object index, int ndim):             # <<<<<<<<<<<<<<
 *     """
 *     Replace all ellipses with full slices and fill incomplete indices with
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("View.MemoryView._unellipsify", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tup);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":658
 *     return have_slices or nslices, tuple(result)
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):             # <<<<<<<<<<<<<<
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 */

static PyObject *assert_direct_dimensions(Py_ssize_t *__pyx_v_suboffsets, int __pyx_v_ndim) {
  Py_ssize_t __pyx_v_suboffset;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t *__pyx_t_1;
  Py_ssize_t *__pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assert_direct_dimensions", 0);

  /* "View.MemoryView":659
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 *     for suboffset in suboffsets[:ndim]:             # <<<<<<<<<<<<<<
 *         if suboffset >= 0:
 *             raise ValueError("Indirect dimensions not supported")
 */
  __pyx_t_2 = (__pyx_v_suboffsets + __pyx_v_ndim);
  for (__pyx_t_3 = __pyx_v_suboffsets; __pyx_t_3 < __pyx_t_2; __pyx_t_3++) {
    __pyx_t_1 = __pyx_t_3;
    __pyx_v_suboffset = (__pyx_t_1[0]);

    /* "View.MemoryView":660
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("Indirect dimensions not supported")
 * 
 */
    __pyx_t_4 = ((__pyx_v_suboffset >= 0) != 0);
    if (__pyx_t_4) {

      /* "View.MemoryView":661
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 *             raise ValueError("Indirect dimensions not supported")             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":660
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("Indirect dimensions not supported")
 * 
 */
    }
  }

  /* "View.MemoryView":658
 *     return have_slices or nslices, tuple(result)
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):             # <<<<<<<<<<<<<<
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.assert_direct_dimensions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":668
 * 
 * @cname('__pyx_memview_slice')
 * cdef memoryview memview_slice(memoryview memview, object indices):             # <<<<<<<<<<<<<<
 *     cdef int new_ndim = 0, suboffset_dim = -1, dim
 *     cdef bint negative_step
 */

static struct __pyx_memoryview_obj *__pyx_memview_slice(struct __pyx_memoryview_obj *__pyx_v_memview, PyObject *__pyx_v_indices) {
  int __pyx_v_new_ndim;
  int __pyx_v_suboffset_dim;
  int __pyx_v_dim;
  __Pyx_memviewslice __pyx_v_src;
  __Pyx_memviewslice __pyx_v_dst;
  __Pyx_memviewslice *__pyx_v_p_src;
  struct __pyx_memoryviewslice_obj *__pyx_v_memviewsliceobj = 0;
  __Pyx_memviewslice *__pyx_v_p_dst;
  int *__pyx_v_p_suboffset_dim;
  Py_ssize_t __pyx_v_start;
  Py_ssize_t __pyx_v_stop;
  Py_ssize_t __pyx_v_step;
  int __pyx_v_have_start;
  int __pyx_v_have_stop;
  int __pyx_v_have_step;
  PyObject *__pyx_v_index = NULL;
  struct __pyx_memoryview_obj *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_memoryview_obj *__pyx_t_4;
  char *__pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memview_slice", 0);

  /* "View.MemoryView":669
 * @cname('__pyx_memview_slice')
 * cdef memoryview memview_slice(memoryview memview, object indices):
 *     cdef int new_ndim = 0, suboffset_dim = -1, dim             # <<<<<<<<<<<<<<
 *     cdef bint negative_step
 *     cdef __Pyx_memviewslice src, dst
 */
  __pyx_v_new_ndim = 0;
  __pyx_v_suboffset_dim = -1;

  /* "View.MemoryView":676
 * 
 * 
 *     memset(&dst, 0, sizeof(dst))             # <<<<<<<<<<<<<<
 * 
 *     cdef _memoryviewslice memviewsliceobj
 */
  memset((&__pyx_v_dst), 0, (sizeof(__pyx_v_dst)));

  /* "View.MemoryView":680
 *     cdef _memoryviewslice memviewsliceobj
 * 
 *     assert memview.view.ndim > 0             # <<<<<<<<<<<<<<
 * 
 *     if isinstance(memview, _memoryviewslice):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_memview->view.ndim > 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "View.MemoryView":682
 *     assert memview.view.ndim > 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         memviewsliceobj = memview
 *         p_src = &memviewsliceobj.from_slice
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":683
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         memviewsliceobj = memview             # <<<<<<<<<<<<<<
 *         p_src = &memviewsliceobj.from_slice
 *     else:
 */
    if (!(likely(((((PyObject *)__pyx_v_memview)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = ((PyObject *)__pyx_v_memview);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_memviewsliceobj = ((struct __pyx_memoryviewslice_obj *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "View.MemoryView":684
 *     if isinstance(memview, _memoryviewslice):
 *         memviewsliceobj = memview
 *         p_src = &memviewsliceobj.from_slice             # <<<<<<<<<<<<<<
 *     else:
 *         slice_copy(memview, &src)
 */
    __pyx_v_p_src = (&__pyx_v_memviewsliceobj->from_slice);

    /* "View.MemoryView":682
 *     assert memview.view.ndim > 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         memviewsliceobj = memview
 *         p_src = &memviewsliceobj.from_slice
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":686
 *         p_src = &memviewsliceobj.from_slice
 *     else:
 *         slice_copy(memview, &src)             # <<<<<<<<<<<<<<
 *         p_src = &src
 * 
 */
  /*else*/ {
    __pyx_memoryview_slice_copy(__pyx_v_memview, (&__pyx_v_src));

    /* "View.MemoryView":687
 *     else:
 *         slice_copy(memview, &src)
 *         p_src = &src             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_p_src = (&__pyx_v_src);
  }
  __pyx_L3:;

  /* "View.MemoryView":693
 * 
 * 
 *     dst.memview = p_src.memview             # <<<<<<<<<<<<<<
 *     dst.data = p_src.data
 * 
 */
  __pyx_t_4 = __pyx_v_p_src->memview;
  __pyx_v_dst.memview = __pyx_t_4;

  /* "View.MemoryView":694
 * 
 *     dst.memview = p_src.memview
 *     dst.data = p_src.data             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __pyx_v_p_src->data;
  __pyx_v_dst.data = __pyx_t_5;

  /* "View.MemoryView":699
 * 
 * 
 *     cdef __Pyx_memviewslice *p_dst = &dst             # <<<<<<<<<<<<<<
 *     cdef int *p_suboffset_dim = &suboffset_dim
 *     cdef Py_ssize_t start, stop, step
 */
  __pyx_v_p_dst = (&__pyx_v_dst);

  /* "View.MemoryView":700
 * 
 *     cdef __Pyx_memviewslice *p_dst = &dst
 *     cdef int *p_suboffset_dim = &suboffset_dim             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t start, stop, step
 *     cdef bint have_start, have_stop, have_step
 */
  __pyx_v_p_suboffset_dim = (&__pyx_v_suboffset_dim);

  /* "View.MemoryView":704
 *     cdef bint have_start, have_stop, have_step
 * 
 *     for dim, index in enumerate(indices):             # <<<<<<<<<<<<<<
 *         if PyIndex_Check(index):
 *             slice_memviewslice(
 */
  __pyx_t_6 = 0;
  if (likely(PyList_CheckExact(__pyx_v_indices)) || PyTuple_CheckExact(__pyx_v_indices)) {
    __pyx_t_3 = __pyx_v_indices; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_indices); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_9 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_9 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_9 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        #endif
      }
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_3);
      if (unlikely(!__pyx_t_9)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[3]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_index, __pyx_t_9);
    __pyx_t_9 = 0;
    __pyx_v_dim = __pyx_t_6;
    __pyx_t_6 = (__pyx_t_6 + 1);

    /* "View.MemoryView":705
 * 
 *     for dim, index in enumerate(indices):
 *         if PyIndex_Check(index):             # <<<<<<<<<<<<<<
 *             slice_memviewslice(
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 */
    __pyx_t_2 = (PyIndex_Check(__pyx_v_index) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":709
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 *                 dim, new_ndim, p_suboffset_dim,
 *                 index, 0, 0, # start, stop, step             # <<<<<<<<<<<<<<
 *                 0, 0, 0, # have_{start,stop,step}
 *                 False)
 */
      __pyx_t_10 = __Pyx_PyIndex_AsSsize_t(__pyx_v_index); if (unlikely((__pyx_t_10 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":706
 *     for dim, index in enumerate(indices):
 *         if PyIndex_Check(index):
 *             slice_memviewslice(             # <<<<<<<<<<<<<<
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 *                 dim, new_ndim, p_suboffset_dim,
 */
      __pyx_t_11 = __pyx_memoryview_slice_memviewslice(__pyx_v_p_dst, (__pyx_v_p_src->shape[__pyx_v_dim]), (__pyx_v_p_src->strides[__pyx_v_dim]), (__pyx_v_p_src->suboffsets[__pyx_v_dim]), __pyx_v_dim, __pyx_v_new_ndim, __pyx_v_p_suboffset_dim, __pyx_t_10, 0, 0, 0, 0, 0, 0); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":705
 * 
 *     for dim, index in enumerate(indices):
 *         if PyIndex_Check(index):             # <<<<<<<<<<<<<<
 *             slice_memviewslice(
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 */
      goto __pyx_L6;
    }

    /* "View.MemoryView":712
 *                 0, 0, 0, # have_{start,stop,step}
 *                 False)
 *         elif index is None:             # <<<<<<<<<<<<<<
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0
 */
    __pyx_t_2 = (__pyx_v_index == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":713
 *                 False)
 *         elif index is None:
 *             p_dst.shape[new_ndim] = 1             # <<<<<<<<<<<<<<
 *             p_dst.strides[new_ndim] = 0
 *             p_dst.suboffsets[new_ndim] = -1
 */
      (__pyx_v_p_dst->shape[__pyx_v_new_ndim]) = 1;

      /* "View.MemoryView":714
 *         elif index is None:
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0             # <<<<<<<<<<<<<<
 *             p_dst.suboffsets[new_ndim] = -1
 *             new_ndim += 1
 */
      (__pyx_v_p_dst->strides[__pyx_v_new_ndim]) = 0;

      /* "View.MemoryView":715
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0
 *             p_dst.suboffsets[new_ndim] = -1             # <<<<<<<<<<<<<<
 *             new_ndim += 1
 *         else:
 */
      (__pyx_v_p_dst->suboffsets[__pyx_v_new_ndim]) = -1L;

      /* "View.MemoryView":716
 *             p_dst.strides[new_ndim] = 0
 *             p_dst.suboffsets[new_ndim] = -1
 *             new_ndim += 1             # <<<<<<<<<<<<<<
 *         else:
 *             start = index.start or 0
 */
      __pyx_v_new_ndim = (__pyx_v_new_ndim + 1);

      /* "View.MemoryView":712
 *                 0, 0, 0, # have_{start,stop,step}
 *                 False)
 *         elif index is None:             # <<<<<<<<<<<<<<
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0
 */
      goto __pyx_L6;
    }

    /* "View.MemoryView":718
 *             new_ndim += 1
 *         else:
 *             start = index.start or 0             # <<<<<<<<<<<<<<
 *             stop = index.stop or 0
 *             step = index.step or 0
 */
    /*else*/ {
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_start); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (!__pyx_t_1) {
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_t_9); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_10 = __pyx_t_12;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L7_bool_binop_done;
      }
      __pyx_t_10 = 0;
      __pyx_L7_bool_binop_done:;
      __pyx_v_start = __pyx_t_10;

      /* "View.MemoryView":719
 *         else:
 *             start = index.start or 0
 *             stop = index.stop or 0             # <<<<<<<<<<<<<<
 *             step = index.step or 0
 * 
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_stop); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (!__pyx_t_1) {
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_t_9); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_10 = __pyx_t_12;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L9_bool_binop_done;
      }
      __pyx_t_10 = 0;
      __pyx_L9_bool_binop_done:;
      __pyx_v_stop = __pyx_t_10;

      /* "View.MemoryView":720
 *             start = index.start or 0
 *             stop = index.stop or 0
 *             step = index.step or 0             # <<<<<<<<<<<<<<
 * 
 *             have_start = index.start is not None
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_step); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (!__pyx_t_1) {
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_t_9); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_10 = __pyx_t_12;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L11_bool_binop_done;
      }
      __pyx_t_10 = 0;
      __pyx_L11_bool_binop_done:;
      __pyx_v_step = __pyx_t_10;

      /* "View.MemoryView":722
 *             step = index.step or 0
 * 
 *             have_start = index.start is not None             # <<<<<<<<<<<<<<
 *             have_stop = index.stop is not None
 *             have_step = index.step is not None
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_start); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = (__pyx_t_9 != Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_v_have_start = __pyx_t_1;

      /* "View.MemoryView":723
 * 
 *             have_start = index.start is not None
 *             have_stop = index.stop is not None             # <<<<<<<<<<<<<<
 *             have_step = index.step is not None
 * 
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_stop); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = (__pyx_t_9 != Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_v_have_stop = __pyx_t_1;

      /* "View.MemoryView":724
 *             have_start = index.start is not None
 *             have_stop = index.stop is not None
 *             have_step = index.step is not None             # <<<<<<<<<<<<<<
 * 
 *             slice_memviewslice(
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_step); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = (__pyx_t_9 != Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_v_have_step = __pyx_t_1;

      /* "View.MemoryView":726
 *             have_step = index.step is not None
 * 
 *             slice_memviewslice(             # <<<<<<<<<<<<<<
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 *                 dim, new_ndim, p_suboffset_dim,
 */
      __pyx_t_11 = __pyx_memoryview_slice_memviewslice(__pyx_v_p_dst, (__pyx_v_p_src->shape[__pyx_v_dim]), (__pyx_v_p_src->strides[__pyx_v_dim]), (__pyx_v_p_src->suboffsets[__pyx_v_dim]), __pyx_v_dim, __pyx_v_new_ndim, __pyx_v_p_suboffset_dim, __pyx_v_start, __pyx_v_stop, __pyx_v_step, __pyx_v_have_start, __pyx_v_have_stop, __pyx_v_have_step, 1); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":732
 *                 have_start, have_stop, have_step,
 *                 True)
 *             new_ndim += 1             # <<<<<<<<<<<<<<
 * 
 *     if isinstance(memview, _memoryviewslice):
 */
      __pyx_v_new_ndim = (__pyx_v_new_ndim + 1);
    }
    __pyx_L6:;

    /* "View.MemoryView":704
 *     cdef bint have_start, have_stop, have_step
 * 
 *     for dim, index in enumerate(indices):             # <<<<<<<<<<<<<<
 *         if PyIndex_Check(index):
 *             slice_memviewslice(
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "View.MemoryView":734
 *             new_ndim += 1
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":735
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         return memoryview_fromslice(dst, new_ndim,             # <<<<<<<<<<<<<<
 *                                     memviewsliceobj.to_object_func,
 *                                     memviewsliceobj.to_dtype_func,
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));

    /* "View.MemoryView":736
 *     if isinstance(memview, _memoryviewslice):
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,             # <<<<<<<<<<<<<<
 *                                     memviewsliceobj.to_dtype_func,
 *                                     memview.dtype_is_object)
 */
    if (unlikely(!__pyx_v_memviewsliceobj)) { __Pyx_RaiseUnboundLocalError("memviewsliceobj"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }

    /* "View.MemoryView":737
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,
 *                                     memviewsliceobj.to_dtype_func,             # <<<<<<<<<<<<<<
 *                                     memview.dtype_is_object)
 *     else:
 */
    if (unlikely(!__pyx_v_memviewsliceobj)) { __Pyx_RaiseUnboundLocalError("memviewsliceobj"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 737; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }

    /* "View.MemoryView":735
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         return memoryview_fromslice(dst, new_ndim,             # <<<<<<<<<<<<<<
 *                                     memviewsliceobj.to_object_func,
 *                                     memviewsliceobj.to_dtype_func,
 */
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_dst, __pyx_v_new_ndim, __pyx_v_memviewsliceobj->to_object_func, __pyx_v_memviewsliceobj->to_dtype_func, __pyx_v_memview->dtype_is_object); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_memoryview_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = ((struct __pyx_memoryview_obj *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":734
 *             new_ndim += 1
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,
 */
  }

  /* "View.MemoryView":740
 *                                     memview.dtype_is_object)
 *     else:
 *         return memoryview_fromslice(dst, new_ndim, NULL, NULL,             # <<<<<<<<<<<<<<
 *                                     memview.dtype_is_object)
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(((PyObject *)__pyx_r));

    /* "View.MemoryView":741
 *     else:
 *         return memoryview_fromslice(dst, new_ndim, NULL, NULL,
 *                                     memview.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_dst, __pyx_v_new_ndim, NULL, NULL, __pyx_v_memview->dtype_is_object); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);

    /* "View.MemoryView":740
 *                                     memview.dtype_is_object)
 *     else:
 *         return memoryview_fromslice(dst, new_ndim, NULL, NULL,             # <<<<<<<<<<<<<<
 *                                     memview.dtype_is_object)
 * 
 */
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_memoryview_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = ((struct __pyx_memoryview_obj *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "View.MemoryView":668
 * 
 * @cname('__pyx_memview_slice')
 * cdef memoryview memview_slice(memoryview memview, object indices):             # <<<<<<<<<<<<<<
 *     cdef int new_ndim = 0, suboffset_dim = -1, dim
 *     cdef bint negative_step
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("View.MemoryView.memview_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_memviewsliceobj);
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":765
 * 
 * @cname('__pyx_memoryview_slice_memviewslice')
 * cdef int slice_memviewslice(             # <<<<<<<<<<<<<<
 *         __Pyx_memviewslice *dst,
 *         Py_ssize_t shape, Py_ssize_t stride, Py_ssize_t suboffset,
 */

static int __pyx_memoryview_slice_memviewslice(__Pyx_memviewslice *__pyx_v_dst, Py_ssize_t __pyx_v_shape, Py_ssize_t __pyx_v_stride, Py_ssize_t __pyx_v_suboffset, int __pyx_v_dim, int __pyx_v_new_ndim, int *__pyx_v_suboffset_dim, Py_ssize_t __pyx_v_start, Py_ssize_t __pyx_v_stop, Py_ssize_t __pyx_v_step, int __pyx_v_have_start, int __pyx_v_have_stop, int __pyx_v_have_step, int __pyx_v_is_slice) {
  Py_ssize_t __pyx_v_new_shape;
  int __pyx_v_negative_step;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":785
 *     cdef bint negative_step
 * 
 *     if not is_slice:             # <<<<<<<<<<<<<<
 * 
 *         if start < 0:
 */
  __pyx_t_1 = ((!(__pyx_v_is_slice != 0)) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":787
 *     if not is_slice:
 * 
 *         if start < 0:             # <<<<<<<<<<<<<<
 *             start += shape
 *         if not 0 <= start < shape:
 */
    __pyx_t_1 = ((__pyx_v_start < 0) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":788
 * 
 *         if start < 0:
 *             start += shape             # <<<<<<<<<<<<<<
 *         if not 0 <= start < shape:
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)
 */
      __pyx_v_start = (__pyx_v_start + __pyx_v_shape);

      /* "View.MemoryView":787
 *     if not is_slice:
 * 
 *         if start < 0:             # <<<<<<<<<<<<<<
 *             start += shape
 *         if not 0 <= start < shape:
 */
    }

    /* "View.MemoryView":789
 *         if start < 0:
 *             start += shape
 *         if not 0 <= start < shape:             # <<<<<<<<<<<<<<
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)
 *     else:
 */
    __pyx_t_1 = (0 <= __pyx_v_start);
    if (__pyx_t_1) {
      __pyx_t_1 = (__pyx_v_start < __pyx_v_shape);
    }
    __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":790
 *             start += shape
 *         if not 0 <= start < shape:
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)             # <<<<<<<<<<<<<<
 *     else:
 * 
 */
      __pyx_t_3 = __pyx_memoryview_err_dim(__pyx_builtin_IndexError, __pyx_k_Index_out_of_bounds_axis_d, __pyx_v_dim); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":789
 *         if start < 0:
 *             start += shape
 *         if not 0 <= start < shape:             # <<<<<<<<<<<<<<
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)
 *     else:
 */
    }

    /* "View.MemoryView":785
 *     cdef bint negative_step
 * 
 *     if not is_slice:             # <<<<<<<<<<<<<<
 * 
 *         if start < 0:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":793
 *     else:
 * 
 *         negative_step = have_step != 0 and step < 0             # <<<<<<<<<<<<<<
 * 
 *         if have_step and step == 0:
 */
  /*else*/ {
    __pyx_t_1 = ((__pyx_v_have_step != 0) != 0);
    if (__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_v_step < 0) != 0);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L6_bool_binop_done:;
    __pyx_v_negative_step = __pyx_t_2;

    /* "View.MemoryView":795
 *         negative_step = have_step != 0 and step < 0
 * 
 *         if have_step and step == 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Step may not be zero (axis %d)", dim)
 * 
 */
    __pyx_t_1 = (__pyx_v_have_step != 0);
    if (__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_v_step == 0) != 0);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L9_bool_binop_done:;
    if (__pyx_t_2) {

      /* "View.MemoryView":796
 * 
 *         if have_step and step == 0:
 *             _err_dim(ValueError, "Step may not be zero (axis %d)", dim)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_3 = __pyx_memoryview_err_dim(__pyx_builtin_ValueError, __pyx_k_Step_may_not_be_zero_axis_d, __pyx_v_dim); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":795
 *         negative_step = have_step != 0 and step < 0
 * 
 *         if have_step and step == 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Step may not be zero (axis %d)", dim)
 * 
 */
    }

    /* "View.MemoryView":799
 * 
 * 
 *         if have_start:             # <<<<<<<<<<<<<<
 *             if start < 0:
 *                 start += shape
 */
    __pyx_t_2 = (__pyx_v_have_start != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":800
 * 
 *         if have_start:
 *             if start < 0:             # <<<<<<<<<<<<<<
 *                 start += shape
 *                 if start < 0:
 */
      __pyx_t_2 = ((__pyx_v_start < 0) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":801
 *         if have_start:
 *             if start < 0:
 *                 start += shape             # <<<<<<<<<<<<<<
 *                 if start < 0:
 *                     start = 0
 */
        __pyx_v_start = (__pyx_v_start + __pyx_v_shape);

        /* "View.MemoryView":802
 *             if start < 0:
 *                 start += shape
 *                 if start < 0:             # <<<<<<<<<<<<<<
 *                     start = 0
 *             elif start >= shape:
 */
        __pyx_t_2 = ((__pyx_v_start < 0) != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":803
 *                 start += shape
 *                 if start < 0:
 *                     start = 0             # <<<<<<<<<<<<<<
 *             elif start >= shape:
 *                 if negative_step:
 */
          __pyx_v_start = 0;

          /* "View.MemoryView":802
 *             if start < 0:
 *                 start += shape
 *                 if start < 0:             # <<<<<<<<<<<<<<
 *                     start = 0
 *             elif start >= shape:
 */
        }

        /* "View.MemoryView":800
 * 
 *         if have_start:
 *             if start < 0:             # <<<<<<<<<<<<<<
 *                 start += shape
 *                 if start < 0:
 */
        goto __pyx_L12;
      }

      /* "View.MemoryView":804
 *                 if start < 0:
 *                     start = 0
 *             elif start >= shape:             # <<<<<<<<<<<<<<
 *                 if negative_step:
 *                     start = shape - 1
 */
      __pyx_t_2 = ((__pyx_v_start >= __pyx_v_shape) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":805
 *                     start = 0
 *             elif start >= shape:
 *                 if negative_step:             # <<<<<<<<<<<<<<
 *                     start = shape - 1
 *                 else:
 */
        __pyx_t_2 = (__pyx_v_negative_step != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":806
 *             elif start >= shape:
 *                 if negative_step:
 *                     start = shape - 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     start = shape
 */
          __pyx_v_start = (__pyx_v_shape - 1);

          /* "View.MemoryView":805
 *                     start = 0
 *             elif start >= shape:
 *                 if negative_step:             # <<<<<<<<<<<<<<
 *                     start = shape - 1
 *                 else:
 */
          goto __pyx_L14;
        }

        /* "View.MemoryView":808
 *                     start = shape - 1
 *                 else:
 *                     start = shape             # <<<<<<<<<<<<<<
 *         else:
 *             if negative_step:
 */
        /*else*/ {
          __pyx_v_start = __pyx_v_shape;
        }
        __pyx_L14:;

        /* "View.MemoryView":804
 *                 if start < 0:
 *                     start = 0
 *             elif start >= shape:             # <<<<<<<<<<<<<<
 *                 if negative_step:
 *                     start = shape - 1
 */
      }
      __pyx_L12:;

      /* "View.MemoryView":799
 * 
 * 
 *         if have_start:             # <<<<<<<<<<<<<<
 *             if start < 0:
 *                 start += shape
 */
      goto __pyx_L11;
    }

    /* "View.MemoryView":810
 *                     start = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 start = shape - 1
 *             else:
 */
    /*else*/ {
      __pyx_t_2 = (__pyx_v_negative_step != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":811
 *         else:
 *             if negative_step:
 *                 start = shape - 1             # <<<<<<<<<<<<<<
 *             else:
 *                 start = 0
 */
        __pyx_v_start = (__pyx_v_shape - 1);

        /* "View.MemoryView":810
 *                     start = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 start = shape - 1
 *             else:
 */
        goto __pyx_L15;
      }

      /* "View.MemoryView":813
 *                 start = shape - 1
 *             else:
 *                 start = 0             # <<<<<<<<<<<<<<
 * 
 *         if have_stop:
 */
      /*else*/ {
        __pyx_v_start = 0;
      }
      __pyx_L15:;
    }
    __pyx_L11:;

    /* "View.MemoryView":815
 *                 start = 0
 * 
 *         if have_stop:             # <<<<<<<<<<<<<<
 *             if stop < 0:
 *                 stop += shape
 */
    __pyx_t_2 = (__pyx_v_have_stop != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":816
 * 
 *         if have_stop:
 *             if stop < 0:             # <<<<<<<<<<<<<<
 *                 stop += shape
 *                 if stop < 0:
 */
      __pyx_t_2 = ((__pyx_v_stop < 0) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":817
 *         if have_stop:
 *             if stop < 0:
 *                 stop += shape             # <<<<<<<<<<<<<<
 *                 if stop < 0:
 *                     stop = 0
 */
        __pyx_v_stop = (__pyx_v_stop + __pyx_v_shape);

        /* "View.MemoryView":818
 *             if stop < 0:
 *                 stop += shape
 *                 if stop < 0:             # <<<<<<<<<<<<<<
 *                     stop = 0
 *             elif stop > shape:
 */
        __pyx_t_2 = ((__pyx_v_stop < 0) != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":819
 *                 stop += shape
 *                 if stop < 0:
 *                     stop = 0             # <<<<<<<<<<<<<<
 *             elif stop > shape:
 *                 stop = shape
 */
          __pyx_v_stop = 0;

          /* "View.MemoryView":818
 *             if stop < 0:
 *                 stop += shape
 *                 if stop < 0:             # <<<<<<<<<<<<<<
 *                     stop = 0
 *             elif stop > shape:
 */
        }

        /* "View.MemoryView":816
 * 
 *         if have_stop:
 *             if stop < 0:             # <<<<<<<<<<<<<<
 *                 stop += shape
 *                 if stop < 0:
 */
        goto __pyx_L17;
      }

      /* "View.MemoryView":820
 *                 if stop < 0:
 *                     stop = 0
 *             elif stop > shape:             # <<<<<<<<<<<<<<
 *                 stop = shape
 *         else:
 */
      __pyx_t_2 = ((__pyx_v_stop > __pyx_v_shape) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":821
 *                     stop = 0
 *             elif stop > shape:
 *                 stop = shape             # <<<<<<<<<<<<<<
 *         else:
 *             if negative_step:
 */
        __pyx_v_stop = __pyx_v_shape;

        /* "View.MemoryView":820
 *                 if stop < 0:
 *                     stop = 0
 *             elif stop > shape:             # <<<<<<<<<<<<<<
 *                 stop = shape
 *         else:
 */
      }
      __pyx_L17:;

      /* "View.MemoryView":815
 *                 start = 0
 * 
 *         if have_stop:             # <<<<<<<<<<<<<<
 *             if stop < 0:
 *                 stop += shape
 */
      goto __pyx_L16;
    }

    /* "View.MemoryView":823
 *                 stop = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 stop = -1
 *             else:
 */
    /*else*/ {
      __pyx_t_2 = (__pyx_v_negative_step != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":824
 *         else:
 *             if negative_step:
 *                 stop = -1             # <<<<<<<<<<<<<<
 *             else:
 *                 stop = shape
 */
        __pyx_v_stop = -1L;

        /* "View.MemoryView":823
 *                 stop = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 stop = -1
 *             else:
 */
        goto __pyx_L19;
      }

      /* "View.MemoryView":826
 *                 stop = -1
 *             else:
 *                 stop = shape             # <<<<<<<<<<<<<<
 * 
 *         if not have_step:
 */
      /*else*/ {
        __pyx_v_stop = __pyx_v_shape;
      }
      __pyx_L19:;
    }
    __pyx_L16:;

    /* "View.MemoryView":828
 *                 stop = shape
 * 
 *         if not have_step:             # <<<<<<<<<<<<<<
 *             step = 1
 * 
 */
    __pyx_t_2 = ((!(__pyx_v_have_step != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":829
 * 
 *         if not have_step:
 *             step = 1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_step = 1;

      /* "View.MemoryView":828
 *                 stop = shape
 * 
 *         if not have_step:             # <<<<<<<<<<<<<<
 *             step = 1
 * 
 */
    }

    /* "View.MemoryView":833
 * 
 *         with cython.cdivision(True):
 *             new_shape = (stop - start) // step             # <<<<<<<<<<<<<<
 * 
 *             if (stop - start) - step * new_shape:
 */
    __pyx_v_new_shape = ((__pyx_v_stop - __pyx_v_start) / __pyx_v_step);

    /* "View.MemoryView":835
 *             new_shape = (stop - start) // step
 * 
 *             if (stop - start) - step * new_shape:             # <<<<<<<<<<<<<<
 *                 new_shape += 1
 * 
 */
    __pyx_t_2 = (((__pyx_v_stop - __pyx_v_start) - (__pyx_v_step * __pyx_v_new_shape)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":836
 * 
 *             if (stop - start) - step * new_shape:
 *                 new_shape += 1             # <<<<<<<<<<<<<<
 * 
 *         if new_shape < 0:
 */
      __pyx_v_new_shape = (__pyx_v_new_shape + 1);

      /* "View.MemoryView":835
 *             new_shape = (stop - start) // step
 * 
 *             if (stop - start) - step * new_shape:             # <<<<<<<<<<<<<<
 *                 new_shape += 1
 * 
 */
    }

    /* "View.MemoryView":838
 *                 new_shape += 1
 * 
 *         if new_shape < 0:             # <<<<<<<<<<<<<<
 *             new_shape = 0
 * 
 */
    __pyx_t_2 = ((__pyx_v_new_shape < 0) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":839
 * 
 *         if new_shape < 0:
 *             new_shape = 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_new_shape = 0;

      /* "View.MemoryView":838
 *                 new_shape += 1
 * 
 *         if new_shape < 0:             # <<<<<<<<<<<<<<
 *             new_shape = 0
 * 
 */
    }

    /* "View.MemoryView":842
 * 
 * 
 *         dst.strides[new_ndim] = stride * step             # <<<<<<<<<<<<<<
 *         dst.shape[new_ndim] = new_shape
 *         dst.suboffsets[new_ndim] = suboffset
 */
    (__pyx_v_dst->strides[__pyx_v_new_ndim]) = (__pyx_v_stride * __pyx_v_step);

    /* "View.MemoryView":843
 * 
 *         dst.strides[new_ndim] = stride * step
 *         dst.shape[new_ndim] = new_shape             # <<<<<<<<<<<<<<
 *         dst.suboffsets[new_ndim] = suboffset
 * 
 */
    (__pyx_v_dst->shape[__pyx_v_new_ndim]) = __pyx_v_new_shape;

    /* "View.MemoryView":844
 *         dst.strides[new_ndim] = stride * step
 *         dst.shape[new_ndim] = new_shape
 *         dst.suboffsets[new_ndim] = suboffset             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (__pyx_v_dst->suboffsets[__pyx_v_new_ndim]) = __pyx_v_suboffset;
  }
  __pyx_L3:;

  /* "View.MemoryView":847
 * 
 * 
 *     if suboffset_dim[0] < 0:             # <<<<<<<<<<<<<<
 *         dst.data += start * stride
 *     else:
 */
  __pyx_t_2 = (((__pyx_v_suboffset_dim[0]) < 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":848
 * 
 *     if suboffset_dim[0] < 0:
 *         dst.data += start * stride             # <<<<<<<<<<<<<<
 *     else:
 *         dst.suboffsets[suboffset_dim[0]] += start * stride
 */
    __pyx_v_dst->data = (__pyx_v_dst->data + (__pyx_v_start * __pyx_v_stride));

    /* "View.MemoryView":847
 * 
 * 
 *     if suboffset_dim[0] < 0:             # <<<<<<<<<<<<<<
 *         dst.data += start * stride
 *     else:
 */
    goto __pyx_L23;
  }

  /* "View.MemoryView":850
 *         dst.data += start * stride
 *     else:
 *         dst.suboffsets[suboffset_dim[0]] += start * stride             # <<<<<<<<<<<<<<
 * 
 *     if suboffset >= 0:
 */
  /*else*/ {
    __pyx_t_3 = (__pyx_v_suboffset_dim[0]);
    (__pyx_v_dst->suboffsets[__pyx_t_3]) = ((__pyx_v_dst->suboffsets[__pyx_t_3]) + (__pyx_v_start * __pyx_v_stride));
  }
  __pyx_L23:;

  /* "View.MemoryView":852
 *         dst.suboffsets[suboffset_dim[0]] += start * stride
 * 
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         if not is_slice:
 *             if new_ndim == 0:
 */
  __pyx_t_2 = ((__pyx_v_suboffset >= 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":853
 * 
 *     if suboffset >= 0:
 *         if not is_slice:             # <<<<<<<<<<<<<<
 *             if new_ndim == 0:
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 */
    __pyx_t_2 = ((!(__pyx_v_is_slice != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":854
 *     if suboffset >= 0:
 *         if not is_slice:
 *             if new_ndim == 0:             # <<<<<<<<<<<<<<
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 *             else:
 */
      __pyx_t_2 = ((__pyx_v_new_ndim == 0) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":855
 *         if not is_slice:
 *             if new_ndim == 0:
 *                 dst.data = (<char **> dst.data)[0] + suboffset             # <<<<<<<<<<<<<<
 *             else:
 *                 _err_dim(IndexError, "All dimensions preceding dimension %d "
 */
        __pyx_v_dst->data = ((((char **)__pyx_v_dst->data)[0]) + __pyx_v_suboffset);

        /* "View.MemoryView":854
 *     if suboffset >= 0:
 *         if not is_slice:
 *             if new_ndim == 0:             # <<<<<<<<<<<<<<
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 *             else:
 */
        goto __pyx_L26;
      }

      /* "View.MemoryView":857
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 *             else:
 *                 _err_dim(IndexError, "All dimensions preceding dimension %d "             # <<<<<<<<<<<<<<
 *                                      "must be indexed and not sliced", dim)
 *         else:
 */
      /*else*/ {

        /* "View.MemoryView":858
 *             else:
 *                 _err_dim(IndexError, "All dimensions preceding dimension %d "
 *                                      "must be indexed and not sliced", dim)             # <<<<<<<<<<<<<<
 *         else:
 *             suboffset_dim[0] = new_ndim
 */
        __pyx_t_3 = __pyx_memoryview_err_dim(__pyx_builtin_IndexError, __pyx_k_All_dimensions_preceding_dimensi, __pyx_v_dim); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L26:;

      /* "View.MemoryView":853
 * 
 *     if suboffset >= 0:
 *         if not is_slice:             # <<<<<<<<<<<<<<
 *             if new_ndim == 0:
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 */
      goto __pyx_L25;
    }

    /* "View.MemoryView":860
 *                                      "must be indexed and not sliced", dim)
 *         else:
 *             suboffset_dim[0] = new_ndim             # <<<<<<<<<<<<<<
 * 
 *     return 0
 */
    /*else*/ {
      (__pyx_v_suboffset_dim[0]) = __pyx_v_new_ndim;
    }
    __pyx_L25:;

    /* "View.MemoryView":852
 *         dst.suboffsets[suboffset_dim[0]] += start * stride
 * 
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         if not is_slice:
 *             if new_ndim == 0:
 */
  }

  /* "View.MemoryView":862
 *             suboffset_dim[0] = new_ndim
 * 
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "View.MemoryView":765
 * 
 * @cname('__pyx_memoryview_slice_memviewslice')
 * cdef int slice_memviewslice(             # <<<<<<<<<<<<<<
 *         __Pyx_memviewslice *dst,
 *         Py_ssize_t shape, Py_ssize_t stride, Py_ssize_t suboffset,
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.slice_memviewslice", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":868
 * 
 * @cname('__pyx_pybuffer_index')
 * cdef char *pybuffer_index(Py_buffer *view, char *bufp, Py_ssize_t index,             # <<<<<<<<<<<<<<
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1
 */

static char *__pyx_pybuffer_index(Py_buffer *__pyx_v_view, char *__pyx_v_bufp, Py_ssize_t __pyx_v_index, Py_ssize_t __pyx_v_dim) {
  Py_ssize_t __pyx_v_shape;
  Py_ssize_t __pyx_v_stride;
  Py_ssize_t __pyx_v_suboffset;
  Py_ssize_t __pyx_v_itemsize;
  char *__pyx_v_resultp;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pybuffer_index", 0);

  /* "View.MemoryView":870
 * cdef char *pybuffer_index(Py_buffer *view, char *bufp, Py_ssize_t index,
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t itemsize = view.itemsize
 *     cdef char *resultp
 */
  __pyx_v_suboffset = -1L;

  /* "View.MemoryView":871
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1
 *     cdef Py_ssize_t itemsize = view.itemsize             # <<<<<<<<<<<<<<
 *     cdef char *resultp
 * 
 */
  __pyx_t_1 = __pyx_v_view->itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "View.MemoryView":874
 *     cdef char *resultp
 * 
 *     if view.ndim == 0:             # <<<<<<<<<<<<<<
 *         shape = view.len / itemsize
 *         stride = itemsize
 */
  __pyx_t_2 = ((__pyx_v_view->ndim == 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":875
 * 
 *     if view.ndim == 0:
 *         shape = view.len / itemsize             # <<<<<<<<<<<<<<
 *         stride = itemsize
 *     else:
 */
    if (unlikely(__pyx_v_itemsize == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    else if (sizeof(Py_ssize_t) == sizeof(long) && (!(((Py_ssize_t)-1) > 0)) && unlikely(__pyx_v_itemsize == (Py_ssize_t)-1)  && unlikely(UNARY_NEG_WOULD_OVERFLOW(__pyx_v_view->len))) {
      PyErr_SetString(PyExc_OverflowError, "value too large to perform division");
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_shape = __Pyx_div_Py_ssize_t(__pyx_v_view->len, __pyx_v_itemsize);

    /* "View.MemoryView":876
 *     if view.ndim == 0:
 *         shape = view.len / itemsize
 *         stride = itemsize             # <<<<<<<<<<<<<<
 *     else:
 *         shape = view.shape[dim]
 */
    __pyx_v_stride = __pyx_v_itemsize;

    /* "View.MemoryView":874
 *     cdef char *resultp
 * 
 *     if view.ndim == 0:             # <<<<<<<<<<<<<<
 *         shape = view.len / itemsize
 *         stride = itemsize
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":878
 *         stride = itemsize
 *     else:
 *         shape = view.shape[dim]             # <<<<<<<<<<<<<<
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:
 */
  /*else*/ {
    __pyx_v_shape = (__pyx_v_view->shape[__pyx_v_dim]);

    /* "View.MemoryView":879
 *     else:
 *         shape = view.shape[dim]
 *         stride = view.strides[dim]             # <<<<<<<<<<<<<<
 *         if view.suboffsets != NULL:
 *             suboffset = view.suboffsets[dim]
 */
    __pyx_v_stride = (__pyx_v_view->strides[__pyx_v_dim]);

    /* "View.MemoryView":880
 *         shape = view.shape[dim]
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *             suboffset = view.suboffsets[dim]
 * 
 */
    __pyx_t_2 = ((__pyx_v_view->suboffsets != NULL) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":881
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:
 *             suboffset = view.suboffsets[dim]             # <<<<<<<<<<<<<<
 * 
 *     if index < 0:
 */
      __pyx_v_suboffset = (__pyx_v_view->suboffsets[__pyx_v_dim]);

      /* "View.MemoryView":880
 *         shape = view.shape[dim]
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *             suboffset = view.suboffsets[dim]
 * 
 */
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":883
 *             suboffset = view.suboffsets[dim]
 * 
 *     if index < 0:             # <<<<<<<<<<<<<<
 *         index += view.shape[dim]
 *         if index < 0:
 */
  __pyx_t_2 = ((__pyx_v_index < 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":884
 * 
 *     if index < 0:
 *         index += view.shape[dim]             # <<<<<<<<<<<<<<
 *         if index < 0:
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 */
    __pyx_v_index = (__pyx_v_index + (__pyx_v_view->shape[__pyx_v_dim]));

    /* "View.MemoryView":885
 *     if index < 0:
 *         index += view.shape[dim]
 *         if index < 0:             # <<<<<<<<<<<<<<
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
    __pyx_t_2 = ((__pyx_v_index < 0) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":886
 *         index += view.shape[dim]
 *         if index < 0:
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)             # <<<<<<<<<<<<<<
 * 
 *     if index >= shape:
 */
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_dim); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Out_of_bounds_on_buffer_access_a, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_IndexError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":885
 *     if index < 0:
 *         index += view.shape[dim]
 *         if index < 0:             # <<<<<<<<<<<<<<
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
    }

    /* "View.MemoryView":883
 *             suboffset = view.suboffsets[dim]
 * 
 *     if index < 0:             # <<<<<<<<<<<<<<
 *         index += view.shape[dim]
 *         if index < 0:
 */
  }

  /* "View.MemoryView":888
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 *     if index >= shape:             # <<<<<<<<<<<<<<
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
  __pyx_t_2 = ((__pyx_v_index >= __pyx_v_shape) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":889
 * 
 *     if index >= shape:
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)             # <<<<<<<<<<<<<<
 * 
 *     resultp = bufp + index * stride
 */
    __pyx_t_4 = PyInt_FromSsize_t(__pyx_v_dim); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_Out_of_bounds_on_buffer_access_a, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_IndexError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":888
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 *     if index >= shape:             # <<<<<<<<<<<<<<
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
  }

  /* "View.MemoryView":891
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 *     resultp = bufp + index * stride             # <<<<<<<<<<<<<<
 *     if suboffset >= 0:
 *         resultp = (<char **> resultp)[0] + suboffset
 */
  __pyx_v_resultp = (__pyx_v_bufp + (__pyx_v_index * __pyx_v_stride));

  /* "View.MemoryView":892
 * 
 *     resultp = bufp + index * stride
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         resultp = (<char **> resultp)[0] + suboffset
 * 
 */
  __pyx_t_2 = ((__pyx_v_suboffset >= 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":893
 *     resultp = bufp + index * stride
 *     if suboffset >= 0:
 *         resultp = (<char **> resultp)[0] + suboffset             # <<<<<<<<<<<<<<
 * 
 *     return resultp
 */
    __pyx_v_resultp = ((((char **)__pyx_v_resultp)[0]) + __pyx_v_suboffset);

    /* "View.MemoryView":892
 * 
 *     resultp = bufp + index * stride
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         resultp = (<char **> resultp)[0] + suboffset
 * 
 */
  }

  /* "View.MemoryView":895
 *         resultp = (<char **> resultp)[0] + suboffset
 * 
 *     return resultp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_resultp;
  goto __pyx_L0;

  /* "View.MemoryView":868
 * 
 * @cname('__pyx_pybuffer_index')
 * cdef char *pybuffer_index(Py_buffer *view, char *bufp, Py_ssize_t index,             # <<<<<<<<<<<<<<
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("View.MemoryView.pybuffer_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":901
 * 
 * @cname('__pyx_memslice_transpose')
 * cdef int transpose_memslice(__Pyx_memviewslice *memslice) nogil except 0:             # <<<<<<<<<<<<<<
 *     cdef int ndim = memslice.memview.view.ndim
 * 
 */

static int __pyx_memslice_transpose(__Pyx_memviewslice *__pyx_v_memslice) {
  int __pyx_v_ndim;
  Py_ssize_t *__pyx_v_shape;
  Py_ssize_t *__pyx_v_strides;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_r;
  int __pyx_t_1;
  Py_ssize_t *__pyx_t_2;
  long __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":902
 * @cname('__pyx_memslice_transpose')
 * cdef int transpose_memslice(__Pyx_memviewslice *memslice) nogil except 0:
 *     cdef int ndim = memslice.memview.view.ndim             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t *shape = memslice.shape
 */
  __pyx_t_1 = __pyx_v_memslice->memview->view.ndim;
  __pyx_v_ndim = __pyx_t_1;

  /* "View.MemoryView":904
 *     cdef int ndim = memslice.memview.view.ndim
 * 
 *     cdef Py_ssize_t *shape = memslice.shape             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t *strides = memslice.strides
 * 
 */
  __pyx_t_2 = __pyx_v_memslice->shape;
  __pyx_v_shape = __pyx_t_2;

  /* "View.MemoryView":905
 * 
 *     cdef Py_ssize_t *shape = memslice.shape
 *     cdef Py_ssize_t *strides = memslice.strides             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __pyx_v_memslice->strides;
  __pyx_v_strides = __pyx_t_2;

  /* "View.MemoryView":909
 * 
 *     cdef int i, j
 *     for i in range(ndim / 2):             # <<<<<<<<<<<<<<
 *         j = ndim - 1 - i
 *         strides[i], strides[j] = strides[j], strides[i]
 */
  __pyx_t_3 = __Pyx_div_long(__pyx_v_ndim, 2);
  for (__pyx_t_1 = 0; __pyx_t_1 < __pyx_t_3; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "View.MemoryView":910
 *     cdef int i, j
 *     for i in range(ndim / 2):
 *         j = ndim - 1 - i             # <<<<<<<<<<<<<<
 *         strides[i], strides[j] = strides[j], strides[i]
 *         shape[i], shape[j] = shape[j], shape[i]
 */
    __pyx_v_j = ((__pyx_v_ndim - 1) - __pyx_v_i);

    /* "View.MemoryView":911
 *     for i in range(ndim / 2):
 *         j = ndim - 1 - i
 *         strides[i], strides[j] = strides[j], strides[i]             # <<<<<<<<<<<<<<
 *         shape[i], shape[j] = shape[j], shape[i]
 * 
 */
    __pyx_t_4 = (__pyx_v_strides[__pyx_v_j]);
    __pyx_t_5 = (__pyx_v_strides[__pyx_v_i]);
    (__pyx_v_strides[__pyx_v_i]) = __pyx_t_4;
    (__pyx_v_strides[__pyx_v_j]) = __pyx_t_5;

    /* "View.MemoryView":912
 *         j = ndim - 1 - i
 *         strides[i], strides[j] = strides[j], strides[i]
 *         shape[i], shape[j] = shape[j], shape[i]             # <<<<<<<<<<<<<<
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:
 */
    __pyx_t_5 = (__pyx_v_shape[__pyx_v_j]);
    __pyx_t_4 = (__pyx_v_shape[__pyx_v_i]);
    (__pyx_v_shape[__pyx_v_i]) = __pyx_t_5;
    (__pyx_v_shape[__pyx_v_j]) = __pyx_t_4;

    /* "View.MemoryView":914
 *         shape[i], shape[j] = shape[j], shape[i]
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:             # <<<<<<<<<<<<<<
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")
 * 
 */
    __pyx_t_7 = (((__pyx_v_memslice->suboffsets[__pyx_v_i]) >= 0) != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_7 = (((__pyx_v_memslice->suboffsets[__pyx_v_j]) >= 0) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_6) {

      /* "View.MemoryView":915
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")             # <<<<<<<<<<<<<<
 * 
 *     return 1
 */
      __pyx_t_8 = __pyx_memoryview_err(__pyx_builtin_ValueError, __pyx_k_Cannot_transpose_memoryview_with); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":914
 *         shape[i], shape[j] = shape[j], shape[i]
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:             # <<<<<<<<<<<<<<
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")
 * 
 */
    }
  }

  /* "View.MemoryView":917
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")
 * 
 *     return 1             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "View.MemoryView":901
 * 
 * @cname('__pyx_memslice_transpose')
 * cdef int transpose_memslice(__Pyx_memviewslice *memslice) nogil except 0:             # <<<<<<<<<<<<<<
 *     cdef int ndim = memslice.memview.view.ndim
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.transpose_memslice", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":934
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 */

/* Python wrapper */
static void __pyx_memoryviewslice___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_memoryviewslice___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(((struct __pyx_memoryviewslice_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(struct __pyx_memoryviewslice_obj *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "View.MemoryView":935
 * 
 *     def __dealloc__(self):
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)             # <<<<<<<<<<<<<<
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 */
  __PYX_XDEC_MEMVIEW((&__pyx_v_self->from_slice), 1);

  /* "View.MemoryView":934
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":937
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         if self.to_object_func != NULL:
 *             return self.to_object_func(itemp)
 */

static PyObject *__pyx_memoryviewslice_convert_item_to_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("convert_item_to_object", 0);

  /* "View.MemoryView":938
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 *         if self.to_object_func != NULL:             # <<<<<<<<<<<<<<
 *             return self.to_object_func(itemp)
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_self->to_object_func != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":939
 *     cdef convert_item_to_object(self, char *itemp):
 *         if self.to_object_func != NULL:
 *             return self.to_object_func(itemp)             # <<<<<<<<<<<<<<
 *         else:
 *             return memoryview.convert_item_to_object(self, itemp)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_v_self->to_object_func(__pyx_v_itemp); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":938
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 *         if self.to_object_func != NULL:             # <<<<<<<<<<<<<<
 *             return self.to_object_func(itemp)
 *         else:
 */
  }

  /* "View.MemoryView":941
 *             return self.to_object_func(itemp)
 *         else:
 *             return memoryview.convert_item_to_object(self, itemp)             # <<<<<<<<<<<<<<
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_memoryview_convert_item_to_object(((struct __pyx_memoryview_obj *)__pyx_v_self), __pyx_v_itemp); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "View.MemoryView":937
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         if self.to_object_func != NULL:
 *             return self.to_object_func(itemp)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView._memoryviewslice.convert_item_to_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":943
 *             return memoryview.convert_item_to_object(self, itemp)
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         if self.to_dtype_func != NULL:
 *             self.to_dtype_func(itemp, value)
 */

static PyObject *__pyx_memoryviewslice_assign_item_from_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assign_item_from_object", 0);

  /* "View.MemoryView":944
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 *         if self.to_dtype_func != NULL:             # <<<<<<<<<<<<<<
 *             self.to_dtype_func(itemp, value)
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_self->to_dtype_func != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":945
 *     cdef assign_item_from_object(self, char *itemp, object value):
 *         if self.to_dtype_func != NULL:
 *             self.to_dtype_func(itemp, value)             # <<<<<<<<<<<<<<
 *         else:
 *             memoryview.assign_item_from_object(self, itemp, value)
 */
    __pyx_t_2 = __pyx_v_self->to_dtype_func(__pyx_v_itemp, __pyx_v_value); if (unlikely(__pyx_t_2 == 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":944
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 *         if self.to_dtype_func != NULL:             # <<<<<<<<<<<<<<
 *             self.to_dtype_func(itemp, value)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":947
 *             self.to_dtype_func(itemp, value)
 *         else:
 *             memoryview.assign_item_from_object(self, itemp, value)             # <<<<<<<<<<<<<<
 * 
 *     property base:
 */
  /*else*/ {
    __pyx_t_3 = __pyx_memoryview_assign_item_from_object(((struct __pyx_memoryview_obj *)__pyx_v_self), __pyx_v_itemp, __pyx_v_value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "View.MemoryView":943
 *             return memoryview.convert_item_to_object(self, itemp)
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         if self.to_dtype_func != NULL:
 *             self.to_dtype_func(itemp, value)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView._memoryviewslice.assign_item_from_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":951
 *     property base:
 *         @cname('__pyx_memoryviewslice__get__base')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.from_object
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryviewslice__get__base(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryviewslice__get__base(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(((struct __pyx_memoryviewslice_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(struct __pyx_memoryviewslice_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":952
 *         @cname('__pyx_memoryviewslice__get__base')
 *         def __get__(self):
 *             return self.from_object             # <<<<<<<<<<<<<<
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->from_object);
  __pyx_r = __pyx_v_self->from_object;
  goto __pyx_L0;

  /* "View.MemoryView":951
 *     property base:
 *         @cname('__pyx_memoryviewslice__get__base')
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.from_object
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":958
 * 
 * @cname('__pyx_memoryview_fromslice')
 * cdef memoryview_fromslice(__Pyx_memviewslice memviewslice,             # <<<<<<<<<<<<<<
 *                           int ndim,
 *                           object (*to_object_func)(char *),
 */

static PyObject *__pyx_memoryview_fromslice(__Pyx_memviewslice __pyx_v_memviewslice, int __pyx_v_ndim, PyObject *(*__pyx_v_to_object_func)(char *), int (*__pyx_v_to_dtype_func)(char *, PyObject *), int __pyx_v_dtype_is_object) {
  struct __pyx_memoryviewslice_obj *__pyx_v_result = 0;
  Py_ssize_t __pyx_v_suboffset;
  PyObject *__pyx_v_length = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_TypeInfo *__pyx_t_4;
  Py_buffer __pyx_t_5;
  Py_ssize_t *__pyx_t_6;
  Py_ssize_t *__pyx_t_7;
  Py_ssize_t *__pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_fromslice", 0);

  /* "View.MemoryView":966
 *     cdef _memoryviewslice result
 * 
 *     if <PyObject *> memviewslice.memview == Py_None:             # <<<<<<<<<<<<<<
 *         return None
 * 
 */
  __pyx_t_1 = ((((PyObject *)__pyx_v_memviewslice.memview) == Py_None) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":967
 * 
 *     if <PyObject *> memviewslice.memview == Py_None:
 *         return None             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "View.MemoryView":966
 *     cdef _memoryviewslice result
 * 
 *     if <PyObject *> memviewslice.memview == Py_None:             # <<<<<<<<<<<<<<
 *         return None
 * 
 */
  }

  /* "View.MemoryView":972
 * 
 * 
 *     result = _memoryviewslice(None, 0, dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 *     result.from_slice = memviewslice
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_dtype_is_object); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_3, 0, Py_None);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryviewslice_type), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_result = ((struct __pyx_memoryviewslice_obj *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "View.MemoryView":974
 *     result = _memoryviewslice(None, 0, dtype_is_object)
 * 
 *     result.from_slice = memviewslice             # <<<<<<<<<<<<<<
 *     __PYX_INC_MEMVIEW(&memviewslice, 1)
 * 
 */
  __pyx_v_result->from_slice = __pyx_v_memviewslice;

  /* "View.MemoryView":975
 * 
 *     result.from_slice = memviewslice
 *     __PYX_INC_MEMVIEW(&memviewslice, 1)             # <<<<<<<<<<<<<<
 * 
 *     result.from_object = (<memoryview> memviewslice.memview).base
 */
  __PYX_INC_MEMVIEW((&__pyx_v_memviewslice), 1);

  /* "View.MemoryView":977
 *     __PYX_INC_MEMVIEW(&memviewslice, 1)
 * 
 *     result.from_object = (<memoryview> memviewslice.memview).base             # <<<<<<<<<<<<<<
 *     result.typeinfo = memviewslice.memview.typeinfo
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_memviewslice.memview), __pyx_n_s_base); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_result->from_object);
  __Pyx_DECREF(__pyx_v_result->from_object);
  __pyx_v_result->from_object = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "View.MemoryView":978
 * 
 *     result.from_object = (<memoryview> memviewslice.memview).base
 *     result.typeinfo = memviewslice.memview.typeinfo             # <<<<<<<<<<<<<<
 * 
 *     result.view = memviewslice.memview.view
 */
  __pyx_t_4 = __pyx_v_memviewslice.memview->typeinfo;
  __pyx_v_result->__pyx_base.typeinfo = __pyx_t_4;

  /* "View.MemoryView":980
 *     result.typeinfo = memviewslice.memview.typeinfo
 * 
 *     result.view = memviewslice.memview.view             # <<<<<<<<<<<<<<
 *     result.view.buf = <void *> memviewslice.data
 *     result.view.ndim = ndim
 */
  __pyx_t_5 = __pyx_v_memviewslice.memview->view;
  __pyx_v_result->__pyx_base.view = __pyx_t_5;

  /* "View.MemoryView":981
 * 
 *     result.view = memviewslice.memview.view
 *     result.view.buf = <void *> memviewslice.data             # <<<<<<<<<<<<<<
 *     result.view.ndim = ndim
 *     (<__pyx_buffer *> &result.view).obj = Py_None
 */
  __pyx_v_result->__pyx_base.view.buf = ((void *)__pyx_v_memviewslice.data);

  /* "View.MemoryView":982
 *     result.view = memviewslice.memview.view
 *     result.view.buf = <void *> memviewslice.data
 *     result.view.ndim = ndim             # <<<<<<<<<<<<<<
 *     (<__pyx_buffer *> &result.view).obj = Py_None
 *     Py_INCREF(Py_None)
 */
  __pyx_v_result->__pyx_base.view.ndim = __pyx_v_ndim;

  /* "View.MemoryView":983
 *     result.view.buf = <void *> memviewslice.data
 *     result.view.ndim = ndim
 *     (<__pyx_buffer *> &result.view).obj = Py_None             # <<<<<<<<<<<<<<
 *     Py_INCREF(Py_None)
 * 
 */
  ((Py_buffer *)(&__pyx_v_result->__pyx_base.view))->obj = Py_None;

  /* "View.MemoryView":984
 *     result.view.ndim = ndim
 *     (<__pyx_buffer *> &result.view).obj = Py_None
 *     Py_INCREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *     result.flags = PyBUF_RECORDS
 */
  Py_INCREF(Py_None);

  /* "View.MemoryView":986
 *     Py_INCREF(Py_None)
 * 
 *     result.flags = PyBUF_RECORDS             # <<<<<<<<<<<<<<
 * 
 *     result.view.shape = <Py_ssize_t *> result.from_slice.shape
 */
  __pyx_v_result->__pyx_base.flags = PyBUF_RECORDS;

  /* "View.MemoryView":988
 *     result.flags = PyBUF_RECORDS
 * 
 *     result.view.shape = <Py_ssize_t *> result.from_slice.shape             # <<<<<<<<<<<<<<
 *     result.view.strides = <Py_ssize_t *> result.from_slice.strides
 * 
 */
  __pyx_v_result->__pyx_base.view.shape = ((Py_ssize_t *)__pyx_v_result->from_slice.shape);

  /* "View.MemoryView":989
 * 
 *     result.view.shape = <Py_ssize_t *> result.from_slice.shape
 *     result.view.strides = <Py_ssize_t *> result.from_slice.strides             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_result->__pyx_base.view.strides = ((Py_ssize_t *)__pyx_v_result->from_slice.strides);

  /* "View.MemoryView":992
 * 
 * 
 *     result.view.suboffsets = NULL             # <<<<<<<<<<<<<<
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:
 */
  __pyx_v_result->__pyx_base.view.suboffsets = NULL;

  /* "View.MemoryView":993
 * 
 *     result.view.suboffsets = NULL
 *     for suboffset in result.from_slice.suboffsets[:ndim]:             # <<<<<<<<<<<<<<
 *         if suboffset >= 0:
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 */
  __pyx_t_7 = (__pyx_v_result->from_slice.suboffsets + __pyx_v_ndim);
  for (__pyx_t_8 = __pyx_v_result->from_slice.suboffsets; __pyx_t_8 < __pyx_t_7; __pyx_t_8++) {
    __pyx_t_6 = __pyx_t_8;
    __pyx_v_suboffset = (__pyx_t_6[0]);

    /* "View.MemoryView":994
 *     result.view.suboffsets = NULL
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 *             break
 */
    __pyx_t_1 = ((__pyx_v_suboffset >= 0) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":995
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      __pyx_v_result->__pyx_base.view.suboffsets = ((Py_ssize_t *)__pyx_v_result->from_slice.suboffsets);

      /* "View.MemoryView":996
 *         if suboffset >= 0:
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 *             break             # <<<<<<<<<<<<<<
 * 
 *     result.view.len = result.view.itemsize
 */
      goto __pyx_L5_break;

      /* "View.MemoryView":994
 *     result.view.suboffsets = NULL
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 *             break
 */
    }
  }
  __pyx_L5_break:;

  /* "View.MemoryView":998
 *             break
 * 
 *     result.view.len = result.view.itemsize             # <<<<<<<<<<<<<<
 *     for length in result.view.shape[:ndim]:
 *         result.view.len *= length
 */
  __pyx_t_9 = __pyx_v_result->__pyx_base.view.itemsize;
  __pyx_v_result->__pyx_base.view.len = __pyx_t_9;

  /* "View.MemoryView":999
 * 
 *     result.view.len = result.view.itemsize
 *     for length in result.view.shape[:ndim]:             # <<<<<<<<<<<<<<
 *         result.view.len *= length
 * 
 */
  __pyx_t_7 = (__pyx_v_result->__pyx_base.view.shape + __pyx_v_ndim);
  for (__pyx_t_8 = __pyx_v_result->__pyx_base.view.shape; __pyx_t_8 < __pyx_t_7; __pyx_t_8++) {
    __pyx_t_6 = __pyx_t_8;
    __pyx_t_2 = PyInt_FromSsize_t((__pyx_t_6[0])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_length, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "View.MemoryView":1000
 *     result.view.len = result.view.itemsize
 *     for length in result.view.shape[:ndim]:
 *         result.view.len *= length             # <<<<<<<<<<<<<<
 * 
 *     result.to_object_func = to_object_func
 */
    __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_result->__pyx_base.view.len); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_InPlaceMultiply(__pyx_t_2, __pyx_v_length); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_result->__pyx_base.view.len = __pyx_t_9;
  }

  /* "View.MemoryView":1002
 *         result.view.len *= length
 * 
 *     result.to_object_func = to_object_func             # <<<<<<<<<<<<<<
 *     result.to_dtype_func = to_dtype_func
 * 
 */
  __pyx_v_result->to_object_func = __pyx_v_to_object_func;

  /* "View.MemoryView":1003
 * 
 *     result.to_object_func = to_object_func
 *     result.to_dtype_func = to_dtype_func             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
  __pyx_v_result->to_dtype_func = __pyx_v_to_dtype_func;

  /* "View.MemoryView":1005
 *     result.to_dtype_func = to_dtype_func
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_get_slice_from_memoryview')
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "View.MemoryView":958
 * 
 * @cname('__pyx_memoryview_fromslice')
 * cdef memoryview_fromslice(__Pyx_memviewslice memviewslice,             # <<<<<<<<<<<<<<
 *                           int ndim,
 *                           object (*to_object_func)(char *),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview_fromslice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_length);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1008
 * 
 * @cname('__pyx_memoryview_get_slice_from_memoryview')
 * cdef __Pyx_memviewslice *get_slice_from_memview(memoryview memview,             # <<<<<<<<<<<<<<
 *                                                    __Pyx_memviewslice *mslice):
 *     cdef _memoryviewslice obj
 */

static __Pyx_memviewslice *__pyx_memoryview_get_slice_from_memoryview(struct __pyx_memoryview_obj *__pyx_v_memview, __Pyx_memviewslice *__pyx_v_mslice) {
  struct __pyx_memoryviewslice_obj *__pyx_v_obj = 0;
  __Pyx_memviewslice *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_slice_from_memview", 0);

  /* "View.MemoryView":1011
 *                                                    __Pyx_memviewslice *mslice):
 *     cdef _memoryviewslice obj
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         obj = memview
 *         return &obj.from_slice
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1012
 *     cdef _memoryviewslice obj
 *     if isinstance(memview, _memoryviewslice):
 *         obj = memview             # <<<<<<<<<<<<<<
 *         return &obj.from_slice
 *     else:
 */
    if (!(likely(((((PyObject *)__pyx_v_memview)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type))))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = ((PyObject *)__pyx_v_memview);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_obj = ((struct __pyx_memoryviewslice_obj *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "View.MemoryView":1013
 *     if isinstance(memview, _memoryviewslice):
 *         obj = memview
 *         return &obj.from_slice             # <<<<<<<<<<<<<<
 *     else:
 *         slice_copy(memview, mslice)
 */
    __pyx_r = (&__pyx_v_obj->from_slice);
    goto __pyx_L0;

    /* "View.MemoryView":1011
 *                                                    __Pyx_memviewslice *mslice):
 *     cdef _memoryviewslice obj
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         obj = memview
 *         return &obj.from_slice
 */
  }

  /* "View.MemoryView":1015
 *         return &obj.from_slice
 *     else:
 *         slice_copy(memview, mslice)             # <<<<<<<<<<<<<<
 *         return mslice
 * 
 */
  /*else*/ {
    __pyx_memoryview_slice_copy(__pyx_v_memview, __pyx_v_mslice);

    /* "View.MemoryView":1016
 *     else:
 *         slice_copy(memview, mslice)
 *         return mslice             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_slice_copy')
 */
    __pyx_r = __pyx_v_mslice;
    goto __pyx_L0;
  }

  /* "View.MemoryView":1008
 * 
 * @cname('__pyx_memoryview_get_slice_from_memoryview')
 * cdef __Pyx_memviewslice *get_slice_from_memview(memoryview memview,             # <<<<<<<<<<<<<<
 *                                                    __Pyx_memviewslice *mslice):
 *     cdef _memoryviewslice obj
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_WriteUnraisable("View.MemoryView.get_slice_from_memview", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1019
 * 
 * @cname('__pyx_memoryview_slice_copy')
 * cdef void slice_copy(memoryview memview, __Pyx_memviewslice *dst):             # <<<<<<<<<<<<<<
 *     cdef int dim
 *     cdef (Py_ssize_t*) shape, strides, suboffsets
 */

static void __pyx_memoryview_slice_copy(struct __pyx_memoryview_obj *__pyx_v_memview, __Pyx_memviewslice *__pyx_v_dst) {
  int __pyx_v_dim;
  Py_ssize_t *__pyx_v_shape;
  Py_ssize_t *__pyx_v_strides;
  Py_ssize_t *__pyx_v_suboffsets;
  __Pyx_RefNannyDeclarations
  Py_ssize_t *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  __Pyx_RefNannySetupContext("slice_copy", 0);

  /* "View.MemoryView":1023
 *     cdef (Py_ssize_t*) shape, strides, suboffsets
 * 
 *     shape = memview.view.shape             # <<<<<<<<<<<<<<
 *     strides = memview.view.strides
 *     suboffsets = memview.view.suboffsets
 */
  __pyx_t_1 = __pyx_v_memview->view.shape;
  __pyx_v_shape = __pyx_t_1;

  /* "View.MemoryView":1024
 * 
 *     shape = memview.view.shape
 *     strides = memview.view.strides             # <<<<<<<<<<<<<<
 *     suboffsets = memview.view.suboffsets
 * 
 */
  __pyx_t_1 = __pyx_v_memview->view.strides;
  __pyx_v_strides = __pyx_t_1;

  /* "View.MemoryView":1025
 *     shape = memview.view.shape
 *     strides = memview.view.strides
 *     suboffsets = memview.view.suboffsets             # <<<<<<<<<<<<<<
 * 
 *     dst.memview = <__pyx_memoryview *> memview
 */
  __pyx_t_1 = __pyx_v_memview->view.suboffsets;
  __pyx_v_suboffsets = __pyx_t_1;

  /* "View.MemoryView":1027
 *     suboffsets = memview.view.suboffsets
 * 
 *     dst.memview = <__pyx_memoryview *> memview             # <<<<<<<<<<<<<<
 *     dst.data = <char *> memview.view.buf
 * 
 */
  __pyx_v_dst->memview = ((struct __pyx_memoryview_obj *)__pyx_v_memview);

  /* "View.MemoryView":1028
 * 
 *     dst.memview = <__pyx_memoryview *> memview
 *     dst.data = <char *> memview.view.buf             # <<<<<<<<<<<<<<
 * 
 *     for dim in range(memview.view.ndim):
 */
  __pyx_v_dst->data = ((char *)__pyx_v_memview->view.buf);

  /* "View.MemoryView":1030
 *     dst.data = <char *> memview.view.buf
 * 
 *     for dim in range(memview.view.ndim):             # <<<<<<<<<<<<<<
 *         dst.shape[dim] = shape[dim]
 *         dst.strides[dim] = strides[dim]
 */
  __pyx_t_2 = __pyx_v_memview->view.ndim;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_dim = __pyx_t_3;

    /* "View.MemoryView":1031
 * 
 *     for dim in range(memview.view.ndim):
 *         dst.shape[dim] = shape[dim]             # <<<<<<<<<<<<<<
 *         dst.strides[dim] = strides[dim]
 *         dst.suboffsets[dim] = suboffsets[dim] if suboffsets else -1
 */
    (__pyx_v_dst->shape[__pyx_v_dim]) = (__pyx_v_shape[__pyx_v_dim]);

    /* "View.MemoryView":1032
 *     for dim in range(memview.view.ndim):
 *         dst.shape[dim] = shape[dim]
 *         dst.strides[dim] = strides[dim]             # <<<<<<<<<<<<<<
 *         dst.suboffsets[dim] = suboffsets[dim] if suboffsets else -1
 * 
 */
    (__pyx_v_dst->strides[__pyx_v_dim]) = (__pyx_v_strides[__pyx_v_dim]);

    /* "View.MemoryView":1033
 *         dst.shape[dim] = shape[dim]
 *         dst.strides[dim] = strides[dim]
 *         dst.suboffsets[dim] = suboffsets[dim] if suboffsets else -1             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_object')
 */
    if ((__pyx_v_suboffsets != 0)) {
      __pyx_t_4 = (__pyx_v_suboffsets[__pyx_v_dim]);
    } else {
      __pyx_t_4 = -1L;
    }
    (__pyx_v_dst->suboffsets[__pyx_v_dim]) = __pyx_t_4;
  }

  /* "View.MemoryView":1019
 * 
 * @cname('__pyx_memoryview_slice_copy')
 * cdef void slice_copy(memoryview memview, __Pyx_memviewslice *dst):             # <<<<<<<<<<<<<<
 *     cdef int dim
 *     cdef (Py_ssize_t*) shape, strides, suboffsets
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":1036
 * 
 * @cname('__pyx_memoryview_copy_object')
 * cdef memoryview_copy(memoryview memview):             # <<<<<<<<<<<<<<
 *     "Create a new memoryview object"
 *     cdef __Pyx_memviewslice memviewslice
 */

static PyObject *__pyx_memoryview_copy_object(struct __pyx_memoryview_obj *__pyx_v_memview) {
  __Pyx_memviewslice __pyx_v_memviewslice;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_copy", 0);

  /* "View.MemoryView":1039
 *     "Create a new memoryview object"
 *     cdef __Pyx_memviewslice memviewslice
 *     slice_copy(memview, &memviewslice)             # <<<<<<<<<<<<<<
 *     return memoryview_copy_from_slice(memview, &memviewslice)
 * 
 */
  __pyx_memoryview_slice_copy(__pyx_v_memview, (&__pyx_v_memviewslice));

  /* "View.MemoryView":1040
 *     cdef __Pyx_memviewslice memviewslice
 *     slice_copy(memview, &memviewslice)
 *     return memoryview_copy_from_slice(memview, &memviewslice)             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_object_from_slice')
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_memoryview_copy_object_from_slice(__pyx_v_memview, (&__pyx_v_memviewslice)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1040; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":1036
 * 
 * @cname('__pyx_memoryview_copy_object')
 * cdef memoryview_copy(memoryview memview):             # <<<<<<<<<<<<<<
 *     "Create a new memoryview object"
 *     cdef __Pyx_memviewslice memviewslice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview_copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1043
 * 
 * @cname('__pyx_memoryview_copy_object_from_slice')
 * cdef memoryview_copy_from_slice(memoryview memview, __Pyx_memviewslice *memviewslice):             # <<<<<<<<<<<<<<
 *     """
 *     Create a new memoryview object from a given memoryview object and slice.
 */

static PyObject *__pyx_memoryview_copy_object_from_slice(struct __pyx_memoryview_obj *__pyx_v_memview, __Pyx_memviewslice *__pyx_v_memviewslice) {
  PyObject *(*__pyx_v_to_object_func)(char *);
  int (*__pyx_v_to_dtype_func)(char *, PyObject *);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *(*__pyx_t_3)(char *);
  int (*__pyx_t_4)(char *, PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_copy_from_slice", 0);

  /* "View.MemoryView":1050
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         to_object_func = (<_memoryviewslice> memview).to_object_func
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1051
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         to_object_func = (<_memoryviewslice> memview).to_object_func             # <<<<<<<<<<<<<<
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 *     else:
 */
    __pyx_t_3 = ((struct __pyx_memoryviewslice_obj *)__pyx_v_memview)->to_object_func;
    __pyx_v_to_object_func = __pyx_t_3;

    /* "View.MemoryView":1052
 *     if isinstance(memview, _memoryviewslice):
 *         to_object_func = (<_memoryviewslice> memview).to_object_func
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func             # <<<<<<<<<<<<<<
 *     else:
 *         to_object_func = NULL
 */
    __pyx_t_4 = ((struct __pyx_memoryviewslice_obj *)__pyx_v_memview)->to_dtype_func;
    __pyx_v_to_dtype_func = __pyx_t_4;

    /* "View.MemoryView":1050
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         to_object_func = (<_memoryviewslice> memview).to_object_func
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1054
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 *     else:
 *         to_object_func = NULL             # <<<<<<<<<<<<<<
 *         to_dtype_func = NULL
 * 
 */
  /*else*/ {
    __pyx_v_to_object_func = NULL;

    /* "View.MemoryView":1055
 *     else:
 *         to_object_func = NULL
 *         to_dtype_func = NULL             # <<<<<<<<<<<<<<
 * 
 *     return memoryview_fromslice(memviewslice[0], memview.view.ndim,
 */
    __pyx_v_to_dtype_func = NULL;
  }
  __pyx_L3:;

  /* "View.MemoryView":1057
 *         to_dtype_func = NULL
 * 
 *     return memoryview_fromslice(memviewslice[0], memview.view.ndim,             # <<<<<<<<<<<<<<
 *                                 to_object_func, to_dtype_func,
 *                                 memview.dtype_is_object)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "View.MemoryView":1059
 *     return memoryview_fromslice(memviewslice[0], memview.view.ndim,
 *                                 to_object_func, to_dtype_func,
 *                                 memview.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __pyx_memoryview_fromslice((__pyx_v_memviewslice[0]), __pyx_v_memview->view.ndim, __pyx_v_to_object_func, __pyx_v_to_dtype_func, __pyx_v_memview->dtype_is_object); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":1043
 * 
 * @cname('__pyx_memoryview_copy_object_from_slice')
 * cdef memoryview_copy_from_slice(memoryview memview, __Pyx_memviewslice *memviewslice):             # <<<<<<<<<<<<<<
 *     """
 *     Create a new memoryview object from a given memoryview object and slice.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview_copy_from_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1065
 * 
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:             # <<<<<<<<<<<<<<
 *     if arg < 0:
 *         return -arg
 */

static Py_ssize_t abs_py_ssize_t(Py_ssize_t __pyx_v_arg) {
  Py_ssize_t __pyx_r;
  int __pyx_t_1;

  /* "View.MemoryView":1066
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:
 *     if arg < 0:             # <<<<<<<<<<<<<<
 *         return -arg
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arg < 0) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1067
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:
 *     if arg < 0:
 *         return -arg             # <<<<<<<<<<<<<<
 *     else:
 *         return arg
 */
    __pyx_r = (-__pyx_v_arg);
    goto __pyx_L0;

    /* "View.MemoryView":1066
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:
 *     if arg < 0:             # <<<<<<<<<<<<<<
 *         return -arg
 *     else:
 */
  }

  /* "View.MemoryView":1069
 *         return -arg
 *     else:
 *         return arg             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_get_best_slice_order')
 */
  /*else*/ {
    __pyx_r = __pyx_v_arg;
    goto __pyx_L0;
  }

  /* "View.MemoryView":1065
 * 
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:             # <<<<<<<<<<<<<<
 *     if arg < 0:
 *         return -arg
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1072
 * 
 * @cname('__pyx_get_best_slice_order')
 * cdef char get_best_order(__Pyx_memviewslice *mslice, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Figure out the best memory access order for a given slice.
 */

static char __pyx_get_best_slice_order(__Pyx_memviewslice *__pyx_v_mslice, int __pyx_v_ndim) {
  int __pyx_v_i;
  Py_ssize_t __pyx_v_c_stride;
  Py_ssize_t __pyx_v_f_stride;
  char __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "View.MemoryView":1077
 *     """
 *     cdef int i
 *     cdef Py_ssize_t c_stride = 0             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t f_stride = 0
 * 
 */
  __pyx_v_c_stride = 0;

  /* "View.MemoryView":1078
 *     cdef int i
 *     cdef Py_ssize_t c_stride = 0
 *     cdef Py_ssize_t f_stride = 0             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim - 1, -1, -1):
 */
  __pyx_v_f_stride = 0;

  /* "View.MemoryView":1080
 *     cdef Py_ssize_t f_stride = 0
 * 
 *     for i in range(ndim - 1, -1, -1):             # <<<<<<<<<<<<<<
 *         if mslice.shape[i] > 1:
 *             c_stride = mslice.strides[i]
 */
  for (__pyx_t_1 = (__pyx_v_ndim - 1); __pyx_t_1 > -1L; __pyx_t_1-=1) {
    __pyx_v_i = __pyx_t_1;

    /* "View.MemoryView":1081
 * 
 *     for i in range(ndim - 1, -1, -1):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             c_stride = mslice.strides[i]
 *             break
 */
    __pyx_t_2 = (((__pyx_v_mslice->shape[__pyx_v_i]) > 1) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1082
 *     for i in range(ndim - 1, -1, -1):
 *         if mslice.shape[i] > 1:
 *             c_stride = mslice.strides[i]             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      __pyx_v_c_stride = (__pyx_v_mslice->strides[__pyx_v_i]);

      /* "View.MemoryView":1083
 *         if mslice.shape[i] > 1:
 *             c_stride = mslice.strides[i]
 *             break             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim):
 */
      goto __pyx_L4_break;

      /* "View.MemoryView":1081
 * 
 *     for i in range(ndim - 1, -1, -1):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             c_stride = mslice.strides[i]
 *             break
 */
    }
  }
  __pyx_L4_break:;

  /* "View.MemoryView":1085
 *             break
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         if mslice.shape[i] > 1:
 *             f_stride = mslice.strides[i]
 */
  __pyx_t_1 = __pyx_v_ndim;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_1; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "View.MemoryView":1086
 * 
 *     for i in range(ndim):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             f_stride = mslice.strides[i]
 *             break
 */
    __pyx_t_2 = (((__pyx_v_mslice->shape[__pyx_v_i]) > 1) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1087
 *     for i in range(ndim):
 *         if mslice.shape[i] > 1:
 *             f_stride = mslice.strides[i]             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      __pyx_v_f_stride = (__pyx_v_mslice->strides[__pyx_v_i]);

      /* "View.MemoryView":1088
 *         if mslice.shape[i] > 1:
 *             f_stride = mslice.strides[i]
 *             break             # <<<<<<<<<<<<<<
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):
 */
      goto __pyx_L7_break;

      /* "View.MemoryView":1086
 * 
 *     for i in range(ndim):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             f_stride = mslice.strides[i]
 *             break
 */
    }
  }
  __pyx_L7_break:;

  /* "View.MemoryView":1090
 *             break
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):             # <<<<<<<<<<<<<<
 *         return 'C'
 *     else:
 */
  __pyx_t_2 = ((abs_py_ssize_t(__pyx_v_c_stride) <= abs_py_ssize_t(__pyx_v_f_stride)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1091
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):
 *         return 'C'             # <<<<<<<<<<<<<<
 *     else:
 *         return 'F'
 */
    __pyx_r = 'C';
    goto __pyx_L0;

    /* "View.MemoryView":1090
 *             break
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):             # <<<<<<<<<<<<<<
 *         return 'C'
 *     else:
 */
  }

  /* "View.MemoryView":1093
 *         return 'C'
 *     else:
 *         return 'F'             # <<<<<<<<<<<<<<
 * 
 * @cython.cdivision(True)
 */
  /*else*/ {
    __pyx_r = 'F';
    goto __pyx_L0;
  }

  /* "View.MemoryView":1072
 * 
 * @cname('__pyx_get_best_slice_order')
 * cdef char get_best_order(__Pyx_memviewslice *mslice, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Figure out the best memory access order for a given slice.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1096
 * 
 * @cython.cdivision(True)
 * cdef void _copy_strided_to_strided(char *src_data, Py_ssize_t *src_strides,             # <<<<<<<<<<<<<<
 *                                    char *dst_data, Py_ssize_t *dst_strides,
 *                                    Py_ssize_t *src_shape, Py_ssize_t *dst_shape,
 */

static void _copy_strided_to_strided(char *__pyx_v_src_data, Py_ssize_t *__pyx_v_src_strides, char *__pyx_v_dst_data, Py_ssize_t *__pyx_v_dst_strides, Py_ssize_t *__pyx_v_src_shape, Py_ssize_t *__pyx_v_dst_shape, int __pyx_v_ndim, size_t __pyx_v_itemsize) {
  CYTHON_UNUSED Py_ssize_t __pyx_v_i;
  CYTHON_UNUSED Py_ssize_t __pyx_v_src_extent;
  Py_ssize_t __pyx_v_dst_extent;
  Py_ssize_t __pyx_v_src_stride;
  Py_ssize_t __pyx_v_dst_stride;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;

  /* "View.MemoryView":1103
 * 
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t src_extent = src_shape[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t dst_extent = dst_shape[0]
 *     cdef Py_ssize_t src_stride = src_strides[0]
 */
  __pyx_v_src_extent = (__pyx_v_src_shape[0]);

  /* "View.MemoryView":1104
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t src_extent = src_shape[0]
 *     cdef Py_ssize_t dst_extent = dst_shape[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t src_stride = src_strides[0]
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 */
  __pyx_v_dst_extent = (__pyx_v_dst_shape[0]);

  /* "View.MemoryView":1105
 *     cdef Py_ssize_t src_extent = src_shape[0]
 *     cdef Py_ssize_t dst_extent = dst_shape[0]
 *     cdef Py_ssize_t src_stride = src_strides[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 * 
 */
  __pyx_v_src_stride = (__pyx_v_src_strides[0]);

  /* "View.MemoryView":1106
 *     cdef Py_ssize_t dst_extent = dst_shape[0]
 *     cdef Py_ssize_t src_stride = src_strides[0]
 *     cdef Py_ssize_t dst_stride = dst_strides[0]             # <<<<<<<<<<<<<<
 * 
 *     if ndim == 1:
 */
  __pyx_v_dst_stride = (__pyx_v_dst_strides[0]);

  /* "View.MemoryView":1108
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 */
  __pyx_t_1 = ((__pyx_v_ndim == 1) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1109
 * 
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and             # <<<<<<<<<<<<<<
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 */
    __pyx_t_2 = ((__pyx_v_src_stride > 0) != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_2 = ((__pyx_v_dst_stride > 0) != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L5_bool_binop_done;
    }

    /* "View.MemoryView":1110
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):             # <<<<<<<<<<<<<<
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 *        else:
 */
    __pyx_t_2 = (((size_t)__pyx_v_src_stride) == __pyx_v_itemsize);
    if (__pyx_t_2) {
      __pyx_t_2 = (__pyx_v_itemsize == ((size_t)__pyx_v_dst_stride));
    }
    __pyx_t_3 = (__pyx_t_2 != 0);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L5_bool_binop_done:;

    /* "View.MemoryView":1109
 * 
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and             # <<<<<<<<<<<<<<
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 */
    if (__pyx_t_1) {

      /* "View.MemoryView":1111
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)             # <<<<<<<<<<<<<<
 *        else:
 *            for i in range(dst_extent):
 */
      memcpy(__pyx_v_dst_data, __pyx_v_src_data, (__pyx_v_itemsize * __pyx_v_dst_extent));

      /* "View.MemoryView":1109
 * 
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and             # <<<<<<<<<<<<<<
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 */
      goto __pyx_L4;
    }

    /* "View.MemoryView":1113
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 *        else:
 *            for i in range(dst_extent):             # <<<<<<<<<<<<<<
 *                memcpy(dst_data, src_data, itemsize)
 *                src_data += src_stride
 */
    /*else*/ {
      __pyx_t_4 = __pyx_v_dst_extent;
      for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
        __pyx_v_i = __pyx_t_5;

        /* "View.MemoryView":1114
 *        else:
 *            for i in range(dst_extent):
 *                memcpy(dst_data, src_data, itemsize)             # <<<<<<<<<<<<<<
 *                src_data += src_stride
 *                dst_data += dst_stride
 */
        memcpy(__pyx_v_dst_data, __pyx_v_src_data, __pyx_v_itemsize);

        /* "View.MemoryView":1115
 *            for i in range(dst_extent):
 *                memcpy(dst_data, src_data, itemsize)
 *                src_data += src_stride             # <<<<<<<<<<<<<<
 *                dst_data += dst_stride
 *     else:
 */
        __pyx_v_src_data = (__pyx_v_src_data + __pyx_v_src_stride);

        /* "View.MemoryView":1116
 *                memcpy(dst_data, src_data, itemsize)
 *                src_data += src_stride
 *                dst_data += dst_stride             # <<<<<<<<<<<<<<
 *     else:
 *         for i in range(dst_extent):
 */
        __pyx_v_dst_data = (__pyx_v_dst_data + __pyx_v_dst_stride);
      }
    }
    __pyx_L4:;

    /* "View.MemoryView":1108
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1118
 *                dst_data += dst_stride
 *     else:
 *         for i in range(dst_extent):             # <<<<<<<<<<<<<<
 *             _copy_strided_to_strided(src_data, src_strides + 1,
 *                                      dst_data, dst_strides + 1,
 */
  /*else*/ {
    __pyx_t_4 = __pyx_v_dst_extent;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "View.MemoryView":1119
 *     else:
 *         for i in range(dst_extent):
 *             _copy_strided_to_strided(src_data, src_strides + 1,             # <<<<<<<<<<<<<<
 *                                      dst_data, dst_strides + 1,
 *                                      src_shape + 1, dst_shape + 1,
 */
      _copy_strided_to_strided(__pyx_v_src_data, (__pyx_v_src_strides + 1), __pyx_v_dst_data, (__pyx_v_dst_strides + 1), (__pyx_v_src_shape + 1), (__pyx_v_dst_shape + 1), (__pyx_v_ndim - 1), __pyx_v_itemsize);

      /* "View.MemoryView":1123
 *                                      src_shape + 1, dst_shape + 1,
 *                                      ndim - 1, itemsize)
 *             src_data += src_stride             # <<<<<<<<<<<<<<
 *             dst_data += dst_stride
 * 
 */
      __pyx_v_src_data = (__pyx_v_src_data + __pyx_v_src_stride);

      /* "View.MemoryView":1124
 *                                      ndim - 1, itemsize)
 *             src_data += src_stride
 *             dst_data += dst_stride             # <<<<<<<<<<<<<<
 * 
 * cdef void copy_strided_to_strided(__Pyx_memviewslice *src,
 */
      __pyx_v_dst_data = (__pyx_v_dst_data + __pyx_v_dst_stride);
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":1096
 * 
 * @cython.cdivision(True)
 * cdef void _copy_strided_to_strided(char *src_data, Py_ssize_t *src_strides,             # <<<<<<<<<<<<<<
 *                                    char *dst_data, Py_ssize_t *dst_strides,
 *                                    Py_ssize_t *src_shape, Py_ssize_t *dst_shape,
 */

  /* function exit code */
}

/* "View.MemoryView":1126
 *             dst_data += dst_stride
 * 
 * cdef void copy_strided_to_strided(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice *dst,
 *                                   int ndim, size_t itemsize) nogil:
 */

static void copy_strided_to_strided(__Pyx_memviewslice *__pyx_v_src, __Pyx_memviewslice *__pyx_v_dst, int __pyx_v_ndim, size_t __pyx_v_itemsize) {

  /* "View.MemoryView":1129
 *                                   __Pyx_memviewslice *dst,
 *                                   int ndim, size_t itemsize) nogil:
 *     _copy_strided_to_strided(src.data, src.strides, dst.data, dst.strides,             # <<<<<<<<<<<<<<
 *                              src.shape, dst.shape, ndim, itemsize)
 * 
 */
  _copy_strided_to_strided(__pyx_v_src->data, __pyx_v_src->strides, __pyx_v_dst->data, __pyx_v_dst->strides, __pyx_v_src->shape, __pyx_v_dst->shape, __pyx_v_ndim, __pyx_v_itemsize);

  /* "View.MemoryView":1126
 *             dst_data += dst_stride
 * 
 * cdef void copy_strided_to_strided(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice *dst,
 *                                   int ndim, size_t itemsize) nogil:
 */

  /* function exit code */
}

/* "View.MemoryView":1133
 * 
 * @cname('__pyx_memoryview_slice_get_size')
 * cdef Py_ssize_t slice_get_size(__Pyx_memviewslice *src, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     "Return the size of the memory occupied by the slice in number of bytes"
 *     cdef int i
 */

static Py_ssize_t __pyx_memoryview_slice_get_size(__Pyx_memviewslice *__pyx_v_src, int __pyx_v_ndim) {
  int __pyx_v_i;
  Py_ssize_t __pyx_v_size;
  Py_ssize_t __pyx_r;
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "View.MemoryView":1136
 *     "Return the size of the memory occupied by the slice in number of bytes"
 *     cdef int i
 *     cdef Py_ssize_t size = src.memview.view.itemsize             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim):
 */
  __pyx_t_1 = __pyx_v_src->memview->view.itemsize;
  __pyx_v_size = __pyx_t_1;

  /* "View.MemoryView":1138
 *     cdef Py_ssize_t size = src.memview.view.itemsize
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         size *= src.shape[i]
 * 
 */
  __pyx_t_2 = __pyx_v_ndim;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "View.MemoryView":1139
 * 
 *     for i in range(ndim):
 *         size *= src.shape[i]             # <<<<<<<<<<<<<<
 * 
 *     return size
 */
    __pyx_v_size = (__pyx_v_size * (__pyx_v_src->shape[__pyx_v_i]));
  }

  /* "View.MemoryView":1141
 *         size *= src.shape[i]
 * 
 *     return size             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_fill_contig_strides_array')
 */
  __pyx_r = __pyx_v_size;
  goto __pyx_L0;

  /* "View.MemoryView":1133
 * 
 * @cname('__pyx_memoryview_slice_get_size')
 * cdef Py_ssize_t slice_get_size(__Pyx_memviewslice *src, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     "Return the size of the memory occupied by the slice in number of bytes"
 *     cdef int i
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1144
 * 
 * @cname('__pyx_fill_contig_strides_array')
 * cdef Py_ssize_t fill_contig_strides_array(             # <<<<<<<<<<<<<<
 *                 Py_ssize_t *shape, Py_ssize_t *strides, Py_ssize_t stride,
 *                 int ndim, char order) nogil:
 */

static Py_ssize_t __pyx_fill_contig_strides_array(Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, Py_ssize_t __pyx_v_stride, int __pyx_v_ndim, char __pyx_v_order) {
  int __pyx_v_idx;
  Py_ssize_t __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "View.MemoryView":1153
 *     cdef int idx
 * 
 *     if order == 'F':             # <<<<<<<<<<<<<<
 *         for idx in range(ndim):
 *             strides[idx] = stride
 */
  __pyx_t_1 = ((__pyx_v_order == 'F') != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1154
 * 
 *     if order == 'F':
 *         for idx in range(ndim):             # <<<<<<<<<<<<<<
 *             strides[idx] = stride
 *             stride = stride * shape[idx]
 */
    __pyx_t_2 = __pyx_v_ndim;
    for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
      __pyx_v_idx = __pyx_t_3;

      /* "View.MemoryView":1155
 *     if order == 'F':
 *         for idx in range(ndim):
 *             strides[idx] = stride             # <<<<<<<<<<<<<<
 *             stride = stride * shape[idx]
 *     else:
 */
      (__pyx_v_strides[__pyx_v_idx]) = __pyx_v_stride;

      /* "View.MemoryView":1156
 *         for idx in range(ndim):
 *             strides[idx] = stride
 *             stride = stride * shape[idx]             # <<<<<<<<<<<<<<
 *     else:
 *         for idx in range(ndim - 1, -1, -1):
 */
      __pyx_v_stride = (__pyx_v_stride * (__pyx_v_shape[__pyx_v_idx]));
    }

    /* "View.MemoryView":1153
 *     cdef int idx
 * 
 *     if order == 'F':             # <<<<<<<<<<<<<<
 *         for idx in range(ndim):
 *             strides[idx] = stride
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1158
 *             stride = stride * shape[idx]
 *     else:
 *         for idx in range(ndim - 1, -1, -1):             # <<<<<<<<<<<<<<
 *             strides[idx] = stride
 *             stride = stride * shape[idx]
 */
  /*else*/ {
    for (__pyx_t_2 = (__pyx_v_ndim - 1); __pyx_t_2 > -1L; __pyx_t_2-=1) {
      __pyx_v_idx = __pyx_t_2;

      /* "View.MemoryView":1159
 *     else:
 *         for idx in range(ndim - 1, -1, -1):
 *             strides[idx] = stride             # <<<<<<<<<<<<<<
 *             stride = stride * shape[idx]
 * 
 */
      (__pyx_v_strides[__pyx_v_idx]) = __pyx_v_stride;

      /* "View.MemoryView":1160
 *         for idx in range(ndim - 1, -1, -1):
 *             strides[idx] = stride
 *             stride = stride * shape[idx]             # <<<<<<<<<<<<<<
 * 
 *     return stride
 */
      __pyx_v_stride = (__pyx_v_stride * (__pyx_v_shape[__pyx_v_idx]));
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":1162
 *             stride = stride * shape[idx]
 * 
 *     return stride             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_data_to_temp')
 */
  __pyx_r = __pyx_v_stride;
  goto __pyx_L0;

  /* "View.MemoryView":1144
 * 
 * @cname('__pyx_fill_contig_strides_array')
 * cdef Py_ssize_t fill_contig_strides_array(             # <<<<<<<<<<<<<<
 *                 Py_ssize_t *shape, Py_ssize_t *strides, Py_ssize_t stride,
 *                 int ndim, char order) nogil:
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1165
 * 
 * @cname('__pyx_memoryview_copy_data_to_temp')
 * cdef void *copy_data_to_temp(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                              __Pyx_memviewslice *tmpslice,
 *                              char order,
 */

static void *__pyx_memoryview_copy_data_to_temp(__Pyx_memviewslice *__pyx_v_src, __Pyx_memviewslice *__pyx_v_tmpslice, char __pyx_v_order, int __pyx_v_ndim) {
  int __pyx_v_i;
  void *__pyx_v_result;
  size_t __pyx_v_itemsize;
  size_t __pyx_v_size;
  void *__pyx_r;
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  struct __pyx_memoryview_obj *__pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":1176
 *     cdef void *result
 * 
 *     cdef size_t itemsize = src.memview.view.itemsize             # <<<<<<<<<<<<<<
 *     cdef size_t size = slice_get_size(src, ndim)
 * 
 */
  __pyx_t_1 = __pyx_v_src->memview->view.itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "View.MemoryView":1177
 * 
 *     cdef size_t itemsize = src.memview.view.itemsize
 *     cdef size_t size = slice_get_size(src, ndim)             # <<<<<<<<<<<<<<
 * 
 *     result = malloc(size)
 */
  __pyx_v_size = __pyx_memoryview_slice_get_size(__pyx_v_src, __pyx_v_ndim);

  /* "View.MemoryView":1179
 *     cdef size_t size = slice_get_size(src, ndim)
 * 
 *     result = malloc(size)             # <<<<<<<<<<<<<<
 *     if not result:
 *         _err(MemoryError, NULL)
 */
  __pyx_v_result = malloc(__pyx_v_size);

  /* "View.MemoryView":1180
 * 
 *     result = malloc(size)
 *     if not result:             # <<<<<<<<<<<<<<
 *         _err(MemoryError, NULL)
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_result != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1181
 *     result = malloc(size)
 *     if not result:
 *         _err(MemoryError, NULL)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_memoryview_err(__pyx_builtin_MemoryError, NULL); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":1180
 * 
 *     result = malloc(size)
 *     if not result:             # <<<<<<<<<<<<<<
 *         _err(MemoryError, NULL)
 * 
 */
  }

  /* "View.MemoryView":1184
 * 
 * 
 *     tmpslice.data = <char *> result             # <<<<<<<<<<<<<<
 *     tmpslice.memview = src.memview
 *     for i in range(ndim):
 */
  __pyx_v_tmpslice->data = ((char *)__pyx_v_result);

  /* "View.MemoryView":1185
 * 
 *     tmpslice.data = <char *> result
 *     tmpslice.memview = src.memview             # <<<<<<<<<<<<<<
 *     for i in range(ndim):
 *         tmpslice.shape[i] = src.shape[i]
 */
  __pyx_t_4 = __pyx_v_src->memview;
  __pyx_v_tmpslice->memview = __pyx_t_4;

  /* "View.MemoryView":1186
 *     tmpslice.data = <char *> result
 *     tmpslice.memview = src.memview
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         tmpslice.shape[i] = src.shape[i]
 *         tmpslice.suboffsets[i] = -1
 */
  __pyx_t_3 = __pyx_v_ndim;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_3; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "View.MemoryView":1187
 *     tmpslice.memview = src.memview
 *     for i in range(ndim):
 *         tmpslice.shape[i] = src.shape[i]             # <<<<<<<<<<<<<<
 *         tmpslice.suboffsets[i] = -1
 * 
 */
    (__pyx_v_tmpslice->shape[__pyx_v_i]) = (__pyx_v_src->shape[__pyx_v_i]);

    /* "View.MemoryView":1188
 *     for i in range(ndim):
 *         tmpslice.shape[i] = src.shape[i]
 *         tmpslice.suboffsets[i] = -1             # <<<<<<<<<<<<<<
 * 
 *     fill_contig_strides_array(&tmpslice.shape[0], &tmpslice.strides[0], itemsize,
 */
    (__pyx_v_tmpslice->suboffsets[__pyx_v_i]) = -1L;
  }

  /* "View.MemoryView":1190
 *         tmpslice.suboffsets[i] = -1
 * 
 *     fill_contig_strides_array(&tmpslice.shape[0], &tmpslice.strides[0], itemsize,             # <<<<<<<<<<<<<<
 *                               ndim, order)
 * 
 */
  __pyx_fill_contig_strides_array((&(__pyx_v_tmpslice->shape[0])), (&(__pyx_v_tmpslice->strides[0])), __pyx_v_itemsize, __pyx_v_ndim, __pyx_v_order);

  /* "View.MemoryView":1194
 * 
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         if tmpslice.shape[i] == 1:
 *             tmpslice.strides[i] = 0
 */
  __pyx_t_3 = __pyx_v_ndim;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_3; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "View.MemoryView":1195
 * 
 *     for i in range(ndim):
 *         if tmpslice.shape[i] == 1:             # <<<<<<<<<<<<<<
 *             tmpslice.strides[i] = 0
 * 
 */
    __pyx_t_2 = (((__pyx_v_tmpslice->shape[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1196
 *     for i in range(ndim):
 *         if tmpslice.shape[i] == 1:
 *             tmpslice.strides[i] = 0             # <<<<<<<<<<<<<<
 * 
 *     if slice_is_contig(src, order, ndim):
 */
      (__pyx_v_tmpslice->strides[__pyx_v_i]) = 0;

      /* "View.MemoryView":1195
 * 
 *     for i in range(ndim):
 *         if tmpslice.shape[i] == 1:             # <<<<<<<<<<<<<<
 *             tmpslice.strides[i] = 0
 * 
 */
    }
  }

  /* "View.MemoryView":1198
 *             tmpslice.strides[i] = 0
 * 
 *     if slice_is_contig(src, order, ndim):             # <<<<<<<<<<<<<<
 *         memcpy(result, src.data, size)
 *     else:
 */
  __pyx_t_2 = (__pyx_memviewslice_is_contig(__pyx_v_src, __pyx_v_order, __pyx_v_ndim) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1199
 * 
 *     if slice_is_contig(src, order, ndim):
 *         memcpy(result, src.data, size)             # <<<<<<<<<<<<<<
 *     else:
 *         copy_strided_to_strided(src, tmpslice, ndim, itemsize)
 */
    memcpy(__pyx_v_result, __pyx_v_src->data, __pyx_v_size);

    /* "View.MemoryView":1198
 *             tmpslice.strides[i] = 0
 * 
 *     if slice_is_contig(src, order, ndim):             # <<<<<<<<<<<<<<
 *         memcpy(result, src.data, size)
 *     else:
 */
    goto __pyx_L9;
  }

  /* "View.MemoryView":1201
 *         memcpy(result, src.data, size)
 *     else:
 *         copy_strided_to_strided(src, tmpslice, ndim, itemsize)             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
  /*else*/ {
    copy_strided_to_strided(__pyx_v_src, __pyx_v_tmpslice, __pyx_v_ndim, __pyx_v_itemsize);
  }
  __pyx_L9:;

  /* "View.MemoryView":1203
 *         copy_strided_to_strided(src, tmpslice, ndim, itemsize)
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "View.MemoryView":1165
 * 
 * @cname('__pyx_memoryview_copy_data_to_temp')
 * cdef void *copy_data_to_temp(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                              __Pyx_memviewslice *tmpslice,
 *                              char order,
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.copy_data_to_temp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1208
 * 
 * @cname('__pyx_memoryview_err_extents')
 * cdef int _err_extents(int i, Py_ssize_t extent1,             # <<<<<<<<<<<<<<
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %
 */

static int __pyx_memoryview_err_extents(int __pyx_v_i, Py_ssize_t __pyx_v_extent1, Py_ssize_t __pyx_v_extent2) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("_err_extents", 0);

  /* "View.MemoryView":1211
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %
 *                                                         (i, extent1, extent2))             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_err_dim')
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_extent1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_extent2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;

  /* "View.MemoryView":1210
 * cdef int _err_extents(int i, Py_ssize_t extent1,
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %             # <<<<<<<<<<<<<<
 *                                                         (i, extent1, extent2))
 * 
 */
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_got_differing_extents_in_dimensi, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_Raise(__pyx_t_3, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "View.MemoryView":1208
 * 
 * @cname('__pyx_memoryview_err_extents')
 * cdef int _err_extents(int i, Py_ssize_t extent1,             # <<<<<<<<<<<<<<
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("View.MemoryView._err_extents", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "View.MemoryView":1214
 * 
 * @cname('__pyx_memoryview_err_dim')
 * cdef int _err_dim(object error, char *msg, int dim) except -1 with gil:             # <<<<<<<<<<<<<<
 *     raise error(msg.decode('ascii') % dim)
 * 
 */

static int __pyx_memoryview_err_dim(PyObject *__pyx_v_error, char *__pyx_v_msg, int __pyx_v_dim) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("_err_dim", 0);
  __Pyx_INCREF(__pyx_v_error);

  /* "View.MemoryView":1215
 * @cname('__pyx_memoryview_err_dim')
 * cdef int _err_dim(object error, char *msg, int dim) except -1 with gil:
 *     raise error(msg.decode('ascii') % dim)             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_err')
 */
  __pyx_t_2 = __Pyx_decode_c_string(__pyx_v_msg, 0, strlen(__pyx_v_msg), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_dim); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyUnicode_Format(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_v_error);
  __pyx_t_3 = __pyx_v_error; __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "View.MemoryView":1214
 * 
 * @cname('__pyx_memoryview_err_dim')
 * cdef int _err_dim(object error, char *msg, int dim) except -1 with gil:             # <<<<<<<<<<<<<<
 *     raise error(msg.decode('ascii') % dim)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView._err_dim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_XDECREF(__pyx_v_error);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "View.MemoryView":1218
 * 
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:             # <<<<<<<<<<<<<<
 *     if msg != NULL:
 *         raise error(msg.decode('ascii'))
 */

static int __pyx_memoryview_err(PyObject *__pyx_v_error, char *__pyx_v_msg) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("_err", 0);
  __Pyx_INCREF(__pyx_v_error);

  /* "View.MemoryView":1219
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:
 *     if msg != NULL:             # <<<<<<<<<<<<<<
 *         raise error(msg.decode('ascii'))
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_msg != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1220
 * cdef int _err(object error, char *msg) except -1 with gil:
 *     if msg != NULL:
 *         raise error(msg.decode('ascii'))             # <<<<<<<<<<<<<<
 *     else:
 *         raise error
 */
    __pyx_t_3 = __Pyx_decode_c_string(__pyx_v_msg, 0, strlen(__pyx_v_msg), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_error);
    __pyx_t_4 = __pyx_v_error; __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":1219
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:
 *     if msg != NULL:             # <<<<<<<<<<<<<<
 *         raise error(msg.decode('ascii'))
 *     else:
 */
  }

  /* "View.MemoryView":1222
 *         raise error(msg.decode('ascii'))
 *     else:
 *         raise error             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_contents')
 */
  /*else*/ {
    __Pyx_Raise(__pyx_v_error, 0, 0, 0);
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "View.MemoryView":1218
 * 
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:             # <<<<<<<<<<<<<<
 *     if msg != NULL:
 *         raise error(msg.decode('ascii'))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView._err", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_XDECREF(__pyx_v_error);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "View.MemoryView":1225
 * 
 * @cname('__pyx_memoryview_copy_contents')
 * cdef int memoryview_copy_contents(__Pyx_memviewslice src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice dst,
 *                                   int src_ndim, int dst_ndim,
 */

static int __pyx_memoryview_copy_contents(__Pyx_memviewslice __pyx_v_src, __Pyx_memviewslice __pyx_v_dst, int __pyx_v_src_ndim, int __pyx_v_dst_ndim, int __pyx_v_dtype_is_object) {
  void *__pyx_v_tmpdata;
  size_t __pyx_v_itemsize;
  int __pyx_v_i;
  char __pyx_v_order;
  int __pyx_v_broadcasting;
  int __pyx_v_direct_copy;
  __Pyx_memviewslice __pyx_v_tmp;
  int __pyx_v_ndim;
  int __pyx_r;
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  void *__pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":1233
 *     Check for overlapping memory and verify the shapes.
 *     """
 *     cdef void *tmpdata = NULL             # <<<<<<<<<<<<<<
 *     cdef size_t itemsize = src.memview.view.itemsize
 *     cdef int i
 */
  __pyx_v_tmpdata = NULL;

  /* "View.MemoryView":1234
 *     """
 *     cdef void *tmpdata = NULL
 *     cdef size_t itemsize = src.memview.view.itemsize             # <<<<<<<<<<<<<<
 *     cdef int i
 *     cdef char order = get_best_order(&src, src_ndim)
 */
  __pyx_t_1 = __pyx_v_src.memview->view.itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "View.MemoryView":1236
 *     cdef size_t itemsize = src.memview.view.itemsize
 *     cdef int i
 *     cdef char order = get_best_order(&src, src_ndim)             # <<<<<<<<<<<<<<
 *     cdef bint broadcasting = False
 *     cdef bint direct_copy = False
 */
  __pyx_v_order = __pyx_get_best_slice_order((&__pyx_v_src), __pyx_v_src_ndim);

  /* "View.MemoryView":1237
 *     cdef int i
 *     cdef char order = get_best_order(&src, src_ndim)
 *     cdef bint broadcasting = False             # <<<<<<<<<<<<<<
 *     cdef bint direct_copy = False
 *     cdef __Pyx_memviewslice tmp
 */
  __pyx_v_broadcasting = 0;

  /* "View.MemoryView":1238
 *     cdef char order = get_best_order(&src, src_ndim)
 *     cdef bint broadcasting = False
 *     cdef bint direct_copy = False             # <<<<<<<<<<<<<<
 *     cdef __Pyx_memviewslice tmp
 * 
 */
  __pyx_v_direct_copy = 0;

  /* "View.MemoryView":1241
 *     cdef __Pyx_memviewslice tmp
 * 
 *     if src_ndim < dst_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:
 */
  __pyx_t_2 = ((__pyx_v_src_ndim < __pyx_v_dst_ndim) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1242
 * 
 *     if src_ndim < dst_ndim:
 *         broadcast_leading(&src, src_ndim, dst_ndim)             # <<<<<<<<<<<<<<
 *     elif dst_ndim < src_ndim:
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 */
    __pyx_memoryview_broadcast_leading((&__pyx_v_src), __pyx_v_src_ndim, __pyx_v_dst_ndim);

    /* "View.MemoryView":1241
 *     cdef __Pyx_memviewslice tmp
 * 
 *     if src_ndim < dst_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1243
 *     if src_ndim < dst_ndim:
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 * 
 */
  __pyx_t_2 = ((__pyx_v_dst_ndim < __pyx_v_src_ndim) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1244
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:
 *         broadcast_leading(&dst, dst_ndim, src_ndim)             # <<<<<<<<<<<<<<
 * 
 *     cdef int ndim = max(src_ndim, dst_ndim)
 */
    __pyx_memoryview_broadcast_leading((&__pyx_v_dst), __pyx_v_dst_ndim, __pyx_v_src_ndim);

    /* "View.MemoryView":1243
 *     if src_ndim < dst_ndim:
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 * 
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":1246
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 * 
 *     cdef int ndim = max(src_ndim, dst_ndim)             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim):
 */
  __pyx_t_3 = __pyx_v_dst_ndim;
  __pyx_t_4 = __pyx_v_src_ndim;
  if (((__pyx_t_3 > __pyx_t_4) != 0)) {
    __pyx_t_5 = __pyx_t_3;
  } else {
    __pyx_t_5 = __pyx_t_4;
  }
  __pyx_v_ndim = __pyx_t_5;

  /* "View.MemoryView":1248
 *     cdef int ndim = max(src_ndim, dst_ndim)
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:
 */
  __pyx_t_5 = __pyx_v_ndim;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_5; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "View.MemoryView":1249
 * 
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:             # <<<<<<<<<<<<<<
 *             if src.shape[i] == 1:
 *                 broadcasting = True
 */
    __pyx_t_2 = (((__pyx_v_src.shape[__pyx_v_i]) != (__pyx_v_dst.shape[__pyx_v_i])) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1250
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:             # <<<<<<<<<<<<<<
 *                 broadcasting = True
 *                 src.strides[i] = 0
 */
      __pyx_t_2 = (((__pyx_v_src.shape[__pyx_v_i]) == 1) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":1251
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:
 *                 broadcasting = True             # <<<<<<<<<<<<<<
 *                 src.strides[i] = 0
 *             else:
 */
        __pyx_v_broadcasting = 1;

        /* "View.MemoryView":1252
 *             if src.shape[i] == 1:
 *                 broadcasting = True
 *                 src.strides[i] = 0             # <<<<<<<<<<<<<<
 *             else:
 *                 _err_extents(i, dst.shape[i], src.shape[i])
 */
        (__pyx_v_src.strides[__pyx_v_i]) = 0;

        /* "View.MemoryView":1250
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:             # <<<<<<<<<<<<<<
 *                 broadcasting = True
 *                 src.strides[i] = 0
 */
        goto __pyx_L7;
      }

      /* "View.MemoryView":1254
 *                 src.strides[i] = 0
 *             else:
 *                 _err_extents(i, dst.shape[i], src.shape[i])             # <<<<<<<<<<<<<<
 * 
 *         if src.suboffsets[i] >= 0:
 */
      /*else*/ {
        __pyx_t_4 = __pyx_memoryview_err_extents(__pyx_v_i, (__pyx_v_dst.shape[__pyx_v_i]), (__pyx_v_src.shape[__pyx_v_i])); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L7:;

      /* "View.MemoryView":1249
 * 
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:             # <<<<<<<<<<<<<<
 *             if src.shape[i] == 1:
 *                 broadcasting = True
 */
    }

    /* "View.MemoryView":1256
 *                 _err_extents(i, dst.shape[i], src.shape[i])
 * 
 *         if src.suboffsets[i] >= 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 */
    __pyx_t_2 = (((__pyx_v_src.suboffsets[__pyx_v_i]) >= 0) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1257
 * 
 *         if src.suboffsets[i] >= 0:
 *             _err_dim(ValueError, "Dimension %d is not direct", i)             # <<<<<<<<<<<<<<
 * 
 *     if slices_overlap(&src, &dst, ndim, itemsize):
 */
      __pyx_t_4 = __pyx_memoryview_err_dim(__pyx_builtin_ValueError, __pyx_k_Dimension_d_is_not_direct, __pyx_v_i); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "View.MemoryView":1256
 *                 _err_extents(i, dst.shape[i], src.shape[i])
 * 
 *         if src.suboffsets[i] >= 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 */
    }
  }

  /* "View.MemoryView":1259
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 *     if slices_overlap(&src, &dst, ndim, itemsize):             # <<<<<<<<<<<<<<
 * 
 *         if not slice_is_contig(&src, order, ndim):
 */
  __pyx_t_2 = (__pyx_slices_overlap((&__pyx_v_src), (&__pyx_v_dst), __pyx_v_ndim, __pyx_v_itemsize) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1261
 *     if slices_overlap(&src, &dst, ndim, itemsize):
 * 
 *         if not slice_is_contig(&src, order, ndim):             # <<<<<<<<<<<<<<
 *             order = get_best_order(&dst, ndim)
 * 
 */
    __pyx_t_2 = ((!(__pyx_memviewslice_is_contig((&__pyx_v_src), __pyx_v_order, __pyx_v_ndim) != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1262
 * 
 *         if not slice_is_contig(&src, order, ndim):
 *             order = get_best_order(&dst, ndim)             # <<<<<<<<<<<<<<
 * 
 *         tmpdata = copy_data_to_temp(&src, &tmp, order, ndim)
 */
      __pyx_v_order = __pyx_get_best_slice_order((&__pyx_v_dst), __pyx_v_ndim);

      /* "View.MemoryView":1261
 *     if slices_overlap(&src, &dst, ndim, itemsize):
 * 
 *         if not slice_is_contig(&src, order, ndim):             # <<<<<<<<<<<<<<
 *             order = get_best_order(&dst, ndim)
 * 
 */
    }

    /* "View.MemoryView":1264
 *             order = get_best_order(&dst, ndim)
 * 
 *         tmpdata = copy_data_to_temp(&src, &tmp, order, ndim)             # <<<<<<<<<<<<<<
 *         src = tmp
 * 
 */
    __pyx_t_6 = __pyx_memoryview_copy_data_to_temp((&__pyx_v_src), (&__pyx_v_tmp), __pyx_v_order, __pyx_v_ndim); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_tmpdata = __pyx_t_6;

    /* "View.MemoryView":1265
 * 
 *         tmpdata = copy_data_to_temp(&src, &tmp, order, ndim)
 *         src = tmp             # <<<<<<<<<<<<<<
 * 
 *     if not broadcasting:
 */
    __pyx_v_src = __pyx_v_tmp;

    /* "View.MemoryView":1259
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 *     if slices_overlap(&src, &dst, ndim, itemsize):             # <<<<<<<<<<<<<<
 * 
 *         if not slice_is_contig(&src, order, ndim):
 */
  }

  /* "View.MemoryView":1267
 *         src = tmp
 * 
 *     if not broadcasting:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_broadcasting != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1270
 * 
 * 
 *         if slice_is_contig(&src, 'C', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(&dst, 'C', ndim)
 *         elif slice_is_contig(&src, 'F', ndim):
 */
    __pyx_t_2 = (__pyx_memviewslice_is_contig((&__pyx_v_src), 'C', __pyx_v_ndim) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1271
 * 
 *         if slice_is_contig(&src, 'C', ndim):
 *             direct_copy = slice_is_contig(&dst, 'C', ndim)             # <<<<<<<<<<<<<<
 *         elif slice_is_contig(&src, 'F', ndim):
 *             direct_copy = slice_is_contig(&dst, 'F', ndim)
 */
      __pyx_v_direct_copy = __pyx_memviewslice_is_contig((&__pyx_v_dst), 'C', __pyx_v_ndim);

      /* "View.MemoryView":1270
 * 
 * 
 *         if slice_is_contig(&src, 'C', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(&dst, 'C', ndim)
 *         elif slice_is_contig(&src, 'F', ndim):
 */
      goto __pyx_L12;
    }

    /* "View.MemoryView":1272
 *         if slice_is_contig(&src, 'C', ndim):
 *             direct_copy = slice_is_contig(&dst, 'C', ndim)
 *         elif slice_is_contig(&src, 'F', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(&dst, 'F', ndim)
 * 
 */
    __pyx_t_2 = (__pyx_memviewslice_is_contig((&__pyx_v_src), 'F', __pyx_v_ndim) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1273
 *             direct_copy = slice_is_contig(&dst, 'C', ndim)
 *         elif slice_is_contig(&src, 'F', ndim):
 *             direct_copy = slice_is_contig(&dst, 'F', ndim)             # <<<<<<<<<<<<<<
 * 
 *         if direct_copy:
 */
      __pyx_v_direct_copy = __pyx_memviewslice_is_contig((&__pyx_v_dst), 'F', __pyx_v_ndim);

      /* "View.MemoryView":1272
 *         if slice_is_contig(&src, 'C', ndim):
 *             direct_copy = slice_is_contig(&dst, 'C', ndim)
 *         elif slice_is_contig(&src, 'F', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(&dst, 'F', ndim)
 * 
 */
    }
    __pyx_L12:;

    /* "View.MemoryView":1275
 *             direct_copy = slice_is_contig(&dst, 'F', ndim)
 * 
 *         if direct_copy:             # <<<<<<<<<<<<<<
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 */
    __pyx_t_2 = (__pyx_v_direct_copy != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1277
 *         if direct_copy:
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)             # <<<<<<<<<<<<<<
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 */
      __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 0);

      /* "View.MemoryView":1278
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))             # <<<<<<<<<<<<<<
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 *             free(tmpdata)
 */
      memcpy(__pyx_v_dst.data, __pyx_v_src.data, __pyx_memoryview_slice_get_size((&__pyx_v_src), __pyx_v_ndim));

      /* "View.MemoryView":1279
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))
 *             refcount_copying(&dst, dtype_is_object, ndim, True)             # <<<<<<<<<<<<<<
 *             free(tmpdata)
 *             return 0
 */
      __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 1);

      /* "View.MemoryView":1280
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 *             free(tmpdata)             # <<<<<<<<<<<<<<
 *             return 0
 * 
 */
      free(__pyx_v_tmpdata);

      /* "View.MemoryView":1281
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 *             free(tmpdata)
 *             return 0             # <<<<<<<<<<<<<<
 * 
 *     if order == 'F' == get_best_order(&dst, ndim):
 */
      __pyx_r = 0;
      goto __pyx_L0;

      /* "View.MemoryView":1275
 *             direct_copy = slice_is_contig(&dst, 'F', ndim)
 * 
 *         if direct_copy:             # <<<<<<<<<<<<<<
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 */
    }

    /* "View.MemoryView":1267
 *         src = tmp
 * 
 *     if not broadcasting:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  }

  /* "View.MemoryView":1283
 *             return 0
 * 
 *     if order == 'F' == get_best_order(&dst, ndim):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = (__pyx_v_order == 'F');
  if (__pyx_t_2) {
    __pyx_t_2 = ('F' == __pyx_get_best_slice_order((&__pyx_v_dst), __pyx_v_ndim));
  }
  __pyx_t_7 = (__pyx_t_2 != 0);
  if (__pyx_t_7) {

    /* "View.MemoryView":1286
 * 
 * 
 *         transpose_memslice(&src)             # <<<<<<<<<<<<<<
 *         transpose_memslice(&dst)
 * 
 */
    __pyx_t_5 = __pyx_memslice_transpose((&__pyx_v_src)); if (unlikely(__pyx_t_5 == 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":1287
 * 
 *         transpose_memslice(&src)
 *         transpose_memslice(&dst)             # <<<<<<<<<<<<<<
 * 
 *     refcount_copying(&dst, dtype_is_object, ndim, False)
 */
    __pyx_t_5 = __pyx_memslice_transpose((&__pyx_v_dst)); if (unlikely(__pyx_t_5 == 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "View.MemoryView":1283
 *             return 0
 * 
 *     if order == 'F' == get_best_order(&dst, ndim):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  }

  /* "View.MemoryView":1289
 *         transpose_memslice(&dst)
 * 
 *     refcount_copying(&dst, dtype_is_object, ndim, False)             # <<<<<<<<<<<<<<
 *     copy_strided_to_strided(&src, &dst, ndim, itemsize)
 *     refcount_copying(&dst, dtype_is_object, ndim, True)
 */
  __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 0);

  /* "View.MemoryView":1290
 * 
 *     refcount_copying(&dst, dtype_is_object, ndim, False)
 *     copy_strided_to_strided(&src, &dst, ndim, itemsize)             # <<<<<<<<<<<<<<
 *     refcount_copying(&dst, dtype_is_object, ndim, True)
 * 
 */
  copy_strided_to_strided((&__pyx_v_src), (&__pyx_v_dst), __pyx_v_ndim, __pyx_v_itemsize);

  /* "View.MemoryView":1291
 *     refcount_copying(&dst, dtype_is_object, ndim, False)
 *     copy_strided_to_strided(&src, &dst, ndim, itemsize)
 *     refcount_copying(&dst, dtype_is_object, ndim, True)             # <<<<<<<<<<<<<<
 * 
 *     free(tmpdata)
 */
  __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 1);

  /* "View.MemoryView":1293
 *     refcount_copying(&dst, dtype_is_object, ndim, True)
 * 
 *     free(tmpdata)             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
  free(__pyx_v_tmpdata);

  /* "View.MemoryView":1294
 * 
 *     free(tmpdata)
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_broadcast_leading')
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "View.MemoryView":1225
 * 
 * @cname('__pyx_memoryview_copy_contents')
 * cdef int memoryview_copy_contents(__Pyx_memviewslice src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice dst,
 *                                   int src_ndim, int dst_ndim,
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.memoryview_copy_contents", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1297
 * 
 * @cname('__pyx_memoryview_broadcast_leading')
 * cdef void broadcast_leading(__Pyx_memviewslice *mslice,             # <<<<<<<<<<<<<<
 *                             int ndim,
 *                             int ndim_other) nogil:
 */

static void __pyx_memoryview_broadcast_leading(__Pyx_memviewslice *__pyx_v_mslice, int __pyx_v_ndim, int __pyx_v_ndim_other) {
  int __pyx_v_i;
  int __pyx_v_offset;
  int __pyx_t_1;
  int __pyx_t_2;

  /* "View.MemoryView":1301
 *                             int ndim_other) nogil:
 *     cdef int i
 *     cdef int offset = ndim_other - ndim             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim - 1, -1, -1):
 */
  __pyx_v_offset = (__pyx_v_ndim_other - __pyx_v_ndim);

  /* "View.MemoryView":1303
 *     cdef int offset = ndim_other - ndim
 * 
 *     for i in range(ndim - 1, -1, -1):             # <<<<<<<<<<<<<<
 *         mslice.shape[i + offset] = mslice.shape[i]
 *         mslice.strides[i + offset] = mslice.strides[i]
 */
  for (__pyx_t_1 = (__pyx_v_ndim - 1); __pyx_t_1 > -1L; __pyx_t_1-=1) {
    __pyx_v_i = __pyx_t_1;

    /* "View.MemoryView":1304
 * 
 *     for i in range(ndim - 1, -1, -1):
 *         mslice.shape[i + offset] = mslice.shape[i]             # <<<<<<<<<<<<<<
 *         mslice.strides[i + offset] = mslice.strides[i]
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]
 */
    (__pyx_v_mslice->shape[(__pyx_v_i + __pyx_v_offset)]) = (__pyx_v_mslice->shape[__pyx_v_i]);

    /* "View.MemoryView":1305
 *     for i in range(ndim - 1, -1, -1):
 *         mslice.shape[i + offset] = mslice.shape[i]
 *         mslice.strides[i + offset] = mslice.strides[i]             # <<<<<<<<<<<<<<
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]
 * 
 */
    (__pyx_v_mslice->strides[(__pyx_v_i + __pyx_v_offset)]) = (__pyx_v_mslice->strides[__pyx_v_i]);

    /* "View.MemoryView":1306
 *         mslice.shape[i + offset] = mslice.shape[i]
 *         mslice.strides[i + offset] = mslice.strides[i]
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]             # <<<<<<<<<<<<<<
 * 
 *     for i in range(offset):
 */
    (__pyx_v_mslice->suboffsets[(__pyx_v_i + __pyx_v_offset)]) = (__pyx_v_mslice->suboffsets[__pyx_v_i]);
  }

  /* "View.MemoryView":1308
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]
 * 
 *     for i in range(offset):             # <<<<<<<<<<<<<<
 *         mslice.shape[i] = 1
 *         mslice.strides[i] = mslice.strides[0]
 */
  __pyx_t_1 = __pyx_v_offset;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "View.MemoryView":1309
 * 
 *     for i in range(offset):
 *         mslice.shape[i] = 1             # <<<<<<<<<<<<<<
 *         mslice.strides[i] = mslice.strides[0]
 *         mslice.suboffsets[i] = -1
 */
    (__pyx_v_mslice->shape[__pyx_v_i]) = 1;

    /* "View.MemoryView":1310
 *     for i in range(offset):
 *         mslice.shape[i] = 1
 *         mslice.strides[i] = mslice.strides[0]             # <<<<<<<<<<<<<<
 *         mslice.suboffsets[i] = -1
 * 
 */
    (__pyx_v_mslice->strides[__pyx_v_i]) = (__pyx_v_mslice->strides[0]);

    /* "View.MemoryView":1311
 *         mslice.shape[i] = 1
 *         mslice.strides[i] = mslice.strides[0]
 *         mslice.suboffsets[i] = -1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (__pyx_v_mslice->suboffsets[__pyx_v_i]) = -1L;
  }

  /* "View.MemoryView":1297
 * 
 * @cname('__pyx_memoryview_broadcast_leading')
 * cdef void broadcast_leading(__Pyx_memviewslice *mslice,             # <<<<<<<<<<<<<<
 *                             int ndim,
 *                             int ndim_other) nogil:
 */

  /* function exit code */
}

/* "View.MemoryView":1319
 * 
 * @cname('__pyx_memoryview_refcount_copying')
 * cdef void refcount_copying(__Pyx_memviewslice *dst, bint dtype_is_object,             # <<<<<<<<<<<<<<
 *                            int ndim, bint inc) nogil:
 * 
 */

static void __pyx_memoryview_refcount_copying(__Pyx_memviewslice *__pyx_v_dst, int __pyx_v_dtype_is_object, int __pyx_v_ndim, int __pyx_v_inc) {
  int __pyx_t_1;

  /* "View.MemoryView":1323
 * 
 * 
 *     if dtype_is_object:             # <<<<<<<<<<<<<<
 *         refcount_objects_in_slice_with_gil(dst.data, dst.shape,
 *                                            dst.strides, ndim, inc)
 */
  __pyx_t_1 = (__pyx_v_dtype_is_object != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1324
 * 
 *     if dtype_is_object:
 *         refcount_objects_in_slice_with_gil(dst.data, dst.shape,             # <<<<<<<<<<<<<<
 *                                            dst.strides, ndim, inc)
 * 
 */
    __pyx_memoryview_refcount_objects_in_slice_with_gil(__pyx_v_dst->data, __pyx_v_dst->shape, __pyx_v_dst->strides, __pyx_v_ndim, __pyx_v_inc);

    /* "View.MemoryView":1323
 * 
 * 
 *     if dtype_is_object:             # <<<<<<<<<<<<<<
 *         refcount_objects_in_slice_with_gil(dst.data, dst.shape,
 *                                            dst.strides, ndim, inc)
 */
  }

  /* "View.MemoryView":1319
 * 
 * @cname('__pyx_memoryview_refcount_copying')
 * cdef void refcount_copying(__Pyx_memviewslice *dst, bint dtype_is_object,             # <<<<<<<<<<<<<<
 *                            int ndim, bint inc) nogil:
 * 
 */

  /* function exit code */
}

/* "View.MemoryView":1328
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice_with_gil')
 * cdef void refcount_objects_in_slice_with_gil(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                              Py_ssize_t *strides, int ndim,
 *                                              bint inc) with gil:
 */

static void __pyx_memoryview_refcount_objects_in_slice_with_gil(char *__pyx_v_data, Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, int __pyx_v_ndim, int __pyx_v_inc) {
  __Pyx_RefNannyDeclarations
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("refcount_objects_in_slice_with_gil", 0);

  /* "View.MemoryView":1331
 *                                              Py_ssize_t *strides, int ndim,
 *                                              bint inc) with gil:
 *     refcount_objects_in_slice(data, shape, strides, ndim, inc)             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice')
 */
  __pyx_memoryview_refcount_objects_in_slice(__pyx_v_data, __pyx_v_shape, __pyx_v_strides, __pyx_v_ndim, __pyx_v_inc);

  /* "View.MemoryView":1328
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice_with_gil')
 * cdef void refcount_objects_in_slice_with_gil(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                              Py_ssize_t *strides, int ndim,
 *                                              bint inc) with gil:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  PyGILState_Release(__pyx_gilstate_save);
  #endif
}

/* "View.MemoryView":1334
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice')
 * cdef void refcount_objects_in_slice(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                     Py_ssize_t *strides, int ndim, bint inc):
 *     cdef Py_ssize_t i
 */

static void __pyx_memoryview_refcount_objects_in_slice(char *__pyx_v_data, Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, int __pyx_v_ndim, int __pyx_v_inc) {
  CYTHON_UNUSED Py_ssize_t __pyx_v_i;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("refcount_objects_in_slice", 0);

  /* "View.MemoryView":1338
 *     cdef Py_ssize_t i
 * 
 *     for i in range(shape[0]):             # <<<<<<<<<<<<<<
 *         if ndim == 1:
 *             if inc:
 */
  __pyx_t_1 = (__pyx_v_shape[0]);
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "View.MemoryView":1339
 * 
 *     for i in range(shape[0]):
 *         if ndim == 1:             # <<<<<<<<<<<<<<
 *             if inc:
 *                 Py_INCREF((<PyObject **> data)[0])
 */
    __pyx_t_3 = ((__pyx_v_ndim == 1) != 0);
    if (__pyx_t_3) {

      /* "View.MemoryView":1340
 *     for i in range(shape[0]):
 *         if ndim == 1:
 *             if inc:             # <<<<<<<<<<<<<<
 *                 Py_INCREF((<PyObject **> data)[0])
 *             else:
 */
      __pyx_t_3 = (__pyx_v_inc != 0);
      if (__pyx_t_3) {

        /* "View.MemoryView":1341
 *         if ndim == 1:
 *             if inc:
 *                 Py_INCREF((<PyObject **> data)[0])             # <<<<<<<<<<<<<<
 *             else:
 *                 Py_DECREF((<PyObject **> data)[0])
 */
        Py_INCREF((((PyObject **)__pyx_v_data)[0]));

        /* "View.MemoryView":1340
 *     for i in range(shape[0]):
 *         if ndim == 1:
 *             if inc:             # <<<<<<<<<<<<<<
 *                 Py_INCREF((<PyObject **> data)[0])
 *             else:
 */
        goto __pyx_L6;
      }

      /* "View.MemoryView":1343
 *                 Py_INCREF((<PyObject **> data)[0])
 *             else:
 *                 Py_DECREF((<PyObject **> data)[0])             # <<<<<<<<<<<<<<
 *         else:
 *             refcount_objects_in_slice(data, shape + 1, strides + 1,
 */
      /*else*/ {
        Py_DECREF((((PyObject **)__pyx_v_data)[0]));
      }
      __pyx_L6:;

      /* "View.MemoryView":1339
 * 
 *     for i in range(shape[0]):
 *         if ndim == 1:             # <<<<<<<<<<<<<<
 *             if inc:
 *                 Py_INCREF((<PyObject **> data)[0])
 */
      goto __pyx_L5;
    }

    /* "View.MemoryView":1345
 *                 Py_DECREF((<PyObject **> data)[0])
 *         else:
 *             refcount_objects_in_slice(data, shape + 1, strides + 1,             # <<<<<<<<<<<<<<
 *                                       ndim - 1, inc)
 * 
 */
    /*else*/ {

      /* "View.MemoryView":1346
 *         else:
 *             refcount_objects_in_slice(data, shape + 1, strides + 1,
 *                                       ndim - 1, inc)             # <<<<<<<<<<<<<<
 * 
 *         data += strides[0]
 */
      __pyx_memoryview_refcount_objects_in_slice(__pyx_v_data, (__pyx_v_shape + 1), (__pyx_v_strides + 1), (__pyx_v_ndim - 1), __pyx_v_inc);
    }
    __pyx_L5:;

    /* "View.MemoryView":1348
 *                                       ndim - 1, inc)
 * 
 *         data += strides[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_data = (__pyx_v_data + (__pyx_v_strides[0]));
  }

  /* "View.MemoryView":1334
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice')
 * cdef void refcount_objects_in_slice(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                     Py_ssize_t *strides, int ndim, bint inc):
 *     cdef Py_ssize_t i
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":1354
 * 
 * @cname('__pyx_memoryview_slice_assign_scalar')
 * cdef void slice_assign_scalar(__Pyx_memviewslice *dst, int ndim,             # <<<<<<<<<<<<<<
 *                               size_t itemsize, void *item,
 *                               bint dtype_is_object) nogil:
 */

static void __pyx_memoryview_slice_assign_scalar(__Pyx_memviewslice *__pyx_v_dst, int __pyx_v_ndim, size_t __pyx_v_itemsize, void *__pyx_v_item, int __pyx_v_dtype_is_object) {

  /* "View.MemoryView":1357
 *                               size_t itemsize, void *item,
 *                               bint dtype_is_object) nogil:
 *     refcount_copying(dst, dtype_is_object, ndim, False)             # <<<<<<<<<<<<<<
 *     _slice_assign_scalar(dst.data, dst.shape, dst.strides, ndim,
 *                          itemsize, item)
 */
  __pyx_memoryview_refcount_copying(__pyx_v_dst, __pyx_v_dtype_is_object, __pyx_v_ndim, 0);

  /* "View.MemoryView":1358
 *                               bint dtype_is_object) nogil:
 *     refcount_copying(dst, dtype_is_object, ndim, False)
 *     _slice_assign_scalar(dst.data, dst.shape, dst.strides, ndim,             # <<<<<<<<<<<<<<
 *                          itemsize, item)
 *     refcount_copying(dst, dtype_is_object, ndim, True)
 */
  __pyx_memoryview__slice_assign_scalar(__pyx_v_dst->data, __pyx_v_dst->shape, __pyx_v_dst->strides, __pyx_v_ndim, __pyx_v_itemsize, __pyx_v_item);

  /* "View.MemoryView":1360
 *     _slice_assign_scalar(dst.data, dst.shape, dst.strides, ndim,
 *                          itemsize, item)
 *     refcount_copying(dst, dtype_is_object, ndim, True)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_memoryview_refcount_copying(__pyx_v_dst, __pyx_v_dtype_is_object, __pyx_v_ndim, 1);

  /* "View.MemoryView":1354
 * 
 * @cname('__pyx_memoryview_slice_assign_scalar')
 * cdef void slice_assign_scalar(__Pyx_memviewslice *dst, int ndim,             # <<<<<<<<<<<<<<
 *                               size_t itemsize, void *item,
 *                               bint dtype_is_object) nogil:
 */

  /* function exit code */
}

/* "View.MemoryView":1364
 * 
 * @cname('__pyx_memoryview__slice_assign_scalar')
 * cdef void _slice_assign_scalar(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                               Py_ssize_t *strides, int ndim,
 *                               size_t itemsize, void *item) nogil:
 */

static void __pyx_memoryview__slice_assign_scalar(char *__pyx_v_data, Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, int __pyx_v_ndim, size_t __pyx_v_itemsize, void *__pyx_v_item) {
  CYTHON_UNUSED Py_ssize_t __pyx_v_i;
  Py_ssize_t __pyx_v_stride;
  Py_ssize_t __pyx_v_extent;
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;

  /* "View.MemoryView":1368
 *                               size_t itemsize, void *item) nogil:
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t stride = strides[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t extent = shape[0]
 * 
 */
  __pyx_v_stride = (__pyx_v_strides[0]);

  /* "View.MemoryView":1369
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t stride = strides[0]
 *     cdef Py_ssize_t extent = shape[0]             # <<<<<<<<<<<<<<
 * 
 *     if ndim == 1:
 */
  __pyx_v_extent = (__pyx_v_shape[0]);

  /* "View.MemoryView":1371
 *     cdef Py_ssize_t extent = shape[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)
 */
  __pyx_t_1 = ((__pyx_v_ndim == 1) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1372
 * 
 *     if ndim == 1:
 *         for i in range(extent):             # <<<<<<<<<<<<<<
 *             memcpy(data, item, itemsize)
 *             data += stride
 */
    __pyx_t_2 = __pyx_v_extent;
    for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
      __pyx_v_i = __pyx_t_3;

      /* "View.MemoryView":1373
 *     if ndim == 1:
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)             # <<<<<<<<<<<<<<
 *             data += stride
 *     else:
 */
      memcpy(__pyx_v_data, __pyx_v_item, __pyx_v_itemsize);

      /* "View.MemoryView":1374
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)
 *             data += stride             # <<<<<<<<<<<<<<
 *     else:
 *         for i in range(extent):
 */
      __pyx_v_data = (__pyx_v_data + __pyx_v_stride);
    }

    /* "View.MemoryView":1371
 *     cdef Py_ssize_t extent = shape[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1376
 *             data += stride
 *     else:
 *         for i in range(extent):             # <<<<<<<<<<<<<<
 *             _slice_assign_scalar(data, shape + 1, strides + 1,
 *                                 ndim - 1, itemsize, item)
 */
  /*else*/ {
    __pyx_t_2 = __pyx_v_extent;
    for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
      __pyx_v_i = __pyx_t_3;

      /* "View.MemoryView":1377
 *     else:
 *         for i in range(extent):
 *             _slice_assign_scalar(data, shape + 1, strides + 1,             # <<<<<<<<<<<<<<
 *                                 ndim - 1, itemsize, item)
 *             data += stride
 */
      __pyx_memoryview__slice_assign_scalar(__pyx_v_data, (__pyx_v_shape + 1), (__pyx_v_strides + 1), (__pyx_v_ndim - 1), __pyx_v_itemsize, __pyx_v_item);

      /* "View.MemoryView":1379
 *             _slice_assign_scalar(data, shape + 1, strides + 1,
 *                                 ndim - 1, itemsize, item)
 *             data += stride             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_data = (__pyx_v_data + __pyx_v_stride);
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":1364
 * 
 * @cname('__pyx_memoryview__slice_assign_scalar')
 * cdef void _slice_assign_scalar(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                               Py_ssize_t *strides, int ndim,
 *                               size_t itemsize, void *item) nogil:
 */

  /* function exit code */
}

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)o);
  p->top = Py_None; Py_INCREF(Py_None);
  p->_dslist = Py_None; Py_INCREF(Py_None);
  p->_dflist = Py_None; Py_INCREF(Py_None);
  p->_command = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_6Action_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(PyObject *o) {
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action *p = (struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_6Action_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->top);
  Py_CLEAR(p->_dslist);
  Py_CLEAR(p->_dflist);
  Py_CLEAR(p->_command);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action *p = (struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)o;
  if (p->top) {
    e = (*v)(p->top, a); if (e) return e;
  }
  if (p->_dslist) {
    e = (*v)(p->_dslist, a); if (e) return e;
  }
  if (p->_dflist) {
    e = (*v)(p->_dflist, a); if (e) return e;
  }
  if (p->_command) {
    e = (*v)(p->_command, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6pytraj_8c_action_8c_action_Action(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6pytraj_8c_action_8c_action_Action *p = (struct __pyx_obj_6pytraj_8c_action_8c_action_Action *)o;
  tmp = ((PyObject*)p->top);
  p->top = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_dslist);
  p->_dslist = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_dflist);
  p->_dflist = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_command);
  p->_command = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6pytraj_8c_action_8c_action_6Action_n_frames(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6pytraj_8c_action_8c_action_6Action_8n_frames_1__get__(o);
}

static int __pyx_setprop_6pytraj_8c_action_8c_action_6Action_n_frames(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_8n_frames_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6pytraj_8c_action_8c_action_6Action__dslist(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_1__get__(o);
}

static int __pyx_setprop_6pytraj_8c_action_8c_action_6Action__dslist(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_3__set__(o, v);
  }
  else {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dslist_5__del__(o);
  }
}

static PyObject *__pyx_getprop_6pytraj_8c_action_8c_action_6Action__dflist(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_1__get__(o);
}

static int __pyx_setprop_6pytraj_8c_action_8c_action_6Action__dflist(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_3__set__(o, v);
  }
  else {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_7_dflist_5__del__(o);
  }
}

static PyObject *__pyx_getprop_6pytraj_8c_action_8c_action_6Action__command(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_1__get__(o);
}

static int __pyx_setprop_6pytraj_8c_action_8c_action_6Action__command(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_3__set__(o, v);
  }
  else {
    return __pyx_pw_6pytraj_8c_action_8c_action_6Action_8_command_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action[] = {
  {"__del__", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_7__del__, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_6__del__},
  {"read_input", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_15read_input, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_14read_input},
  {"check_topology", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_17check_topology, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_16check_topology},
  {"compute", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_19compute, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_18compute},
  {"post_process", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_21post_process, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_20post_process},
  {"_master", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_23_master, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_22_master},
  {"reset_counter", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_6Action_25reset_counter, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_6Action_24reset_counter},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6pytraj_8c_action_8c_action_Action[] = {
  {(char *)"n_frames", __pyx_getprop_6pytraj_8c_action_8c_action_6Action_n_frames, __pyx_setprop_6pytraj_8c_action_8c_action_6Action_n_frames, __pyx_k_n_frames_int, 0},
  {(char *)"_dslist", __pyx_getprop_6pytraj_8c_action_8c_action_6Action__dslist, __pyx_setprop_6pytraj_8c_action_8c_action_6Action__dslist, __pyx_k_dslist_object, 0},
  {(char *)"_dflist", __pyx_getprop_6pytraj_8c_action_8c_action_6Action__dflist, __pyx_setprop_6pytraj_8c_action_8c_action_6Action__dflist, __pyx_k_dflist_object, 0},
  {(char *)"_command", __pyx_getprop_6pytraj_8c_action_8c_action_6Action__command, __pyx_setprop_6pytraj_8c_action_8c_action_6Action__command, __pyx_k_command_object, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Action(command='', Topology top=None, DatasetList dslist=None, DataFileList dflist=<\077\077?>)\ninterface to Cpptraj's Action. For internal use.\n\n    >>> import pytraj as pt\n    >>> traj = pt.load_sample_data('tz2')\n    >>> from pytraj.c_action.c_action import Action_Radgyr\n    >>> from pytraj.datasets import DatasetList as CpptrajDataSetList\n    >>> from pytraj.datafiles import DataFileList\n    >>> dslist = CpptrajDataSetList()\n    >>> act = Action_Radgyr(command='@CA', dslist=dslist, top=traj.top)\n    >>> act.compute(traj)\n    ", /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6pytraj_8c_action_8c_action_Action, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Angle(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Angle(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Angle[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_12Action_Angle_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_12Action_Angle_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Angle = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Angle", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Angle), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Angle, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Angle, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Angle, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AreaPerMol(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AreaPerMol(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_AreaPerMol[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_17Action_AreaPerMol_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_17Action_AreaPerMol_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_AreaPerMol = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_AreaPerMol", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AreaPerMol), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AreaPerMol, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_AreaPerMol, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_AreaPerMol, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomMap(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AtomMap(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_AtomMap[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_AtomMap_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_AtomMap_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_AtomMap = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_AtomMap", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomMap), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AtomMap, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_AtomMap, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomMap, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomicCorr(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AtomicCorr(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_AtomicCorr[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_17Action_AtomicCorr_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_17Action_AtomicCorr_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_AtomicCorr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_AtomicCorr", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicCorr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AtomicCorr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_AtomicCorr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomicCorr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomicFluct(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AtomicFluct(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_AtomicFluct[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_18Action_AtomicFluct_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_18Action_AtomicFluct_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_AtomicFluct = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_AtomicFluct", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AtomicFluct), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AtomicFluct, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_AtomicFluct, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_AtomicFluct, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_AutoImage(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AutoImage(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_AutoImage[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_16Action_AutoImage_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_16Action_AutoImage_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_AutoImage = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_AutoImage", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_AutoImage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_AutoImage, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_AutoImage, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_AutoImage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Average(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Average(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Average[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Average_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Average_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Average = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Average", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Average), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Average, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Average, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Average, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Bounds(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Bounds(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Bounds[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Bounds_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Bounds_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Bounds = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Bounds", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Bounds), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Bounds, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Bounds, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Bounds, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Box(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Box(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Box[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_10Action_Box_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_10Action_Box_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Box = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Box", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Box), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Box, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Box, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Box, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Center(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Center(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Center[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Center_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Center_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Center = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Center", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Center), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Center, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Center, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Center, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Channel(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Channel(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Channel[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Channel_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Channel_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Channel = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Channel", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Channel), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Channel, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Channel, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Channel, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_CheckChirality(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_CheckChirality(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_CheckChirality[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckChirality_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_21Action_CheckChirality_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_CheckChirality = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_CheckChirality", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckChirality), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_CheckChirality, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_CheckChirality, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_CheckChirality, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_CheckStructure(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_CheckStructure(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_CheckStructure[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_21Action_CheckStructure_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_21Action_CheckStructure_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_CheckStructure = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_CheckStructure", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CheckStructure), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_CheckStructure, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_CheckStructure, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_CheckStructure, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Closest(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Closest(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Closest[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Closest_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Closest_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Closest = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Closest", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Closest), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Closest, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Closest, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Closest, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_ClusterDihedral(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_ClusterDihedral(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_ClusterDihedral[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_22Action_ClusterDihedral_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_ClusterDihedral = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_ClusterDihedral", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ClusterDihedral), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_ClusterDihedral, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_ClusterDihedral, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_ClusterDihedral, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Contacts(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Contacts(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Contacts[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_Contacts_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_Contacts_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Contacts = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Contacts", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Contacts), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Contacts, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Contacts, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Contacts, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_CreateCrd(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_CreateCrd(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_CreateCrd[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_16Action_CreateCrd_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_16Action_CreateCrd_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_CreateCrd = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_CreateCrd", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_CreateCrd), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_CreateCrd, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_CreateCrd, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_CreateCrd, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DNAionTracker(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DNAionTracker(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_DNAionTracker[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_20Action_DNAionTracker_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_20Action_DNAionTracker_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_DNAionTracker = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_DNAionTracker", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DNAionTracker), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DNAionTracker, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_DNAionTracker, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_DNAionTracker, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DSSP(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DSSP(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_DSSP[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_DSSP_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_DSSP_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_DSSP = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_DSSP", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DSSP), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DSSP, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_DSSP, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_DSSP, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Density(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Density(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Density[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Density_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Density_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Density = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Density", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Density), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Density, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Density, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Density, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Diffusion(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Diffusion(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Diffusion[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_16Action_Diffusion_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_16Action_Diffusion_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Diffusion = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Diffusion", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Diffusion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Diffusion, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Diffusion, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Diffusion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Dihedral(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Dihedral(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Dihedral[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_Dihedral_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_Dihedral_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Dihedral = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Dihedral", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dihedral), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Dihedral, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Dihedral, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Dihedral, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DihedralScan(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DihedralScan(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_DihedralScan[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_19Action_DihedralScan_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_19Action_DihedralScan_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_DihedralScan = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_DihedralScan", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DihedralScan), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DihedralScan, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_DihedralScan, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_DihedralScan, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Dipole(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Dipole(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Dipole[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Dipole_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Dipole_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Dipole = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Dipole", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Dipole), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Dipole, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Dipole, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Dipole, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_DistRmsd(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DistRmsd(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_DistRmsd[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_DistRmsd_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_DistRmsd_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_DistRmsd = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_DistRmsd", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_DistRmsd), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_DistRmsd, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_DistRmsd, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_DistRmsd, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Distance(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Distance(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Distance[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_Distance_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_Distance_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Distance = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Distance", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Distance), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Distance, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Distance, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Distance, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Energy(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Energy(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Energy[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Energy_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Energy_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Energy = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Energy", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Energy), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Energy, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Energy, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Energy, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_FilterByData(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_FilterByData(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_FilterByData[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_19Action_FilterByData_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_19Action_FilterByData_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_FilterByData = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_FilterByData", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FilterByData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_FilterByData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_FilterByData, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_FilterByData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_FixAtomOrder(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_FixAtomOrder(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_FixAtomOrder[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_19Action_FixAtomOrder_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_FixAtomOrder = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_FixAtomOrder", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_FixAtomOrder), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_FixAtomOrder, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_FixAtomOrder, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_FixAtomOrder, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Gist(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Gist(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Gist[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_Gist_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_Gist_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Gist = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Gist", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Gist), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Gist, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Gist, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Gist, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Grid(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Grid(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Grid[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_Grid_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_Grid_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Grid = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Grid", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Grid), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Grid, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Grid, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Grid, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_GridFreeEnergy(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_GridFreeEnergy(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_GridFreeEnergy[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_21Action_GridFreeEnergy_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_GridFreeEnergy = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_GridFreeEnergy", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_GridFreeEnergy), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_GridFreeEnergy, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_GridFreeEnergy, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_GridFreeEnergy, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Hbond(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Hbond(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Hbond[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_12Action_Hbond_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_12Action_Hbond_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Hbond = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Hbond", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Hbond), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Hbond, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Hbond, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Hbond, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Image(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Image(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Image[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_12Action_Image_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_12Action_Image_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Image = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Image", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Image), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Image, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Image, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Image, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Jcoupling(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Jcoupling(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Jcoupling[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_16Action_Jcoupling_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_16Action_Jcoupling_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Jcoupling = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Jcoupling", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Jcoupling), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Jcoupling, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Jcoupling, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Jcoupling, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_LESsplit(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_LESsplit(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_LESsplit[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_LESsplit_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_LESsplit_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_LESsplit = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_LESsplit", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LESsplit), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_LESsplit, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_LESsplit, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_LESsplit, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_LIE(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_LIE(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_LIE[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_10Action_LIE_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_10Action_LIE_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_LIE = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_LIE", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_LIE), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_LIE, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_LIE, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_LIE, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MakeStructure(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MakeStructure(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_MakeStructure[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_20Action_MakeStructure_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_20Action_MakeStructure_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_MakeStructure = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_MakeStructure", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MakeStructure), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MakeStructure, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_MakeStructure, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_MakeStructure, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Mask(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Mask(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Mask[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_Mask_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_Mask_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Mask = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Mask", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Mask), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Mask, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Mask, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Mask, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Matrix(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Matrix(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Matrix[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Matrix_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Matrix_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Matrix = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Matrix", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Matrix), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Matrix, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Matrix, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Matrix, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MinImage(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MinImage(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_MinImage[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_MinImage_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_MinImage_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_MinImage = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_MinImage", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MinImage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MinImage, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_MinImage, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_MinImage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Molsurf(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Molsurf(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Molsurf[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Molsurf_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Molsurf_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Molsurf = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Molsurf", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Molsurf), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Molsurf, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Molsurf, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Molsurf, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MultiDihedral(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MultiDihedral(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_MultiDihedral[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_20Action_MultiDihedral_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_20Action_MultiDihedral_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_MultiDihedral = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_MultiDihedral", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiDihedral), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MultiDihedral, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_MultiDihedral, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_MultiDihedral, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_MultiVector(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MultiVector(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_MultiVector[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_18Action_MultiVector_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_18Action_MultiVector_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_MultiVector = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_MultiVector", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_MultiVector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_MultiVector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_MultiVector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_MultiVector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_NAstruct(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_NAstruct(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_NAstruct[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_NAstruct_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_NAstruct_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_NAstruct = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_NAstruct", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NAstruct), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_NAstruct, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_NAstruct, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_NAstruct, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_NMRrst(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_NMRrst(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_NMRrst[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_NMRrst_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_NMRrst_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_NMRrst = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_NMRrst", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NMRrst), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_NMRrst, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_NMRrst, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_NMRrst, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_NativeContacts(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_NativeContacts(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_NativeContacts[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_21Action_NativeContacts_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_21Action_NativeContacts_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_NativeContacts = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_NativeContacts", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_NativeContacts), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_NativeContacts, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_NativeContacts, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_NativeContacts, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_OrderParameter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_OrderParameter(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_OrderParameter[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_21Action_OrderParameter_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_21Action_OrderParameter_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_OrderParameter = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_OrderParameter", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_OrderParameter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_OrderParameter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_OrderParameter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_OrderParameter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Outtraj(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Outtraj(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Outtraj[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Outtraj_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Outtraj_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Outtraj = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Outtraj", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Outtraj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Outtraj, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Outtraj, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Outtraj, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_PairDist(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_PairDist(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_PairDist[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_PairDist_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_PairDist_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_PairDist = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_PairDist", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_PairDist), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_PairDist, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_PairDist, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_PairDist, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Pairwise(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Pairwise(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Pairwise[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_15Action_Pairwise_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_15Action_Pairwise_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Pairwise = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Pairwise", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pairwise), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Pairwise, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Pairwise, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Pairwise, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Principal(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Principal(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Principal[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_16Action_Principal_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_16Action_Principal_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Principal = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Principal", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Principal), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Principal, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Principal, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Principal, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Projection(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Projection(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Projection[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_17Action_Projection_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_17Action_Projection_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Projection = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Projection", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Projection), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Projection, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Projection, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Projection, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Pucker(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Pucker(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Pucker[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Pucker_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Pucker_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Pucker = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Pucker", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Pucker), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Pucker, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Pucker, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Pucker, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Radgyr(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Radgyr(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Radgyr[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radgyr_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Radgyr_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Radgyr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Radgyr", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radgyr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Radgyr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Radgyr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Radgyr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Radial(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Radial(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Radial[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Radial_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Radial_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Radial = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Radial", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Radial), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Radial, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Radial, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Radial, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_RandomizeIons(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_RandomizeIons(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_RandomizeIons[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_20Action_RandomizeIons_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_20Action_RandomizeIons_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_RandomizeIons = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_RandomizeIons", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RandomizeIons), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_RandomizeIons, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_RandomizeIons, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_RandomizeIons, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_ReplicateCell(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_ReplicateCell(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_ReplicateCell[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_20Action_ReplicateCell_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_20Action_ReplicateCell_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_ReplicateCell = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_ReplicateCell", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_ReplicateCell), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_ReplicateCell, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_ReplicateCell, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_ReplicateCell, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Rmsd(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Rmsd(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Rmsd[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_Rmsd_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_Rmsd_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Rmsd = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Rmsd", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rmsd), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Rmsd, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Rmsd, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Rmsd, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Rotate(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Rotate(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Rotate[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Rotate_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Rotate_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Rotate = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Rotate", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Rotate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Rotate, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Rotate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Rotate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_RunningAvg(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_RunningAvg(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_RunningAvg[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_17Action_RunningAvg_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_17Action_RunningAvg_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_RunningAvg = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_RunningAvg", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_RunningAvg), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_RunningAvg, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_RunningAvg, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_RunningAvg, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_STFC_Diffusion(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_STFC_Diffusion(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_STFC_Diffusion[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_21Action_STFC_Diffusion_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_STFC_Diffusion = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_STFC_Diffusion", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_STFC_Diffusion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_STFC_Diffusion, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_STFC_Diffusion, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_STFC_Diffusion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Scale(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Scale(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Scale[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_12Action_Scale_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_12Action_Scale_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Scale = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Scale", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Scale), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Scale, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Scale, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Scale, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_SetVelocity(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_SetVelocity(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_SetVelocity[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_18Action_SetVelocity_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_18Action_SetVelocity_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_SetVelocity = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_SetVelocity", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SetVelocity), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_SetVelocity, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_SetVelocity, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_SetVelocity, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Spam(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Spam(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Spam[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_Spam_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_Spam_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Spam = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Spam", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Spam), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Spam, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Spam, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Spam, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Strip(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Strip(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Strip[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_12Action_Strip_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_12Action_Strip_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Strip = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Strip", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Strip), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Strip, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Strip, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Strip, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Surf(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Surf(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Surf[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_11Action_Surf_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_11Action_Surf_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Surf = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Surf", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Surf), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Surf, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Surf, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Surf, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_SymmetricRmsd(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_SymmetricRmsd(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_SymmetricRmsd[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_20Action_SymmetricRmsd_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_SymmetricRmsd = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_SymmetricRmsd", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_SymmetricRmsd), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_SymmetricRmsd, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_SymmetricRmsd, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_SymmetricRmsd, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Temperature(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Temperature(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Temperature[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_18Action_Temperature_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_18Action_Temperature_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Temperature = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Temperature", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Temperature), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Temperature, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Temperature, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Temperature, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Translate(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Translate(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Translate[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_16Action_Translate_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_16Action_Translate_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Translate = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Translate", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Translate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Translate, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Translate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Translate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Unwrap(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Unwrap(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Unwrap[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Unwrap_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Unwrap_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Unwrap = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Unwrap", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unwrap), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Unwrap, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Unwrap, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Unwrap, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Vector(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Vector(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Vector[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Vector_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Vector_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Vector = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Vector", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Vector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Vector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Vector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Vector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_23Action_VelocityAutoCorr_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_VelocityAutoCorr", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Volmap(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Volmap(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Volmap[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volmap_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Volmap_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Volmap = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Volmap", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volmap), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Volmap, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Volmap, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Volmap, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Volume(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Volume(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Volume[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_13Action_Volume_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_13Action_Volume_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Volume = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Volume", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Volume), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Volume, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Volume, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Volume, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Watershell(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Watershell(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Watershell[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_17Action_Watershell_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_17Action_Watershell_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Watershell = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Watershell", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Watershell), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Watershell, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Watershell, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Watershell, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6pytraj_8c_action_8c_action_Action_Unstrip(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6pytraj_8c_action_8c_action_Action(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Unstrip(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action(o);
}

static PyMethodDef __pyx_methods_6pytraj_8c_action_8c_action_Action_Unstrip[] = {
  {"help", (PyCFunction)__pyx_pw_6pytraj_8c_action_8c_action_14Action_Unstrip_5help, METH_NOARGS, __pyx_doc_6pytraj_8c_action_8c_action_14Action_Unstrip_4help},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6pytraj_8c_action_8c_action_Action_Unstrip = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Action_Unstrip", /*tp_name*/
  sizeof(struct __pyx_obj_6pytraj_8c_action_8c_action_Action_Unstrip), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6pytraj_8c_action_8c_action_Action_Unstrip, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_11__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_13__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_9__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6pytraj_8c_action_8c_action_Action, /*tp_traverse*/
  __pyx_tp_clear_6pytraj_8c_action_8c_action_Action, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6pytraj_8c_action_8c_action_Action_Unstrip, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6pytraj_8c_action_8c_action_6Action_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6pytraj_8c_action_8c_action_Action_Unstrip, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_array(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_array_obj *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_array_obj *)o);
  p->mode = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_format = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_array___cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_array(PyObject *o) {
  struct __pyx_array_obj *p = (struct __pyx_array_obj *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_array___dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->mode);
  Py_CLEAR(p->_format);
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_array(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_array(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_array___setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_tp_getattro_array(PyObject *o, PyObject *n) {
  PyObject *v = PyObject_GenericGetAttr(o, n);
  if (!v && PyErr_ExceptionMatches(PyExc_AttributeError)) {
    PyErr_Clear();
    v = __pyx_array___getattr__(o, n);
  }
  return v;
}

static PyObject *__pyx_getprop___pyx_array_memview(PyObject *o, CYTHON_UNUSED void *x) {
  return get_memview(o);
}

static PyMethodDef __pyx_methods_array[] = {
  {"__getattr__", (PyCFunction)__pyx_array___getattr__, METH_O|METH_COEXIST, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_array[] = {
  {(char *)"memview", __pyx_getprop___pyx_array_memview, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_array = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_array, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_array = {
  0, /*mp_length*/
  __pyx_array___getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_array, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_array = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  __pyx_array_getbuffer, /*bf_getbuffer*/
  0, /*bf_releasebuffer*/
};

static PyTypeObject __pyx_type___pyx_array = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.array", /*tp_name*/
  sizeof(struct __pyx_array_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_array, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_array, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_array, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  __pyx_tp_getattro_array, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_array, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_array, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_array, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_array, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_Enum(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_MemviewEnum_obj *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_MemviewEnum_obj *)o);
  p->name = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_Enum(PyObject *o) {
  struct __pyx_MemviewEnum_obj *p = (struct __pyx_MemviewEnum_obj *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->name);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_Enum(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_MemviewEnum_obj *p = (struct __pyx_MemviewEnum_obj *)o;
  if (p->name) {
    e = (*v)(p->name, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_Enum(PyObject *o) {
  PyObject* tmp;
  struct __pyx_MemviewEnum_obj *p = (struct __pyx_MemviewEnum_obj *)o;
  tmp = ((PyObject*)p->name);
  p->name = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_Enum[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type___pyx_MemviewEnum = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.Enum", /*tp_name*/
  sizeof(struct __pyx_MemviewEnum_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_Enum, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_MemviewEnum___repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_Enum, /*tp_traverse*/
  __pyx_tp_clear_Enum, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_Enum, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_MemviewEnum___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_Enum, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_memoryview __pyx_vtable_memoryview;

static PyObject *__pyx_tp_new_memoryview(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_memoryview_obj *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_memoryview_obj *)o);
  p->__pyx_vtab = __pyx_vtabptr_memoryview;
  p->obj = Py_None; Py_INCREF(Py_None);
  p->_size = Py_None; Py_INCREF(Py_None);
  p->_array_interface = Py_None; Py_INCREF(Py_None);
  p->view.obj = NULL;
  if (unlikely(__pyx_memoryview___cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_memoryview(PyObject *o) {
  struct __pyx_memoryview_obj *p = (struct __pyx_memoryview_obj *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_memoryview___dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->obj);
  Py_CLEAR(p->_size);
  Py_CLEAR(p->_array_interface);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_memoryview(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_memoryview_obj *p = (struct __pyx_memoryview_obj *)o;
  if (p->obj) {
    e = (*v)(p->obj, a); if (e) return e;
  }
  if (p->_size) {
    e = (*v)(p->_size, a); if (e) return e;
  }
  if (p->_array_interface) {
    e = (*v)(p->_array_interface, a); if (e) return e;
  }
  if (p->view.obj) {
    e = (*v)(p->view.obj, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_memoryview(PyObject *o) {
  PyObject* tmp;
  struct __pyx_memoryview_obj *p = (struct __pyx_memoryview_obj *)o;
  tmp = ((PyObject*)p->obj);
  p->obj = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_size);
  p->_size = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_array_interface);
  p->_array_interface = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  Py_CLEAR(p->view.obj);
  return 0;
}
static PyObject *__pyx_sq_item_memoryview(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_memoryview(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_memoryview___setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_getprop___pyx_memoryview_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_transpose(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_base(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview__get__base(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_shape(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_shape(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_strides(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_strides(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_suboffsets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_suboffsets(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_ndim(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_ndim(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_itemsize(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_itemsize(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_nbytes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_nbytes(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryview_get_size(o);
}

static PyMethodDef __pyx_methods_memoryview[] = {
  {"is_c_contig", (PyCFunction)__pyx_memoryview_is_c_contig, METH_NOARGS, 0},
  {"is_f_contig", (PyCFunction)__pyx_memoryview_is_f_contig, METH_NOARGS, 0},
  {"copy", (PyCFunction)__pyx_memoryview_copy, METH_NOARGS, 0},
  {"copy_fortran", (PyCFunction)__pyx_memoryview_copy_fortran, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_memoryview[] = {
  {(char *)"T", __pyx_getprop___pyx_memoryview_T, 0, 0, 0},
  {(char *)"base", __pyx_getprop___pyx_memoryview_base, 0, 0, 0},
  {(char *)"shape", __pyx_getprop___pyx_memoryview_shape, 0, 0, 0},
  {(char *)"strides", __pyx_getprop___pyx_memoryview_strides, 0, 0, 0},
  {(char *)"suboffsets", __pyx_getprop___pyx_memoryview_suboffsets, 0, 0, 0},
  {(char *)"ndim", __pyx_getprop___pyx_memoryview_ndim, 0, 0, 0},
  {(char *)"itemsize", __pyx_getprop___pyx_memoryview_itemsize, 0, 0, 0},
  {(char *)"nbytes", __pyx_getprop___pyx_memoryview_nbytes, 0, 0, 0},
  {(char *)"size", __pyx_getprop___pyx_memoryview_size, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_memoryview = {
  __pyx_memoryview___len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_memoryview, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_memoryview = {
  __pyx_memoryview___len__, /*mp_length*/
  __pyx_memoryview___getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_memoryview, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_memoryview = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  __pyx_memoryview_getbuffer, /*bf_getbuffer*/
  0, /*bf_releasebuffer*/
};

static PyTypeObject __pyx_type___pyx_memoryview = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action.memoryview", /*tp_name*/
  sizeof(struct __pyx_memoryview_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_memoryview, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_memoryview___repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_memoryview, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_memoryview, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_memoryview___str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_memoryview, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_memoryview, /*tp_traverse*/
  __pyx_tp_clear_memoryview, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_memoryview, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_memoryview, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_memoryview, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct__memoryviewslice __pyx_vtable__memoryviewslice;

static PyObject *__pyx_tp_new__memoryviewslice(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_memoryviewslice_obj *p;
  PyObject *o = __pyx_tp_new_memoryview(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_memoryviewslice_obj *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_memoryview*)__pyx_vtabptr__memoryviewslice;
  p->from_object = Py_None; Py_INCREF(Py_None);
  p->from_slice.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc__memoryviewslice(PyObject *o) {
  struct __pyx_memoryviewslice_obj *p = (struct __pyx_memoryviewslice_obj *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_memoryviewslice___dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->from_object);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_memoryview(o);
}

static int __pyx_tp_traverse__memoryviewslice(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_memoryviewslice_obj *p = (struct __pyx_memoryviewslice_obj *)o;
  e = __pyx_tp_traverse_memoryview(o, v, a); if (e) return e;
  if (p->from_object) {
    e = (*v)(p->from_object, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear__memoryviewslice(PyObject *o) {
  PyObject* tmp;
  struct __pyx_memoryviewslice_obj *p = (struct __pyx_memoryviewslice_obj *)o;
  __pyx_tp_clear_memoryview(o);
  tmp = ((PyObject*)p->from_object);
  p->from_object = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  __PYX_XDEC_MEMVIEW(&p->from_slice, 1);
  return 0;
}

static PyObject *__pyx_getprop___pyx_memoryviewslice_base(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_memoryviewslice__get__base(o);
}

static PyMethodDef __pyx_methods__memoryviewslice[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets__memoryviewslice[] = {
  {(char *)"base", __pyx_getprop___pyx_memoryviewslice_base, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type___pyx_memoryviewslice = {
  PyVarObject_HEAD_INIT(0, 0)
  "pytraj.c_action.c_action._memoryviewslice", /*tp_name*/
  sizeof(struct __pyx_memoryviewslice_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc__memoryviewslice, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_memoryview___repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_memoryview___str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Internal class for passing memoryview slices to Python", /*tp_doc*/
  __pyx_tp_traverse__memoryviewslice, /*tp_traverse*/
  __pyx_tp_clear__memoryviewslice, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods__memoryviewslice, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets__memoryviewslice, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new__memoryviewslice, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "c_action",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_n_s_ASCII, __pyx_k_ASCII, sizeof(__pyx_k_ASCII), 0, 0, 1, 1},
  {&__pyx_n_s_Action, __pyx_k_Action, sizeof(__pyx_k_Action), 0, 0, 1, 1},
  {&__pyx_kp_u_Action___call___line_57, __pyx_k_Action___call___line_57, sizeof(__pyx_k_Action___call___line_57), 0, 1, 0, 0},
  {&__pyx_kp_s_Buffer_view_does_not_expose_stri, __pyx_k_Buffer_view_does_not_expose_stri, sizeof(__pyx_k_Buffer_view_does_not_expose_stri), 0, 0, 1, 0},
  {&__pyx_kp_s_Can_only_create_a_buffer_that_is, __pyx_k_Can_only_create_a_buffer_that_is, sizeof(__pyx_k_Can_only_create_a_buffer_that_is), 0, 0, 1, 0},
  {&__pyx_kp_s_Cannot_index_with_type_s, __pyx_k_Cannot_index_with_type_s, sizeof(__pyx_k_Cannot_index_with_type_s), 0, 0, 1, 0},
  {&__pyx_n_s_Ellipsis, __pyx_k_Ellipsis, sizeof(__pyx_k_Ellipsis), 0, 0, 1, 1},
  {&__pyx_kp_s_Empty_shape_tuple_for_cython_arr, __pyx_k_Empty_shape_tuple_for_cython_arr, sizeof(__pyx_k_Empty_shape_tuple_for_cython_arr), 0, 0, 1, 0},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_kp_s_Indirect_dimensions_not_supporte, __pyx_k_Indirect_dimensions_not_supporte, sizeof(__pyx_k_Indirect_dimensions_not_supporte), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_mode_expected_c_or_fortr, __pyx_k_Invalid_mode_expected_c_or_fortr, sizeof(__pyx_k_Invalid_mode_expected_c_or_fortr), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_shape_in_axis_d_d, __pyx_k_Invalid_shape_in_axis_d_d, sizeof(__pyx_k_Invalid_shape_in_axis_d_d), 0, 0, 1, 0},
  {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
  {&__pyx_kp_s_MemoryView_of_r_at_0x_x, __pyx_k_MemoryView_of_r_at_0x_x, sizeof(__pyx_k_MemoryView_of_r_at_0x_x), 0, 0, 1, 0},
  {&__pyx_kp_s_MemoryView_of_r_object, __pyx_k_MemoryView_of_r_object, sizeof(__pyx_k_MemoryView_of_r_object), 0, 0, 1, 0},
  {&__pyx_n_b_O, __pyx_k_O, sizeof(__pyx_k_O), 0, 0, 0, 1},
  {&__pyx_kp_s_Out_of_bounds_on_buffer_access_a, __pyx_k_Out_of_bounds_on_buffer_access_a, sizeof(__pyx_k_Out_of_bounds_on_buffer_access_a), 0, 0, 1, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_kp_s_Unable_to_convert_item_to_object, __pyx_k_Unable_to_convert_item_to_object, sizeof(__pyx_k_Unable_to_convert_item_to_object), 0, 0, 1, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_allocate_buffer, __pyx_k_allocate_buffer, sizeof(__pyx_k_allocate_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_base, __pyx_k_base, sizeof(__pyx_k_base), 0, 0, 1, 1},
  {&__pyx_n_s_box, __pyx_k_box, sizeof(__pyx_k_box), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_u_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 1, 0, 1},
  {&__pyx_n_s_check_topology, __pyx_k_check_topology, sizeof(__pyx_k_check_topology), 0, 0, 1, 1},
  {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
  {&__pyx_n_s_command, __pyx_k_command, sizeof(__pyx_k_command), 0, 0, 1, 1},
  {&__pyx_n_s_compute, __pyx_k_compute, sizeof(__pyx_k_compute), 0, 0, 1, 1},
  {&__pyx_kp_s_contiguous_and_direct, __pyx_k_contiguous_and_direct, sizeof(__pyx_k_contiguous_and_direct), 0, 0, 1, 0},
  {&__pyx_kp_s_contiguous_and_indirect, __pyx_k_contiguous_and_indirect, sizeof(__pyx_k_contiguous_and_indirect), 0, 0, 1, 0},
  {&__pyx_n_s_crdinfo, __pyx_k_crdinfo, sizeof(__pyx_k_crdinfo), 0, 0, 1, 1},
  {&__pyx_n_s_current_frame, __pyx_k_current_frame, sizeof(__pyx_k_current_frame), 0, 0, 1, 1},
  {&__pyx_n_s_debug, __pyx_k_debug, sizeof(__pyx_k_debug), 0, 0, 1, 1},
  {&__pyx_n_s_dflist, __pyx_k_dflist, sizeof(__pyx_k_dflist), 0, 0, 1, 1},
  {&__pyx_n_s_dslist, __pyx_k_dslist, sizeof(__pyx_k_dslist), 0, 0, 1, 1},
  {&__pyx_n_s_dtype_is_object, __pyx_k_dtype_is_object, sizeof(__pyx_k_dtype_is_object), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_error, __pyx_k_error, sizeof(__pyx_k_error), 0, 0, 1, 1},
  {&__pyx_kp_s_failed_to_setup_action, __pyx_k_failed_to_setup_action, sizeof(__pyx_k_failed_to_setup_action), 0, 0, 1, 0},
  {&__pyx_n_s_flags, __pyx_k_flags, sizeof(__pyx_k_flags), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_fortran, __pyx_k_fortran, sizeof(__pyx_k_fortran), 0, 0, 1, 1},
  {&__pyx_n_u_fortran, __pyx_k_fortran, sizeof(__pyx_k_fortran), 0, 1, 0, 1},
  {&__pyx_kp_u_from_pytraj_import_traj_io_load, __pyx_k_from_pytraj_import_traj_io_load, sizeof(__pyx_k_from_pytraj_import_traj_io_load), 0, 1, 0, 0},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_get_new_frame, __pyx_k_get_new_frame, sizeof(__pyx_k_get_new_frame), 0, 0, 1, 1},
  {&__pyx_n_s_get_new_top, __pyx_k_get_new_top, sizeof(__pyx_k_get_new_top), 0, 0, 1, 1},
  {&__pyx_kp_s_got_differing_extents_in_dimensi, __pyx_k_got_differing_extents_in_dimensi, sizeof(__pyx_k_got_differing_extents_in_dimensi), 0, 0, 1, 0},
  {&__pyx_n_s_has_force, __pyx_k_has_force, sizeof(__pyx_k_has_force), 0, 0, 1, 1},
  {&__pyx_n_s_has_time, __pyx_k_has_time, sizeof(__pyx_k_has_time), 0, 0, 1, 1},
  {&__pyx_n_s_has_velocity, __pyx_k_has_velocity, sizeof(__pyx_k_has_velocity), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_idx, __pyx_k_idx, sizeof(__pyx_k_idx), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_kp_s_index_is_out_of_range, __pyx_k_index_is_out_of_range, sizeof(__pyx_k_index_is_out_of_range), 0, 0, 1, 0},
  {&__pyx_n_s_is_generator, __pyx_k_is_generator, sizeof(__pyx_k_is_generator), 0, 0, 1, 1},
  {&__pyx_n_s_itemsize, __pyx_k_itemsize, sizeof(__pyx_k_itemsize), 0, 0, 1, 1},
  {&__pyx_kp_s_itemsize_0_for_cython_array, __pyx_k_itemsize_0_for_cython_array, sizeof(__pyx_k_itemsize_0_for_cython_array), 0, 0, 1, 0},
  {&__pyx_n_s_iterframe_master, __pyx_k_iterframe_master, sizeof(__pyx_k_iterframe_master), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_makesureABC, __pyx_k_makesureABC, sizeof(__pyx_k_makesureABC), 0, 0, 1, 1},
  {&__pyx_n_s_master, __pyx_k_master, sizeof(__pyx_k_master), 0, 0, 1, 1},
  {&__pyx_n_s_memview, __pyx_k_memview, sizeof(__pyx_k_memview), 0, 0, 1, 1},
  {&__pyx_n_s_mode, __pyx_k_mode, sizeof(__pyx_k_mode), 0, 0, 1, 1},
  {&__pyx_n_s_n_frames_t, __pyx_k_n_frames_t, sizeof(__pyx_k_n_frames_t), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
  {&__pyx_n_s_obj, __pyx_k_obj, sizeof(__pyx_k_obj), 0, 0, 1, 1},
  {&__pyx_n_s_pack, __pyx_k_pack, sizeof(__pyx_k_pack), 0, 0, 1, 1},
  {&__pyx_n_s_post_process, __pyx_k_post_process, sizeof(__pyx_k_post_process), 0, 0, 1, 1},
  {&__pyx_kp_s_pytraj_actions_CpptrajActions_s, __pyx_k_pytraj_actions_CpptrajActions_s, sizeof(__pyx_k_pytraj_actions_CpptrajActions_s), 0, 0, 1, 0},
  {&__pyx_n_s_pytraj_decorators, __pyx_k_pytraj_decorators, sizeof(__pyx_k_pytraj_decorators), 0, 0, 1, 1},
  {&__pyx_n_s_pytraj_externals_six, __pyx_k_pytraj_externals_six, sizeof(__pyx_k_pytraj_externals_six), 0, 0, 1, 1},
  {&__pyx_n_s_pytraj_shared_methods, __pyx_k_pytraj_shared_methods, sizeof(__pyx_k_pytraj_shared_methods), 0, 0, 1, 1},
  {&__pyx_n_s_pytraj_utils, __pyx_k_pytraj_utils, sizeof(__pyx_k_pytraj_utils), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_getbuffer, __pyx_k_pyx_getbuffer, sizeof(__pyx_k_pyx_getbuffer), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_read_input, __pyx_k_read_input, sizeof(__pyx_k_read_input), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
  {&__pyx_n_s_step, __pyx_k_step, sizeof(__pyx_k_step), 0, 0, 1, 1},
  {&__pyx_n_s_stop, __pyx_k_stop, sizeof(__pyx_k_stop), 0, 0, 1, 1},
  {&__pyx_n_s_str, __pyx_k_str, sizeof(__pyx_k_str), 0, 0, 1, 1},
  {&__pyx_kp_s_strided_and_direct, __pyx_k_strided_and_direct, sizeof(__pyx_k_strided_and_direct), 0, 0, 1, 0},
  {&__pyx_kp_s_strided_and_direct_or_indirect, __pyx_k_strided_and_direct_or_indirect, sizeof(__pyx_k_strided_and_direct_or_indirect), 0, 0, 1, 0},
  {&__pyx_kp_s_strided_and_indirect, __pyx_k_strided_and_indirect, sizeof(__pyx_k_strided_and_indirect), 0, 0, 1, 0},
  {&__pyx_n_s_string_types, __pyx_k_string_types, sizeof(__pyx_k_string_types), 0, 0, 1, 1},
  {&__pyx_n_s_struct, __pyx_k_struct, sizeof(__pyx_k_struct), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_top, __pyx_k_top, sizeof(__pyx_k_top), 0, 0, 1, 1},
  {&__pyx_kp_s_unable_to_allocate_array_data, __pyx_k_unable_to_allocate_array_data, sizeof(__pyx_k_unable_to_allocate_array_data), 0, 0, 1, 0},
  {&__pyx_kp_s_unable_to_allocate_shape_and_str, __pyx_k_unable_to_allocate_shape_and_str, sizeof(__pyx_k_unable_to_allocate_shape_and_str), 0, 0, 1, 0},
  {&__pyx_n_s_unpack, __pyx_k_unpack, sizeof(__pyx_k_unpack), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_Ellipsis = __Pyx_GetBuiltinName(__pyx_n_s_Ellipsis); if (!__pyx_builtin_Ellipsis) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_id = __Pyx_GetBuiltinName(__pyx_n_s_id); if (!__pyx_builtin_id) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pytraj/c_action/c_action.pyx":102
 *         if i_fail != OK:
 *             # check before compute to avoid segfault
 *             raise ValueError("")             # <<<<<<<<<<<<<<
 *         else:
 *             return i_fail
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "pytraj/c_action/c_action.pyx":124
 * 
 *         box = crdinfo.get('box', top.box)
 *         has_velocity = crdinfo.get('has_velocity', False)             # <<<<<<<<<<<<<<
 *         has_time = crdinfo.get('has_time', False)
 *         has_force = crdinfo.get('has_force', False)
 */
  __pyx_tuple__9 = PyTuple_Pack(2, __pyx_n_s_has_velocity, Py_False); if (unlikely(!__pyx_tuple__9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "pytraj/c_action/c_action.pyx":125
 *         box = crdinfo.get('box', top.box)
 *         has_velocity = crdinfo.get('has_velocity', False)
 *         has_time = crdinfo.get('has_time', False)             # <<<<<<<<<<<<<<
 *         has_force = crdinfo.get('has_force', False)
 * 
 */
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_n_s_has_time, Py_False); if (unlikely(!__pyx_tuple__10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "pytraj/c_action/c_action.pyx":126
 *         has_velocity = crdinfo.get('has_velocity', False)
 *         has_time = crdinfo.get('has_time', False)
 *         has_force = crdinfo.get('has_force', False)             # <<<<<<<<<<<<<<
 * 
 *         crdinfo_ = CoordinateInfo(box.thisptr[0], has_velocity, has_time, has_force)
 */
  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_n_s_has_force, Py_False); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "pytraj/c_action/c_action.pyx":136
 *             # cpptraj have a bunch of options, so we only check if there is
 *             # ERR
 *             raise RuntimeError('failed to setup action')             # <<<<<<<<<<<<<<
 * 
 *         if get_new_top:
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_failed_to_setup_action); if (unlikely(!__pyx_tuple__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "frame.pxd":130
 *         idx = size + idx
 *         if idx < 0:
 *             raise ValueError("index is out of range")             # <<<<<<<<<<<<<<
 *     if idx >= size:
 *         raise ValueError("index is out of range")
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_index_is_out_of_range); if (unlikely(!__pyx_tuple__17)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "frame.pxd":132
 *             raise ValueError("index is out of range")
 *     if idx >= size:
 *         raise ValueError("index is out of range")             # <<<<<<<<<<<<<<
 *     return idx
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_index_is_out_of_range); if (unlikely(!__pyx_tuple__18)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "View.MemoryView":129
 * 
 *         if not self.ndim:
 *             raise ValueError("Empty shape tuple for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if itemsize <= 0:
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_Empty_shape_tuple_for_cython_arr); if (unlikely(!__pyx_tuple__19)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "View.MemoryView":132
 * 
 *         if itemsize <= 0:
 *             raise ValueError("itemsize <= 0 for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(format, bytes):
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_itemsize_0_for_cython_array); if (unlikely(!__pyx_tuple__20)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "View.MemoryView":135
 * 
 *         if not isinstance(format, bytes):
 *             format = format.encode('ASCII')             # <<<<<<<<<<<<<<
 *         self._format = format  # keep a reference to the byte string
 *         self.format = self._format
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_n_s_ASCII); if (unlikely(!__pyx_tuple__21)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "View.MemoryView":144
 * 
 *         if not self._shape:
 *             raise MemoryError("unable to allocate shape and strides.")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_unable_to_allocate_shape_and_str); if (unlikely(!__pyx_tuple__22)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "View.MemoryView":172
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:
 *                 raise MemoryError("unable to allocate array data.")             # <<<<<<<<<<<<<<
 * 
 *             if self.dtype_is_object:
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_unable_to_allocate_array_data); if (unlikely(!__pyx_tuple__23)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "View.MemoryView":188
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")             # <<<<<<<<<<<<<<
 *         info.buf = self.data
 *         info.len = self.len
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_Can_only_create_a_buffer_that_is); if (unlikely(!__pyx_tuple__24)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "View.MemoryView":447
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 *             raise ValueError("Unable to convert item to object")             # <<<<<<<<<<<<<<
 *         else:
 *             if len(self.view.format) == 1:
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_Unable_to_convert_item_to_object); if (unlikely(!__pyx_tuple__25)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "View.MemoryView":523
 *             if self.view.strides == NULL:
 * 
 *                 raise ValueError("Buffer view does not expose strides")             # <<<<<<<<<<<<<<
 * 
 *             return tuple([stride for stride in self.view.strides[:self.view.ndim]])
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_Buffer_view_does_not_expose_stri); if (unlikely(!__pyx_tuple__26)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "View.MemoryView":531
 *         def __get__(self):
 *             if self.view.suboffsets == NULL:
 *                 return (-1,) * self.view.ndim             # <<<<<<<<<<<<<<
 * 
 *             return tuple([suboffset for suboffset in self.view.suboffsets[:self.view.ndim]])
 */
  __pyx_tuple__27 = PyTuple_New(1); if (unlikely(!__pyx_tuple__27)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_INCREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_tuple__27, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "View.MemoryView":640
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))             # <<<<<<<<<<<<<<
 *                 seen_ellipsis = True
 *             else:
 */
  __pyx_slice__28 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__28)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_slice__28);
  __Pyx_GIVEREF(__pyx_slice__28);

  /* "View.MemoryView":643
 *                 seen_ellipsis = True
 *             else:
 *                 result.append(slice(None))             # <<<<<<<<<<<<<<
 *             have_slices = True
 *         else:
 */
  __pyx_slice__29 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__29)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_slice__29);
  __Pyx_GIVEREF(__pyx_slice__29);

  /* "View.MemoryView":654
 *     nslices = ndim - len(result)
 *     if nslices:
 *         result.extend([slice(None)] * nslices)             # <<<<<<<<<<<<<<
 * 
 *     return have_slices or nslices, tuple(result)
 */
  __pyx_slice__30 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__30)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_slice__30);
  __Pyx_GIVEREF(__pyx_slice__30);

  /* "View.MemoryView":661
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 *             raise ValueError("Indirect dimensions not supported")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_s_Indirect_dimensions_not_supporte); if (unlikely(!__pyx_tuple__31)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "pytraj/c_action/c_action.pyx":66
 *         return self._master(*args, **kwd)
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def read_input(self, command='',
 *                    top=Topology(),
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_n_s_Action); if (unlikely(!__pyx_tuple__32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "pytraj/c_action/c_action.pyx":106
 *             return i_fail
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def check_topology(self, Topology top=Topology(), crdinfo={}, n_frames_t=0, get_new_top=False):
 *         """pass coordinate_info
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_n_s_Action); if (unlikely(!__pyx_tuple__33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "pytraj/c_action/c_action.pyx":143
 *             return new_top
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def compute(self, current_frame=None, int idx=0, get_new_frame=False):
 *         """Perform action on Frame
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_n_s_Action); if (unlikely(!__pyx_tuple__34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "pytraj/c_action/c_action.pyx":173
 *                 self.compute(frame, idx=idx)
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def post_process(self):
 *         self.baseptr.Print()
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_n_s_Action); if (unlikely(!__pyx_tuple__35)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "View.MemoryView":278
 *         return self.name
 * 
 * cdef generic = Enum("<strided and direct or indirect>")             # <<<<<<<<<<<<<<
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_strided_and_direct_or_indirect); if (unlikely(!__pyx_tuple__36)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "View.MemoryView":279
 * 
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default             # <<<<<<<<<<<<<<
 * cdef indirect = Enum("<strided and indirect>")
 * 
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_s_strided_and_direct); if (unlikely(!__pyx_tuple__37)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "View.MemoryView":280
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_s_strided_and_indirect); if (unlikely(!__pyx_tuple__38)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "View.MemoryView":283
 * 
 * 
 * cdef contiguous = Enum("<contiguous and direct>")             # <<<<<<<<<<<<<<
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")
 * 
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s_contiguous_and_direct); if (unlikely(!__pyx_tuple__39)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "View.MemoryView":284
 * 
 * cdef contiguous = Enum("<contiguous and direct>")
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_s_contiguous_and_indirect); if (unlikely(!__pyx_tuple__40)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initc_action(void); /*proto*/
PyMODINIT_FUNC initc_action(void)
#else
PyMODINIT_FUNC PyInit_c_action(void); /*proto*/
PyMODINIT_FUNC PyInit_c_action(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_c_action(void)", 0);
  if (__Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("c_action", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_pytraj__c_action__c_action) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "pytraj.c_action.c_action")) {
      if (unlikely(PyDict_SetItemString(modules, "pytraj.c_action.c_action", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  generic = Py_None; Py_INCREF(Py_None);
  strided = Py_None; Py_INCREF(Py_None);
  indirect = Py_None; Py_INCREF(Py_None);
  contiguous = Py_None; Py_INCREF(Py_None);
  indirect_contiguous = Py_None; Py_INCREF(Py_None);
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action, "__call__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6pytraj_8c_action_8c_action_6Action_12__call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6pytraj_8c_action_8c_action_6Action_12__call__.doc = __pyx_doc_6pytraj_8c_action_8c_action_6Action_12__call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6pytraj_8c_action_8c_action_6Action_12__call__;
    }
  }
  #endif
  if (PyObject_SetAttrString(__pyx_m, "Action", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action = &__pyx_type_6pytraj_8c_action_8c_action_Action;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Angle.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Angle) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Angle.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Angle", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Angle) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Angle = &__pyx_type_6pytraj_8c_action_8c_action_Action_Angle;
  __pyx_type_6pytraj_8c_action_8c_action_Action_AreaPerMol.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_AreaPerMol) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_AreaPerMol.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_AreaPerMol", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_AreaPerMol) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_AreaPerMol = &__pyx_type_6pytraj_8c_action_8c_action_Action_AreaPerMol;
  __pyx_type_6pytraj_8c_action_8c_action_Action_AtomMap.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_AtomMap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_AtomMap.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_AtomMap", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_AtomMap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_AtomMap = &__pyx_type_6pytraj_8c_action_8c_action_Action_AtomMap;
  __pyx_type_6pytraj_8c_action_8c_action_Action_AtomicCorr.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_AtomicCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_AtomicCorr.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_AtomicCorr", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_AtomicCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_AtomicCorr = &__pyx_type_6pytraj_8c_action_8c_action_Action_AtomicCorr;
  __pyx_type_6pytraj_8c_action_8c_action_Action_AtomicFluct.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_AtomicFluct) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_AtomicFluct.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_AtomicFluct", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_AtomicFluct) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_AtomicFluct = &__pyx_type_6pytraj_8c_action_8c_action_Action_AtomicFluct;
  __pyx_type_6pytraj_8c_action_8c_action_Action_AutoImage.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_AutoImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_AutoImage.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_AutoImage", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_AutoImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_AutoImage = &__pyx_type_6pytraj_8c_action_8c_action_Action_AutoImage;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Average.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Average) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Average.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Average", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Average) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Average = &__pyx_type_6pytraj_8c_action_8c_action_Action_Average;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Bounds.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Bounds) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Bounds.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Bounds", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Bounds) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Bounds = &__pyx_type_6pytraj_8c_action_8c_action_Action_Bounds;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Box.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Box) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Box.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Box", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Box) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Box = &__pyx_type_6pytraj_8c_action_8c_action_Action_Box;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Center.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Center) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Center.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Center", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Center) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Center = &__pyx_type_6pytraj_8c_action_8c_action_Action_Center;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Channel.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Channel) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Channel.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Channel", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Channel) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Channel = &__pyx_type_6pytraj_8c_action_8c_action_Action_Channel;
  __pyx_type_6pytraj_8c_action_8c_action_Action_CheckChirality.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_CheckChirality) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_CheckChirality.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_CheckChirality", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_CheckChirality) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_CheckChirality = &__pyx_type_6pytraj_8c_action_8c_action_Action_CheckChirality;
  __pyx_type_6pytraj_8c_action_8c_action_Action_CheckStructure.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_CheckStructure) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_CheckStructure.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_CheckStructure", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_CheckStructure) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_CheckStructure = &__pyx_type_6pytraj_8c_action_8c_action_Action_CheckStructure;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Closest.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Closest) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Closest.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Closest", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Closest) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Closest = &__pyx_type_6pytraj_8c_action_8c_action_Action_Closest;
  __pyx_type_6pytraj_8c_action_8c_action_Action_ClusterDihedral.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_ClusterDihedral) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_ClusterDihedral.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_ClusterDihedral", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_ClusterDihedral) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_ClusterDihedral = &__pyx_type_6pytraj_8c_action_8c_action_Action_ClusterDihedral;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Contacts.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Contacts) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Contacts.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Contacts", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Contacts) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Contacts = &__pyx_type_6pytraj_8c_action_8c_action_Action_Contacts;
  __pyx_type_6pytraj_8c_action_8c_action_Action_CreateCrd.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_CreateCrd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_CreateCrd.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_CreateCrd", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_CreateCrd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_CreateCrd = &__pyx_type_6pytraj_8c_action_8c_action_Action_CreateCrd;
  __pyx_type_6pytraj_8c_action_8c_action_Action_DNAionTracker.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_DNAionTracker) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_DNAionTracker.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_DNAionTracker", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_DNAionTracker) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_DNAionTracker = &__pyx_type_6pytraj_8c_action_8c_action_Action_DNAionTracker;
  __pyx_type_6pytraj_8c_action_8c_action_Action_DSSP.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_DSSP) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_DSSP.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_DSSP", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_DSSP) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_DSSP = &__pyx_type_6pytraj_8c_action_8c_action_Action_DSSP;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Density.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Density) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Density.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Density", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Density) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Density = &__pyx_type_6pytraj_8c_action_8c_action_Action_Density;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Diffusion.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Diffusion) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Diffusion.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Diffusion", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Diffusion) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Diffusion = &__pyx_type_6pytraj_8c_action_8c_action_Action_Diffusion;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Dihedral.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Dihedral) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Dihedral.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Dihedral", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Dihedral) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Dihedral = &__pyx_type_6pytraj_8c_action_8c_action_Action_Dihedral;
  __pyx_type_6pytraj_8c_action_8c_action_Action_DihedralScan.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_DihedralScan) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_DihedralScan.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_DihedralScan", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_DihedralScan) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_DihedralScan = &__pyx_type_6pytraj_8c_action_8c_action_Action_DihedralScan;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Dipole.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Dipole) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Dipole.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Dipole", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Dipole) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Dipole = &__pyx_type_6pytraj_8c_action_8c_action_Action_Dipole;
  __pyx_type_6pytraj_8c_action_8c_action_Action_DistRmsd.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_DistRmsd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_DistRmsd.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_DistRmsd", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_DistRmsd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_DistRmsd = &__pyx_type_6pytraj_8c_action_8c_action_Action_DistRmsd;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Distance.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Distance) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Distance.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Distance", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Distance) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Distance = &__pyx_type_6pytraj_8c_action_8c_action_Action_Distance;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Energy.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Energy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Energy.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Energy", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Energy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Energy = &__pyx_type_6pytraj_8c_action_8c_action_Action_Energy;
  __pyx_type_6pytraj_8c_action_8c_action_Action_FilterByData.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_FilterByData) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_FilterByData.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_FilterByData", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_FilterByData) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_FilterByData = &__pyx_type_6pytraj_8c_action_8c_action_Action_FilterByData;
  __pyx_type_6pytraj_8c_action_8c_action_Action_FixAtomOrder.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_FixAtomOrder) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_FixAtomOrder.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_FixAtomOrder", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_FixAtomOrder) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_FixAtomOrder = &__pyx_type_6pytraj_8c_action_8c_action_Action_FixAtomOrder;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Gist.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Gist) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Gist.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Gist", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Gist) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Gist = &__pyx_type_6pytraj_8c_action_8c_action_Action_Gist;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Grid.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Grid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Grid.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Grid", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Grid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Grid = &__pyx_type_6pytraj_8c_action_8c_action_Action_Grid;
  __pyx_type_6pytraj_8c_action_8c_action_Action_GridFreeEnergy.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_GridFreeEnergy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_GridFreeEnergy.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_GridFreeEnergy", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_GridFreeEnergy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_GridFreeEnergy = &__pyx_type_6pytraj_8c_action_8c_action_Action_GridFreeEnergy;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Hbond.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Hbond) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Hbond.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Hbond", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Hbond) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Hbond = &__pyx_type_6pytraj_8c_action_8c_action_Action_Hbond;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Image.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Image) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Image.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Image", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Image) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Image = &__pyx_type_6pytraj_8c_action_8c_action_Action_Image;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Jcoupling.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Jcoupling) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Jcoupling.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Jcoupling", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Jcoupling) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Jcoupling = &__pyx_type_6pytraj_8c_action_8c_action_Action_Jcoupling;
  __pyx_type_6pytraj_8c_action_8c_action_Action_LESsplit.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_LESsplit) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_LESsplit.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_LESsplit", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_LESsplit) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_LESsplit = &__pyx_type_6pytraj_8c_action_8c_action_Action_LESsplit;
  __pyx_type_6pytraj_8c_action_8c_action_Action_LIE.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_LIE) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_LIE.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_LIE", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_LIE) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_LIE = &__pyx_type_6pytraj_8c_action_8c_action_Action_LIE;
  __pyx_type_6pytraj_8c_action_8c_action_Action_MakeStructure.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_MakeStructure) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_MakeStructure.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_MakeStructure", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_MakeStructure) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_MakeStructure = &__pyx_type_6pytraj_8c_action_8c_action_Action_MakeStructure;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Mask.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Mask) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Mask.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Mask", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Mask) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Mask = &__pyx_type_6pytraj_8c_action_8c_action_Action_Mask;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Matrix.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Matrix) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Matrix.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Matrix", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Matrix) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Matrix = &__pyx_type_6pytraj_8c_action_8c_action_Action_Matrix;
  __pyx_type_6pytraj_8c_action_8c_action_Action_MinImage.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_MinImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_MinImage.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_MinImage", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_MinImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_MinImage = &__pyx_type_6pytraj_8c_action_8c_action_Action_MinImage;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Molsurf.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Molsurf) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Molsurf.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Molsurf", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Molsurf) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Molsurf = &__pyx_type_6pytraj_8c_action_8c_action_Action_Molsurf;
  __pyx_type_6pytraj_8c_action_8c_action_Action_MultiDihedral.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_MultiDihedral) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_MultiDihedral.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_MultiDihedral", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_MultiDihedral) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_MultiDihedral = &__pyx_type_6pytraj_8c_action_8c_action_Action_MultiDihedral;
  __pyx_type_6pytraj_8c_action_8c_action_Action_MultiVector.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_MultiVector) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_MultiVector.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_MultiVector", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_MultiVector) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_MultiVector = &__pyx_type_6pytraj_8c_action_8c_action_Action_MultiVector;
  __pyx_type_6pytraj_8c_action_8c_action_Action_NAstruct.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_NAstruct) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_NAstruct.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_NAstruct", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_NAstruct) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_NAstruct = &__pyx_type_6pytraj_8c_action_8c_action_Action_NAstruct;
  __pyx_type_6pytraj_8c_action_8c_action_Action_NMRrst.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_NMRrst) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_NMRrst.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_NMRrst", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_NMRrst) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_NMRrst = &__pyx_type_6pytraj_8c_action_8c_action_Action_NMRrst;
  __pyx_type_6pytraj_8c_action_8c_action_Action_NativeContacts.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_NativeContacts) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_NativeContacts.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_NativeContacts", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_NativeContacts) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_NativeContacts = &__pyx_type_6pytraj_8c_action_8c_action_Action_NativeContacts;
  __pyx_type_6pytraj_8c_action_8c_action_Action_OrderParameter.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_OrderParameter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_OrderParameter.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_OrderParameter", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_OrderParameter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_OrderParameter = &__pyx_type_6pytraj_8c_action_8c_action_Action_OrderParameter;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Outtraj.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Outtraj) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Outtraj.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Outtraj", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Outtraj) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Outtraj = &__pyx_type_6pytraj_8c_action_8c_action_Action_Outtraj;
  __pyx_type_6pytraj_8c_action_8c_action_Action_PairDist.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_PairDist) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_PairDist.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_PairDist", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_PairDist) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_PairDist = &__pyx_type_6pytraj_8c_action_8c_action_Action_PairDist;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Pairwise.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Pairwise) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Pairwise.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Pairwise", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Pairwise) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Pairwise = &__pyx_type_6pytraj_8c_action_8c_action_Action_Pairwise;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Principal.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Principal) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Principal.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Principal", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Principal) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Principal = &__pyx_type_6pytraj_8c_action_8c_action_Action_Principal;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Projection.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Projection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Projection.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Projection", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Projection) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Projection = &__pyx_type_6pytraj_8c_action_8c_action_Action_Projection;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Pucker.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Pucker) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Pucker.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Pucker", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Pucker) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Pucker = &__pyx_type_6pytraj_8c_action_8c_action_Action_Pucker;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Radgyr.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Radgyr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Radgyr.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Radgyr", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Radgyr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Radgyr = &__pyx_type_6pytraj_8c_action_8c_action_Action_Radgyr;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Radial.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Radial) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Radial.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Radial", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Radial) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Radial = &__pyx_type_6pytraj_8c_action_8c_action_Action_Radial;
  __pyx_type_6pytraj_8c_action_8c_action_Action_RandomizeIons.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_RandomizeIons) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_RandomizeIons.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_RandomizeIons", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_RandomizeIons) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_RandomizeIons = &__pyx_type_6pytraj_8c_action_8c_action_Action_RandomizeIons;
  __pyx_type_6pytraj_8c_action_8c_action_Action_ReplicateCell.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_ReplicateCell) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_ReplicateCell.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_ReplicateCell", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_ReplicateCell) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_ReplicateCell = &__pyx_type_6pytraj_8c_action_8c_action_Action_ReplicateCell;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Rmsd.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Rmsd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Rmsd.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Rmsd", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Rmsd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Rmsd = &__pyx_type_6pytraj_8c_action_8c_action_Action_Rmsd;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Rotate.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Rotate) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Rotate.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Rotate", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Rotate) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Rotate = &__pyx_type_6pytraj_8c_action_8c_action_Action_Rotate;
  __pyx_type_6pytraj_8c_action_8c_action_Action_RunningAvg.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_RunningAvg) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_RunningAvg.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_RunningAvg", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_RunningAvg) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_RunningAvg = &__pyx_type_6pytraj_8c_action_8c_action_Action_RunningAvg;
  __pyx_type_6pytraj_8c_action_8c_action_Action_STFC_Diffusion.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_STFC_Diffusion) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_STFC_Diffusion.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_STFC_Diffusion", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_STFC_Diffusion) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_STFC_Diffusion = &__pyx_type_6pytraj_8c_action_8c_action_Action_STFC_Diffusion;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Scale.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Scale) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Scale.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Scale", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Scale) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Scale = &__pyx_type_6pytraj_8c_action_8c_action_Action_Scale;
  __pyx_type_6pytraj_8c_action_8c_action_Action_SetVelocity.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_SetVelocity) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_SetVelocity.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_SetVelocity", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_SetVelocity) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_SetVelocity = &__pyx_type_6pytraj_8c_action_8c_action_Action_SetVelocity;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Spam.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Spam) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Spam.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Spam", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Spam) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Spam = &__pyx_type_6pytraj_8c_action_8c_action_Action_Spam;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Strip.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Strip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Strip.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Strip", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Strip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Strip = &__pyx_type_6pytraj_8c_action_8c_action_Action_Strip;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Surf.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Surf) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Surf.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Surf", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Surf) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Surf = &__pyx_type_6pytraj_8c_action_8c_action_Action_Surf;
  __pyx_type_6pytraj_8c_action_8c_action_Action_SymmetricRmsd.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_SymmetricRmsd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_SymmetricRmsd.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_SymmetricRmsd", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_SymmetricRmsd) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_SymmetricRmsd = &__pyx_type_6pytraj_8c_action_8c_action_Action_SymmetricRmsd;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Temperature.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Temperature) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Temperature.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Temperature", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Temperature) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Temperature = &__pyx_type_6pytraj_8c_action_8c_action_Action_Temperature;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Translate.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Translate) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Translate.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Translate", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Translate) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Translate = &__pyx_type_6pytraj_8c_action_8c_action_Action_Translate;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Unwrap.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Unwrap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Unwrap.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Unwrap", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Unwrap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Unwrap = &__pyx_type_6pytraj_8c_action_8c_action_Action_Unwrap;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Vector.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Vector) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Vector.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Vector", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Vector) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Vector = &__pyx_type_6pytraj_8c_action_8c_action_Action_Vector;
  __pyx_type_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_VelocityAutoCorr", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr = &__pyx_type_6pytraj_8c_action_8c_action_Action_VelocityAutoCorr;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Volmap.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Volmap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Volmap.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Volmap", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Volmap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Volmap = &__pyx_type_6pytraj_8c_action_8c_action_Action_Volmap;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Volume.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Volume) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Volume.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Volume", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Volume) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Volume = &__pyx_type_6pytraj_8c_action_8c_action_Action_Volume;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Watershell.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Watershell) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Watershell.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Watershell", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Watershell) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Watershell = &__pyx_type_6pytraj_8c_action_8c_action_Action_Watershell;
  __pyx_type_6pytraj_8c_action_8c_action_Action_Unstrip.tp_base = __pyx_ptype_6pytraj_8c_action_8c_action_Action;
  if (PyType_Ready(&__pyx_type_6pytraj_8c_action_8c_action_Action_Unstrip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_6pytraj_8c_action_8c_action_Action_Unstrip.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Action_Unstrip", (PyObject *)&__pyx_type_6pytraj_8c_action_8c_action_Action_Unstrip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8c_action_8c_action_Action_Unstrip = &__pyx_type_6pytraj_8c_action_8c_action_Action_Unstrip;
  if (PyType_Ready(&__pyx_type___pyx_array) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type___pyx_array.tp_print = 0;
  __pyx_array_type = &__pyx_type___pyx_array;
  if (PyType_Ready(&__pyx_type___pyx_MemviewEnum) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type___pyx_MemviewEnum.tp_print = 0;
  __pyx_MemviewEnum_type = &__pyx_type___pyx_MemviewEnum;
  __pyx_vtabptr_memoryview = &__pyx_vtable_memoryview;
  __pyx_vtable_memoryview.get_item_pointer = (char *(*)(struct __pyx_memoryview_obj *, PyObject *))__pyx_memoryview_get_item_pointer;
  __pyx_vtable_memoryview.is_slice = (PyObject *(*)(struct __pyx_memoryview_obj *, PyObject *))__pyx_memoryview_is_slice;
  __pyx_vtable_memoryview.setitem_slice_assignment = (PyObject *(*)(struct __pyx_memoryview_obj *, PyObject *, PyObject *))__pyx_memoryview_setitem_slice_assignment;
  __pyx_vtable_memoryview.setitem_slice_assign_scalar = (PyObject *(*)(struct __pyx_memoryview_obj *, struct __pyx_memoryview_obj *, PyObject *))__pyx_memoryview_setitem_slice_assign_scalar;
  __pyx_vtable_memoryview.setitem_indexed = (PyObject *(*)(struct __pyx_memoryview_obj *, PyObject *, PyObject *))__pyx_memoryview_setitem_indexed;
  __pyx_vtable_memoryview.convert_item_to_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *))__pyx_memoryview_convert_item_to_object;
  __pyx_vtable_memoryview.assign_item_from_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *, PyObject *))__pyx_memoryview_assign_item_from_object;
  if (PyType_Ready(&__pyx_type___pyx_memoryview) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type___pyx_memoryview.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type___pyx_memoryview.tp_dict, __pyx_vtabptr_memoryview) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_memoryview_type = &__pyx_type___pyx_memoryview;
  __pyx_vtabptr__memoryviewslice = &__pyx_vtable__memoryviewslice;
  __pyx_vtable__memoryviewslice.__pyx_base = *__pyx_vtabptr_memoryview;
  __pyx_vtable__memoryviewslice.__pyx_base.convert_item_to_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *))__pyx_memoryviewslice_convert_item_to_object;
  __pyx_vtable__memoryviewslice.__pyx_base.assign_item_from_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *, PyObject *))__pyx_memoryviewslice_assign_item_from_object;
  __pyx_type___pyx_memoryviewslice.tp_base = __pyx_memoryview_type;
  if (PyType_Ready(&__pyx_type___pyx_memoryviewslice) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type___pyx_memoryviewslice.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type___pyx_memoryviewslice.tp_dict, __pyx_vtabptr__memoryviewslice) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_memoryviewslice_type = &__pyx_type___pyx_memoryviewslice;
  /*--- Type import code ---*/
  __pyx_ptype_6pytraj_4math_8cpp_math_Grid = __Pyx_ImportType("pytraj.math.cpp_math", "Grid", sizeof(struct __pyx_obj_6pytraj_4math_8cpp_math_Grid), 1); if (unlikely(!__pyx_ptype_6pytraj_4math_8cpp_math_Grid)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4math_8cpp_math_Matrix_3x3 = __Pyx_ImportType("pytraj.math.cpp_math", "Matrix_3x3", sizeof(struct __pyx_obj_6pytraj_4math_8cpp_math_Matrix_3x3), 1); if (unlikely(!__pyx_ptype_6pytraj_4math_8cpp_math_Matrix_3x3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4math_8cpp_math_Vec3 = __Pyx_ImportType("pytraj.math.cpp_math", "Vec3", sizeof(struct __pyx_obj_6pytraj_4math_8cpp_math_Vec3), 1); if (unlikely(!__pyx_ptype_6pytraj_4math_8cpp_math_Vec3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4math_8cpp_math_ImagedAction = __Pyx_ImportType("pytraj.math.cpp_math", "ImagedAction", sizeof(struct __pyx_obj_6pytraj_4math_8cpp_math_ImagedAction), 1); if (unlikely(!__pyx_ptype_6pytraj_4math_8cpp_math_ImagedAction)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_3box_Box = __Pyx_ImportType("pytraj.core.box", "Box", sizeof(struct __pyx_obj_6pytraj_4core_3box_Box), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_3box_Box)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_16topology_objects_Atom = __Pyx_ImportType("pytraj.core.topology_objects", "Atom", sizeof(struct __pyx_obj_6pytraj_4core_16topology_objects_Atom), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_16topology_objects_Atom)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_16topology_objects_Residue = __Pyx_ImportType("pytraj.core.topology_objects", "Residue", sizeof(struct __pyx_obj_6pytraj_4core_16topology_objects_Residue), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_16topology_objects_Residue)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_16topology_objects_Molecule = __Pyx_ImportType("pytraj.core.topology_objects", "Molecule", sizeof(struct __pyx_obj_6pytraj_4core_16topology_objects_Molecule), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_16topology_objects_Molecule)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_AngleType = __Pyx_ImportType("pytraj.core.parameter_types", "AngleType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_AngleType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_AngleType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_NonbondParmType = __Pyx_ImportType("pytraj.core.parameter_types", "NonbondParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_NonbondParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_NonbondParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_LES_AtomType = __Pyx_ImportType("pytraj.core.parameter_types", "LES_AtomType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_LES_AtomType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_LES_AtomType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_AngleParmType = __Pyx_ImportType("pytraj.core.parameter_types", "AngleParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_AngleParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_AngleParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_CmapType = __Pyx_ImportType("pytraj.core.parameter_types", "CmapType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_CmapType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_CmapType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_LES_ParmType = __Pyx_ImportType("pytraj.core.parameter_types", "LES_ParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_LES_ParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_LES_ParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_HB_ParmType = __Pyx_ImportType("pytraj.core.parameter_types", "HB_ParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_HB_ParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_HB_ParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_NonbondType = __Pyx_ImportType("pytraj.core.parameter_types", "NonbondType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_NonbondType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_NonbondType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_ChamberParmType = __Pyx_ImportType("pytraj.core.parameter_types", "ChamberParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_ChamberParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_ChamberParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_BondParmType = __Pyx_ImportType("pytraj.core.parameter_types", "BondParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_BondParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_BondParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_CmapGridType = __Pyx_ImportType("pytraj.core.parameter_types", "CmapGridType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_CmapGridType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_CmapGridType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_DihedralType = __Pyx_ImportType("pytraj.core.parameter_types", "DihedralType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_DihedralType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_DihedralType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_BondType = __Pyx_ImportType("pytraj.core.parameter_types", "BondType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_BondType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_BondType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_CapParmType = __Pyx_ImportType("pytraj.core.parameter_types", "CapParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_CapParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_CapParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_15parameter_types_DihedralParmType = __Pyx_ImportType("pytraj.core.parameter_types", "DihedralParmType", sizeof(struct __pyx_obj_6pytraj_4core_15parameter_types_DihedralParmType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_15parameter_types_DihedralParmType)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8topology_Topology = __Pyx_ImportType("pytraj.topology", "Topology", sizeof(struct __pyx_obj_6pytraj_8topology_Topology), 1); if (unlikely(!__pyx_ptype_6pytraj_8topology_Topology)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8topology_ParmFile = __Pyx_ImportType("pytraj.topology", "ParmFile", sizeof(struct __pyx_obj_6pytraj_8topology_ParmFile), 1); if (unlikely(!__pyx_ptype_6pytraj_8topology_ParmFile)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_5frame_Frame = __Pyx_ImportType("pytraj.frame", "Frame", sizeof(struct __pyx_obj_6pytraj_5frame_Frame), 1); if (unlikely(!__pyx_ptype_6pytraj_5frame_Frame)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_6pytraj_5frame_Frame = (struct __pyx_vtabstruct_6pytraj_5frame_Frame*)__Pyx_GetVtable(__pyx_ptype_6pytraj_5frame_Frame->tp_dict); if (unlikely(!__pyx_vtabptr_6pytraj_5frame_Frame)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset = __Pyx_ImportType("pytraj.datasets.c_datasets", "Dataset", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset1D = __Pyx_ImportType("pytraj.datasets.c_datasets", "Dataset1D", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset1D), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset1D)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetDouble = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetDouble", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetDouble), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetDouble)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetFloat = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetFloat", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetFloat), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetFloat)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetInteger = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetInteger", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetInteger), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetInteger)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetString = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetString", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetString), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetString)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetVector = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetVector", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetVector), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetVector)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset2D = __Pyx_ImportType("pytraj.datasets.c_datasets", "Dataset2D", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset2D), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset2D)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrixDouble = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetMatrixDouble", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrixDouble), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrixDouble)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrixFloat = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetMatrixFloat", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrixFloat), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrixFloat)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset3D = __Pyx_ImportType("pytraj.datasets.c_datasets", "Dataset3D", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_Dataset3D), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_Dataset3D)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetGridFloat = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetGridFloat", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetGridFloat), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetGridFloat)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetModes = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetModes", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetModes), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetModes)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetRemLog = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetRemLog", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetRemLog), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetRemLog)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_ReplicaFrame = __Pyx_ImportType("pytraj.datasets.c_datasets", "ReplicaFrame", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_ReplicaFrame), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_ReplicaFrame)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrix3x3 = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetMatrix3x3", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMatrix3x3), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMatrix3x3)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMesh = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetMesh", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetMesh), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetMesh)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoords = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetCoords", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoords), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoords)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoordsCRD = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetCoordsCRD", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoordsCRD), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoordsCRD)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoordsRef = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetCoordsRef", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetCoordsRef), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetCoordsRef)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetTopology = __Pyx_ImportType("pytraj.datasets.c_datasets", "DatasetTopology", sizeof(struct __pyx_obj_6pytraj_8datasets_10c_datasets_DatasetTopology), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_10c_datasets_DatasetTopology)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList = __Pyx_ImportType("pytraj.datasets.c_datasetlist", "DatasetList", sizeof(struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList), 1); if (unlikely(!__pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList)) {__pyx_filename = __pyx_f[10]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_9datafiles_9datafiles_DataFile = __Pyx_ImportType("pytraj.datafiles.datafiles", "DataFile", sizeof(struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFile), 1); if (unlikely(!__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFile)) {__pyx_filename = __pyx_f[11]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList = __Pyx_ImportType("pytraj.datafiles.datafiles", "DataFileList", sizeof(struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList), 1); if (unlikely(!__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList)) {__pyx_filename = __pyx_f[11]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_CpptrajState = __Pyx_ImportType("pytraj.core.c_core", "CpptrajState", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_CpptrajState), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_CpptrajState)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_BaseIOtype = __Pyx_ImportType("pytraj.core.c_core", "BaseIOtype", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_BaseIOtype), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_BaseIOtype)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_DispatchObject = __Pyx_ImportType("pytraj.core.c_core", "DispatchObject", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_DispatchObject), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_DispatchObject)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_FunctPtr = __Pyx_ImportType("pytraj.core.c_core", "FunctPtr", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_FunctPtr), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_FunctPtr)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_AtomMask = __Pyx_ImportType("pytraj.core.c_core", "AtomMask", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_AtomMask), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_AtomMask)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_FileName = __Pyx_ImportType("pytraj.core.c_core", "FileName", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_FileName), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_FileName)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_CoordinateInfo = __Pyx_ImportType("pytraj.core.c_core", "CoordinateInfo", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_CoordinateInfo), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_CoordinateInfo)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_CpptrajFile = __Pyx_ImportType("pytraj.core.c_core", "CpptrajFile", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_CpptrajFile), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_CpptrajFile)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_NameType = __Pyx_ImportType("pytraj.core.c_core", "NameType", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_NameType), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_NameType)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_4core_6c_core_ArgList = __Pyx_ImportType("pytraj.core.c_core", "ArgList", sizeof(struct __pyx_obj_6pytraj_4core_6c_core_ArgList), 1); if (unlikely(!__pyx_ptype_6pytraj_4core_6c_core_ArgList)) {__pyx_filename = __pyx_f[12]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6pytraj_6c_traj_12c_trajectory_TrajectoryCpptraj = __Pyx_ImportType("pytraj.c_traj.c_trajectory", "TrajectoryCpptraj", sizeof(struct __pyx_obj_6pytraj_6c_traj_12c_trajectory_TrajectoryCpptraj), 1); if (unlikely(!__pyx_ptype_6pytraj_6c_traj_12c_trajectory_TrajectoryCpptraj)) {__pyx_filename = __pyx_f[13]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif

  /* "pytraj/c_action/c_action.pyx":3
 * # distutils: language = c++
 * from __future__ import print_function
 * from pytraj.decorators import makesureABC             # <<<<<<<<<<<<<<
 * from pytraj.externals.six import string_types
 * from pytraj.utils import is_generator
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_makesureABC);
  __Pyx_GIVEREF(__pyx_n_s_makesureABC);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_makesureABC);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_pytraj_decorators, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_makesureABC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_makesureABC, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pytraj/c_action/c_action.pyx":4
 * from __future__ import print_function
 * from pytraj.decorators import makesureABC
 * from pytraj.externals.six import string_types             # <<<<<<<<<<<<<<
 * from pytraj.utils import is_generator
 * from pytraj.shared_methods import iterframe_master
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_string_types);
  __Pyx_GIVEREF(__pyx_n_s_string_types);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_string_types);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_pytraj_externals_six, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_string_types); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_string_types, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":5
 * from pytraj.decorators import makesureABC
 * from pytraj.externals.six import string_types
 * from pytraj.utils import is_generator             # <<<<<<<<<<<<<<
 * from pytraj.shared_methods import iterframe_master
 * from cython.operator cimport dereference as deref
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_is_generator);
  __Pyx_GIVEREF(__pyx_n_s_is_generator);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_is_generator);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_pytraj_utils, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_is_generator); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_is_generator, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pytraj/c_action/c_action.pyx":6
 * from pytraj.externals.six import string_types
 * from pytraj.utils import is_generator
 * from pytraj.shared_methods import iterframe_master             # <<<<<<<<<<<<<<
 * from cython.operator cimport dereference as deref
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_iterframe_master);
  __Pyx_GIVEREF(__pyx_n_s_iterframe_master);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_iterframe_master);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_pytraj_shared_methods, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_iterframe_master); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_iterframe_master, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":29
 * 
 *     def __init__(self, command='', Topology top=None, DatasetList dslist=None,
 *                  DataFileList dflist=DataFileList()):             # <<<<<<<<<<<<<<
 *         # __init__ will be called after __cinit__
 *         # create __init__ to avoid segmentation fault (why? not sure why)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__2 = ((struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":68
 *     @makesureABC("Action")
 *     def read_input(self, command='',
 *                    top=Topology(),             # <<<<<<<<<<<<<<
 *                    DatasetList dslist=DatasetList(),
 *                    DataFileList dflist=DataFileList(),
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_8topology_Topology), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__3 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":69
 *     def read_input(self, command='',
 *                    top=Topology(),
 *                    DatasetList dslist=DatasetList(),             # <<<<<<<<<<<<<<
 *                    DataFileList dflist=DataFileList(),
 *                    int debug=0):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__4 = ((struct __pyx_obj_6pytraj_8datasets_13c_datasetlist_DatasetList *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":70
 *                    top=Topology(),
 *                    DatasetList dslist=DatasetList(),
 *                    DataFileList dflist=DataFileList(),             # <<<<<<<<<<<<<<
 *                    int debug=0):
 *         """
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__5 = ((struct __pyx_obj_6pytraj_9datafiles_9datafiles_DataFileList *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":66
 *         return self._master(*args, **kwd)
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def read_input(self, command='',
 *                    top=Topology(),
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_makesureABC); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pytraj/c_action/c_action.pyx":67
 * 
 *     @makesureABC("Action")
 *     def read_input(self, command='',             # <<<<<<<<<<<<<<
 *                    top=Topology(),
 *                    DatasetList dslist=DatasetList(),
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action, __pyx_n_s_read_input); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action->tp_dict, __pyx_n_s_read_input, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6pytraj_8c_action_8c_action_Action);

  /* "pytraj/c_action/c_action.pyx":107
 * 
 *     @makesureABC("Action")
 *     def check_topology(self, Topology top=Topology(), crdinfo={}, n_frames_t=0, get_new_top=False):             # <<<<<<<<<<<<<<
 *         """pass coordinate_info
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_8topology_Topology), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__7 = ((struct __pyx_obj_6pytraj_8topology_Topology *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__8 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":106
 *             return i_fail
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def check_topology(self, Topology top=Topology(), crdinfo={}, n_frames_t=0, get_new_top=False):
 *         """pass coordinate_info
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_makesureABC); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pytraj/c_action/c_action.pyx":107
 * 
 *     @makesureABC("Action")
 *     def check_topology(self, Topology top=Topology(), crdinfo={}, n_frames_t=0, get_new_top=False):             # <<<<<<<<<<<<<<
 *         """pass coordinate_info
 * 
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action, __pyx_n_s_check_topology); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action->tp_dict, __pyx_n_s_check_topology, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6pytraj_8c_action_8c_action_Action);

  /* "pytraj/c_action/c_action.pyx":143
 *             return new_top
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def compute(self, current_frame=None, int idx=0, get_new_frame=False):
 *         """Perform action on Frame
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_makesureABC); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pytraj/c_action/c_action.pyx":144
 * 
 *     @makesureABC("Action")
 *     def compute(self, current_frame=None, int idx=0, get_new_frame=False):             # <<<<<<<<<<<<<<
 *         """Perform action on Frame
 * 
 */
  __pyx_t_5 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action, __pyx_n_s_compute); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action->tp_dict, __pyx_n_s_compute, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6pytraj_8c_action_8c_action_Action);

  /* "pytraj/c_action/c_action.pyx":173
 *                 self.compute(frame, idx=idx)
 * 
 *     @makesureABC("Action")             # <<<<<<<<<<<<<<
 *     def post_process(self):
 *         self.baseptr.Print()
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_makesureABC); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pytraj/c_action/c_action.pyx":174
 * 
 *     @makesureABC("Action")
 *     def post_process(self):             # <<<<<<<<<<<<<<
 *         self.baseptr.Print()
 * 
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action, __pyx_n_s_post_process); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6pytraj_8c_action_8c_action_Action->tp_dict, __pyx_n_s_post_process, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6pytraj_8c_action_8c_action_Action);

  /* "pytraj/c_action/c_action.pyx":178
 * 
 *     def _master(self, command='',
 *                 current_frame=Frame(),             # <<<<<<<<<<<<<<
 *                 top=Topology(),
 *                 dslist=DatasetList(),
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_5frame_Frame), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__13 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":179
 *     def _master(self, command='',
 *                 current_frame=Frame(),
 *                 top=Topology(),             # <<<<<<<<<<<<<<
 *                 dslist=DatasetList(),
 *                 dflist=DataFileList(),
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_8topology_Topology), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__14 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":180
 *                 current_frame=Frame(),
 *                 top=Topology(),
 *                 dslist=DatasetList(),             # <<<<<<<<<<<<<<
 *                 dflist=DataFileList(),
 *                 int debug=0):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_8datasets_13c_datasetlist_DatasetList), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__15 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":181
 *                 top=Topology(),
 *                 dslist=DatasetList(),
 *                 dflist=DataFileList(),             # <<<<<<<<<<<<<<
 *                 int debug=0):
 *         """create shortcut
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6pytraj_9datafiles_9datafiles_DataFileList), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__16 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pytraj/c_action/c_action.pyx":1
 * # distutils: language = c++             # <<<<<<<<<<<<<<
 * from __future__ import print_function
 * from pytraj.decorators import makesureABC
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_kp_u_Action___call___line_57, __pyx_kp_u_from_pytraj_import_traj_io_load) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "View.MemoryView":205
 *         info.obj = self
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(array self):
 */
  __pyx_t_1 = __pyx_capsule_create(((void *)(&__pyx_array_getbuffer)), __pyx_k_getbuffer_obj_view_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_array_type->tp_dict, __pyx_n_s_pyx_getbuffer, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_array_type);

  /* "View.MemoryView":278
 *         return self.name
 * 
 * cdef generic = Enum("<strided and direct or indirect>")             # <<<<<<<<<<<<<<
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(generic);
  __Pyx_DECREF_SET(generic, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":279
 * 
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default             # <<<<<<<<<<<<<<
 * cdef indirect = Enum("<strided and indirect>")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(strided);
  __Pyx_DECREF_SET(strided, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":280
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(indirect);
  __Pyx_DECREF_SET(indirect, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":283
 * 
 * 
 * cdef contiguous = Enum("<contiguous and direct>")             # <<<<<<<<<<<<<<
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(contiguous);
  __Pyx_DECREF_SET(contiguous, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":284
 * 
 * cdef contiguous = Enum("<contiguous and direct>")
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(indirect_contiguous);
  __Pyx_DECREF_SET(indirect_contiguous, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":498
 *         info.obj = self
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_capsule_create(((void *)(&__pyx_memoryview_getbuffer)), __pyx_k_getbuffer_obj_view_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_memoryview_type->tp_dict, __pyx_n_s_pyx_getbuffer, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_memoryview_type);

  /* "View.MemoryView":954
 *             return self.from_object
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_capsule_create(((void *)(&__pyx_memoryview_getbuffer)), __pyx_k_getbuffer_obj_view_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_memoryviewslice_type->tp_dict, __pyx_n_s_pyx_getbuffer, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_memoryviewslice_type);

  /* "View.MemoryView":1364
 * 
 * @cname('__pyx_memoryview__slice_assign_scalar')
 * cdef void _slice_assign_scalar(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                               Py_ssize_t *strides, int ndim,
 *                               size_t itemsize, void *item) nogil:
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init pytraj.c_action.c_action", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pytraj.c_action.c_action");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#endif
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

static CYTHON_INLINE Py_ssize_t __Pyx_div_Py_ssize_t(Py_ssize_t a, Py_ssize_t b) {
    Py_ssize_t q = a / b;
    Py_ssize_t r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_COMPILING_IN_CPYTHON
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        size_t slen = strlen(cstring);
        if (unlikely(slen > (size_t) PY_SSIZE_T_MAX)) {
            PyErr_SetString(PyExc_OverflowError,
                            "c-string too long to convert to Python");
            return NULL;
        }
        length = (Py_ssize_t) slen;
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    length = stop - start;
    if (unlikely(length <= 0))
        return PyUnicode_FromUnicode(NULL, 0);
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
#else
    PyErr_GetExcInfo(type, value, tb);
#endif
}
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(type, value, tb);
#endif
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
#else
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
#endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

static CYTHON_INLINE long __Pyx_div_long(long a, long b) {
    long q = a / b;
    long r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Action_3a__3a_RetType(Action::RetType value) {
    const Action::RetType neg_one = (Action::RetType) -1, const_zero = (Action::RetType) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(Action::RetType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Action::RetType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(Action::RetType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(Action::RetType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Action::RetType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(Action::RetType),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (PyObject_TypeCheck(obj, __pyx_array_type)) return __pyx_array_getbuffer(obj, view, flags);
        if (PyObject_TypeCheck(obj, __pyx_memoryview_type)) return __pyx_memoryview_getbuffer(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    Py_DECREF(obj);
    view->obj = NULL;
}
#endif


        static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static CYTHON_INLINE PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}
static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static CYTHON_INLINE int __Pyx_GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  if (obj == Py_None || obj == NULL) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

static int
__Pyx_init_memviewslice(struct __pyx_memoryview_obj *memview,
                        int ndim,
                        __Pyx_memviewslice *memviewslice,
                        int memview_is_new_reference)
{
    __Pyx_RefNannyDeclarations
    int i, retval=-1;
    Py_buffer *buf = &memview->view;
    __Pyx_RefNannySetupContext("init_memviewslice", 0);
    if (!buf) {
        PyErr_SetString(PyExc_ValueError,
            "buf is NULL.");
        goto fail;
    } else if (memviewslice->memview || memviewslice->data) {
        PyErr_SetString(PyExc_ValueError,
            "memviewslice is already initialized!");
        goto fail;
    }
    if (buf->strides) {
        for (i = 0; i < ndim; i++) {
            memviewslice->strides[i] = buf->strides[i];
        }
    } else {
        Py_ssize_t stride = buf->itemsize;
        for (i = ndim - 1; i >= 0; i--) {
            memviewslice->strides[i] = stride;
            stride *= buf->shape[i];
        }
    }
    for (i = 0; i < ndim; i++) {
        memviewslice->shape[i]   = buf->shape[i];
        if (buf->suboffsets) {
            memviewslice->suboffsets[i] = buf->suboffsets[i];
        } else {
            memviewslice->suboffsets[i] = -1;
        }
    }
    memviewslice->memview = memview;
    memviewslice->data = (char *)buf->buf;
    if (__pyx_add_acquisition_count(memview) == 0 && !memview_is_new_reference) {
        Py_INCREF(memview);
    }
    retval = 0;
    goto no_fail;
fail:
    memviewslice->memview = 0;
    memviewslice->data = 0;
    retval = -1;
no_fail:
    __Pyx_RefNannyFinishContext();
    return retval;
}
static CYTHON_INLINE void __pyx_fatalerror(const char *fmt, ...) {
    va_list vargs;
    char msg[200];
#ifdef HAVE_STDARG_PROTOTYPES
    va_start(vargs, fmt);
#else
    va_start(vargs);
#endif
    vsnprintf(msg, 200, fmt, vargs);
    Py_FatalError(msg);
    va_end(vargs);
}
static CYTHON_INLINE int
__pyx_add_acquisition_count_locked(__pyx_atomic_int *acquisition_count,
                                   PyThread_type_lock lock)
{
    int result;
    PyThread_acquire_lock(lock, 1);
    result = (*acquisition_count)++;
    PyThread_release_lock(lock);
    return result;
}
static CYTHON_INLINE int
__pyx_sub_acquisition_count_locked(__pyx_atomic_int *acquisition_count,
                                   PyThread_type_lock lock)
{
    int result;
    PyThread_acquire_lock(lock, 1);
    result = (*acquisition_count)--;
    PyThread_release_lock(lock);
    return result;
}
static CYTHON_INLINE void
__Pyx_INC_MEMVIEW(__Pyx_memviewslice *memslice, int have_gil, int lineno)
{
    int first_time;
    struct __pyx_memoryview_obj *memview = memslice->memview;
    if (!memview || (PyObject *) memview == Py_None)
        return;
    if (__pyx_get_slice_count(memview) < 0)
        __pyx_fatalerror("Acquisition count is %d (line %d)",
                         __pyx_get_slice_count(memview), lineno);
    first_time = __pyx_add_acquisition_count(memview) == 0;
    if (first_time) {
        if (have_gil) {
            Py_INCREF((PyObject *) memview);
        } else {
            PyGILState_STATE _gilstate = PyGILState_Ensure();
            Py_INCREF((PyObject *) memview);
            PyGILState_Release(_gilstate);
        }
    }
}
static CYTHON_INLINE void __Pyx_XDEC_MEMVIEW(__Pyx_memviewslice *memslice,
                                             int have_gil, int lineno) {
    int last_time;
    struct __pyx_memoryview_obj *memview = memslice->memview;
    if (!memview ) {
        return;
    } else if ((PyObject *) memview == Py_None) {
        memslice->memview = NULL;
        return;
    }
    if (__pyx_get_slice_count(memview) <= 0)
        __pyx_fatalerror("Acquisition count is %d (line %d)",
                         __pyx_get_slice_count(memview), lineno);
    last_time = __pyx_sub_acquisition_count(memview) == 1;
    memslice->data = NULL;
    if (last_time) {
        if (have_gil) {
            Py_CLEAR(memslice->memview);
        } else {
            PyGILState_STATE _gilstate = PyGILState_Ensure();
            Py_CLEAR(memslice->memview);
            PyGILState_Release(_gilstate);
        }
    } else {
        memslice->memview = NULL;
    }
}

static int
__pyx_memviewslice_is_contig(const __Pyx_memviewslice *mvs,
                             char order, int ndim)
{
    int i, index, step, start;
    Py_ssize_t itemsize = mvs->memview->view.itemsize;
    if (order == 'F') {
        step = 1;
        start = 0;
    } else {
        step = -1;
        start = ndim - 1;
    }
    for (i = 0; i < ndim; i++) {
        index = start + step * i;
        if (mvs->suboffsets[index] >= 0 || mvs->strides[index] != itemsize)
            return 0;
        itemsize *= mvs->shape[index];
    }
    return 1;
}

static void
__pyx_get_array_memory_extents(__Pyx_memviewslice *slice,
                               void **out_start, void **out_end,
                               int ndim, size_t itemsize)
{
    char *start, *end;
    int i;
    start = end = slice->data;
    for (i = 0; i < ndim; i++) {
        Py_ssize_t stride = slice->strides[i];
        Py_ssize_t extent = slice->shape[i];
        if (extent == 0) {
            *out_start = *out_end = start;
            return;
        } else {
            if (stride > 0)
                end += stride * (extent - 1);
            else
                start += stride * (extent - 1);
        }
    }
    *out_start = start;
    *out_end = end + itemsize;
}
static int
__pyx_slices_overlap(__Pyx_memviewslice *slice1,
                     __Pyx_memviewslice *slice2,
                     int ndim, size_t itemsize)
{
    void *start1, *end1, *start2, *end2;
    __pyx_get_array_memory_extents(slice1, &start1, &end1, ndim, itemsize);
    __pyx_get_array_memory_extents(slice2, &start2, &end2, ndim, itemsize);
    return (start1 < end2) && (start2 < end1);
}

static __Pyx_memviewslice
__pyx_memoryview_copy_new_contig(const __Pyx_memviewslice *from_mvs,
                                 const char *mode, int ndim,
                                 size_t sizeof_dtype, int contig_flag,
                                 int dtype_is_object)
{
    __Pyx_RefNannyDeclarations
    int i;
    __Pyx_memviewslice new_mvs = { 0, 0, { 0 }, { 0 }, { 0 } };
    struct __pyx_memoryview_obj *from_memview = from_mvs->memview;
    Py_buffer *buf = &from_memview->view;
    PyObject *shape_tuple = NULL;
    PyObject *temp_int = NULL;
    struct __pyx_array_obj *array_obj = NULL;
    struct __pyx_memoryview_obj *memview_obj = NULL;
    __Pyx_RefNannySetupContext("__pyx_memoryview_copy_new_contig", 0);
    for (i = 0; i < ndim; i++) {
        if (from_mvs->suboffsets[i] >= 0) {
            PyErr_Format(PyExc_ValueError, "Cannot copy memoryview slice with "
                                           "indirect dimensions (axis %d)", i);
            goto fail;
        }
    }
    shape_tuple = PyTuple_New(ndim);
    if (unlikely(!shape_tuple)) {
        goto fail;
    }
    __Pyx_GOTREF(shape_tuple);
    for(i = 0; i < ndim; i++) {
        temp_int = PyInt_FromSsize_t(from_mvs->shape[i]);
        if(unlikely(!temp_int)) {
            goto fail;
        } else {
            PyTuple_SET_ITEM(shape_tuple, i, temp_int);
            temp_int = NULL;
        }
    }
    array_obj = __pyx_array_new(shape_tuple, sizeof_dtype, buf->format, (char *) mode, NULL);
    if (unlikely(!array_obj)) {
        goto fail;
    }
    __Pyx_GOTREF(array_obj);
    memview_obj = (struct __pyx_memoryview_obj *) __pyx_memoryview_new(
                                    (PyObject *) array_obj, contig_flag,
                                    dtype_is_object,
                                    from_mvs->memview->typeinfo);
    if (unlikely(!memview_obj))
        goto fail;
    if (unlikely(__Pyx_init_memviewslice(memview_obj, ndim, &new_mvs, 1) < 0))
        goto fail;
    if (unlikely(__pyx_memoryview_copy_contents(*from_mvs, new_mvs, ndim, ndim,
                                                dtype_is_object) < 0))
        goto fail;
    goto no_fail;
fail:
    __Pyx_XDECREF(new_mvs.memview);
    new_mvs.memview = NULL;
    new_mvs.data = NULL;
no_fail:
    __Pyx_XDECREF(shape_tuple);
    __Pyx_XDECREF(temp_int);
    __Pyx_XDECREF(array_obj);
    __Pyx_RefNannyFinishContext();
    return new_mvs;
}

static CYTHON_INLINE PyObject *
__pyx_capsule_create(void *p, CYTHON_UNUSED const char *sig)
{
    PyObject *cobj;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(p, sig, NULL);
#else
    cobj = PyCObject_FromVoidPtr(p, NULL);
#endif
    return cobj;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *x) {
    const char neg_one = (char) -1, const_zero = (char) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(char) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(char, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (char) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (char) 0;
                case  1: __PYX_VERIFY_RETURN_INT(char, digit, digits[0])
                case 2:
                    if (8 * sizeof(char) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) >= 2 * PyLong_SHIFT) {
                            return (char) (((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(char) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) >= 3 * PyLong_SHIFT) {
                            return (char) (((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(char) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) >= 4 * PyLong_SHIFT) {
                            return (char) (((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (char) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(char) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(char) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (char) 0;
                case -1: __PYX_VERIFY_RETURN_INT(char, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(char,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(char) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 2 * PyLong_SHIFT) {
                            return (char) (((char)-1)*(((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(char) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 2 * PyLong_SHIFT) {
                            return (char) ((((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(char) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 3 * PyLong_SHIFT) {
                            return (char) (((char)-1)*(((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(char) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 3 * PyLong_SHIFT) {
                            return (char) ((((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(char) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 4 * PyLong_SHIFT) {
                            return (char) (((char)-1)*(((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(char) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 4 * PyLong_SHIFT) {
                            return (char) ((((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(char) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, long, PyLong_AsLong(x))
            } else if (sizeof(char) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            char val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (char) -1;
        }
    } else {
        char val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (char) -1;
        val = __Pyx_PyInt_As_char(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to char");
    return (char) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to char");
    return (char) -1;
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
